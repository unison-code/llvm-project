--- |
  ; ModuleID = 'dummy.ll'
...
---
name:            AllocFancyAli
alignment:       4
exposesReturnsTwice: false
hasInlineAsm:    false
isSSA:           true
tracksRegLiveness: true
tracksSubRegLiveness: false
registers:       
  - { id: 0, class: intregs }
  - { id: 1, class: intregs }
  - { id: 2, class: intregs }
  - { id: 3, class: intregs }
frameInfo:       
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    0
  adjustsStack:    false
  hasCalls:        true
  maxCallFrameSize: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
body:             |
  bb.0 (%ir-block.0, freq 8):
    liveouts: %r0
  
    ADJCALLSTACKDOWN 0, implicit-def dead %r29, implicit-def dead %r30, implicit %r31, implicit %r30, implicit %r29
    %0 = A2_tfrsi @.str, <0x26cfe80> = !{!"unison-property", !"constant-extended"}
    %1 = A2_tfrsi 117
    %2 = A2_tfrsi 40
    %r0 = COPY %0
    %r1 = COPY %1
    %r2 = COPY %2
    J2_call @sre_malloc, implicit-def %d0, implicit-def dead %d1, implicit-def dead %d2, implicit-def dead %d3, implicit-def dead %d4, implicit-def dead %d5, implicit-def dead %d6, implicit-def dead %d7, implicit-def dead %r28, implicit-def dead %r31, implicit-def dead %p0, implicit-def dead %p1, implicit-def dead %p2, implicit-def dead %p3, implicit-def dead %m0, implicit-def dead %m1, implicit-def dead %lc0, implicit-def dead %lc1, implicit-def dead %sa0, implicit-def dead %sa1, implicit-def dead %usr, implicit-def dead %usr_ovf, implicit %r0, implicit %r1, implicit %r2
    ADJCALLSTACKUP 0, 0, implicit-def dead %r29, implicit-def dead %r30, implicit-def dead %r31, implicit %r29
    %3 = COPY %r0
    S4_storeiri_io %3, 16, 0, <0x26de980> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.1 + 16)
    S4_storeiri_io %3, 12, 0, <0x26dea90> = !{!"unison-memory-partition", i32 1} :: (store 4 into %ir.1 + 12)
    S4_storeiri_io %3, 8, 0, <0x26deba0> = !{!"unison-memory-partition", i32 2} :: (store 4 into %ir.1 + 8)
    S4_storeiri_io %3, 4, 0, <0x26decb0> = !{!"unison-memory-partition", i32 3} :: (store 4 into %ir.1 + 4)
    S4_storeiri_io %3, 0, 0, <0x26ded80> = !{!"unison-memory-partition", i32 4} :: (store 4 into %ir.1)
    S4_storeiri_io %3, 36, 0, <0x26dee90> = !{!"unison-memory-partition", i32 5} :: (store 4 into %ir.cgep + 12)
    S4_storeiri_io %3, 32, 0, <0x26defa0> = !{!"unison-memory-partition", i32 6} :: (store 4 into %ir.cgep + 8)
    S4_storeiri_io %3, 28, 0, <0x26df0b0> = !{!"unison-memory-partition", i32 7} :: (store 4 into %ir.cgep + 4)
    S4_storeiri_io %3, 24, 0, <0x26df180> = !{!"unison-memory-partition", i32 8} :: (store 4 into %ir.cgep)
    %r0 = COPY %3
    JMPret %r31, implicit-def dead %pc, implicit %r0

...
---
unison-test-mir-version: null
unison-test-target: Hexagon
unison-test-goal:
- size
unison-test-expected-cost:
- 14
unison-test-function: null
unison-test-expected-proven: true
unison-test-strictly-better: null
unison-test-expected-has-solution: false
...
