# After Instruction Selection:
# Machine code for function pushdecl_top_level: SSA
Function Live Ins: %R0 in %vreg0

BB#0: derived from LLVM BB %0
    Live Ins: %R0
	%vreg0<def> = COPY %R0; IntRegs:%vreg0
	%vreg1<def> = L4_loadri_abs <ga:@current_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] IntRegs:%vreg1
	%vreg2<def> = L4_loadri_abs <ga:@global_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)] IntRegs:%vreg2
	S2_storeriabs <ga:@current_binding_level>, %vreg2<kill>; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] IntRegs:%vreg2
	ADJCALLSTACKDOWN 0, %R29<imp-def,dead>, %R30<imp-def,dead>, %R31<imp-use>, %R30<imp-use>, %R29<imp-use>
	%R0<def> = COPY %vreg0; IntRegs:%vreg0
	J2_call <ga:@pushdecl>, %D0<imp-def>, %R31<imp-def,dead>, %R0<imp-use>, ...
	ADJCALLSTACKUP 0, 0, %R29<imp-def,dead>, %R30<imp-def,dead>, %R31<imp-def,dead>, %R29<imp-use>
	%vreg3<def> = COPY %R0; IntRegs:%vreg3
	S2_storeriabs <ga:@current_binding_level>, %vreg1<kill>; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] IntRegs:%vreg1
	%R0<def> = COPY %vreg3; IntRegs:%vreg3
	JMPret %R31, %PC<imp-def,dead>, %R0<imp-use>

# End machine code for function pushdecl_top_level.

# After Expand ISel Pseudo-instructions:
# Machine code for function pushdecl_top_level: SSA
Function Live Ins: %R0 in %vreg0

BB#0: derived from LLVM BB %0
    Live Ins: %R0
	%vreg0<def> = COPY %R0; IntRegs:%vreg0
	%vreg1<def> = L4_loadri_abs <ga:@current_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] IntRegs:%vreg1
	%vreg2<def> = L4_loadri_abs <ga:@global_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)] IntRegs:%vreg2
	S2_storeriabs <ga:@current_binding_level>, %vreg2<kill>; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] IntRegs:%vreg2
	ADJCALLSTACKDOWN 0, %R29<imp-def,dead>, %R30<imp-def,dead>, %R31<imp-use>, %R30<imp-use>, %R29<imp-use>
	%R0<def> = COPY %vreg0; IntRegs:%vreg0
	J2_call <ga:@pushdecl>, %D0<imp-def>, %R31<imp-def,dead>, %R0<imp-use>, ...
	ADJCALLSTACKUP 0, 0, %R29<imp-def,dead>, %R30<imp-def,dead>, %R31<imp-def,dead>, %R29<imp-use>
	%vreg3<def> = COPY %R0; IntRegs:%vreg3
	S2_storeriabs <ga:@current_binding_level>, %vreg1<kill>; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] IntRegs:%vreg1
	%R0<def> = COPY %vreg3; IntRegs:%vreg3
	JMPret %R31, %PC<imp-def,dead>, %R0<imp-use>

# End machine code for function pushdecl_top_level.

# After Tail Duplication:
# Machine code for function pushdecl_top_level: SSA
Function Live Ins: %R0 in %vreg0

BB#0: derived from LLVM BB %0
    Live Ins: %R0
	%vreg0<def> = COPY %R0; IntRegs:%vreg0
	%vreg1<def> = L4_loadri_abs <ga:@current_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] IntRegs:%vreg1
	%vreg2<def> = L4_loadri_abs <ga:@global_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)] IntRegs:%vreg2
	S2_storeriabs <ga:@current_binding_level>, %vreg2<kill>; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] IntRegs:%vreg2
	ADJCALLSTACKDOWN 0, %R29<imp-def,dead>, %R30<imp-def,dead>, %R31<imp-use>, %R30<imp-use>, %R29<imp-use>
	%R0<def> = COPY %vreg0; IntRegs:%vreg0
	J2_call <ga:@pushdecl>, %D0<imp-def>, %R31<imp-def,dead>, %R0<imp-use>, ...
	ADJCALLSTACKUP 0, 0, %R29<imp-def,dead>, %R30<imp-def,dead>, %R31<imp-def,dead>, %R29<imp-use>
	%vreg3<def> = COPY %R0; IntRegs:%vreg3
	S2_storeriabs <ga:@current_binding_level>, %vreg1<kill>; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] IntRegs:%vreg1
	%R0<def> = COPY %vreg3; IntRegs:%vreg3
	JMPret %R31, %PC<imp-def,dead>, %R0<imp-use>

# End machine code for function pushdecl_top_level.

# After Optimize machine instruction PHIs:
# Machine code for function pushdecl_top_level: SSA
Function Live Ins: %R0 in %vreg0

BB#0: derived from LLVM BB %0
    Live Ins: %R0
	%vreg0<def> = COPY %R0; IntRegs:%vreg0
	%vreg1<def> = L4_loadri_abs <ga:@current_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] IntRegs:%vreg1
	%vreg2<def> = L4_loadri_abs <ga:@global_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)] IntRegs:%vreg2
	S2_storeriabs <ga:@current_binding_level>, %vreg2<kill>; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] IntRegs:%vreg2
	ADJCALLSTACKDOWN 0, %R29<imp-def,dead>, %R30<imp-def,dead>, %R31<imp-use>, %R30<imp-use>, %R29<imp-use>
	%R0<def> = COPY %vreg0; IntRegs:%vreg0
	J2_call <ga:@pushdecl>, %D0<imp-def>, %R31<imp-def,dead>, %R0<imp-use>, ...
	ADJCALLSTACKUP 0, 0, %R29<imp-def,dead>, %R30<imp-def,dead>, %R31<imp-def,dead>, %R29<imp-use>
	%vreg3<def> = COPY %R0; IntRegs:%vreg3
	S2_storeriabs <ga:@current_binding_level>, %vreg1<kill>; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] IntRegs:%vreg1
	%R0<def> = COPY %vreg3; IntRegs:%vreg3
	JMPret %R31, %PC<imp-def,dead>, %R0<imp-use>

# End machine code for function pushdecl_top_level.

# After Merge disjoint stack slots:
# Machine code for function pushdecl_top_level: SSA
Function Live Ins: %R0 in %vreg0

BB#0: derived from LLVM BB %0
    Live Ins: %R0
	%vreg0<def> = COPY %R0; IntRegs:%vreg0
	%vreg1<def> = L4_loadri_abs <ga:@current_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] IntRegs:%vreg1
	%vreg2<def> = L4_loadri_abs <ga:@global_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)] IntRegs:%vreg2
	S2_storeriabs <ga:@current_binding_level>, %vreg2<kill>; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] IntRegs:%vreg2
	ADJCALLSTACKDOWN 0, %R29<imp-def,dead>, %R30<imp-def,dead>, %R31<imp-use>, %R30<imp-use>, %R29<imp-use>
	%R0<def> = COPY %vreg0; IntRegs:%vreg0
	J2_call <ga:@pushdecl>, %D0<imp-def>, %R31<imp-def,dead>, %R0<imp-use>, ...
	ADJCALLSTACKUP 0, 0, %R29<imp-def,dead>, %R30<imp-def,dead>, %R31<imp-def,dead>, %R29<imp-use>
	%vreg3<def> = COPY %R0; IntRegs:%vreg3
	S2_storeriabs <ga:@current_binding_level>, %vreg1<kill>; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] IntRegs:%vreg1
	%R0<def> = COPY %vreg3; IntRegs:%vreg3
	JMPret %R31, %PC<imp-def,dead>, %R0<imp-use>

# End machine code for function pushdecl_top_level.

# After Local Stack Slot Allocation:
# Machine code for function pushdecl_top_level: SSA
Function Live Ins: %R0 in %vreg0

BB#0: derived from LLVM BB %0
    Live Ins: %R0
	%vreg0<def> = COPY %R0; IntRegs:%vreg0
	%vreg1<def> = L4_loadri_abs <ga:@current_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] IntRegs:%vreg1
	%vreg2<def> = L4_loadri_abs <ga:@global_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)] IntRegs:%vreg2
	S2_storeriabs <ga:@current_binding_level>, %vreg2<kill>; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] IntRegs:%vreg2
	ADJCALLSTACKDOWN 0, %R29<imp-def,dead>, %R30<imp-def,dead>, %R31<imp-use>, %R30<imp-use>, %R29<imp-use>
	%R0<def> = COPY %vreg0; IntRegs:%vreg0
	J2_call <ga:@pushdecl>, %D0<imp-def>, %R31<imp-def,dead>, %R0<imp-use>, ...
	ADJCALLSTACKUP 0, 0, %R29<imp-def,dead>, %R30<imp-def,dead>, %R31<imp-def,dead>, %R29<imp-use>
	%vreg3<def> = COPY %R0; IntRegs:%vreg3
	S2_storeriabs <ga:@current_binding_level>, %vreg1<kill>; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] IntRegs:%vreg1
	%R0<def> = COPY %vreg3; IntRegs:%vreg3
	JMPret %R31, %PC<imp-def,dead>, %R0<imp-use>

# End machine code for function pushdecl_top_level.

# After Remove dead machine instructions:
# Machine code for function pushdecl_top_level: SSA
Function Live Ins: %R0 in %vreg0

BB#0: derived from LLVM BB %0
    Live Ins: %R0
	%vreg0<def> = COPY %R0; IntRegs:%vreg0
	%vreg1<def> = L4_loadri_abs <ga:@current_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] IntRegs:%vreg1
	%vreg2<def> = L4_loadri_abs <ga:@global_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)] IntRegs:%vreg2
	S2_storeriabs <ga:@current_binding_level>, %vreg2<kill>; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] IntRegs:%vreg2
	ADJCALLSTACKDOWN 0, %R29<imp-def,dead>, %R30<imp-def,dead>, %R31<imp-use>, %R30<imp-use>, %R29<imp-use>
	%R0<def> = COPY %vreg0; IntRegs:%vreg0
	J2_call <ga:@pushdecl>, %D0<imp-def>, %R31<imp-def,dead>, %R0<imp-use>, ...
	ADJCALLSTACKUP 0, 0, %R29<imp-def,dead>, %R30<imp-def,dead>, %R31<imp-def,dead>, %R29<imp-use>
	%vreg3<def> = COPY %R0; IntRegs:%vreg3
	S2_storeriabs <ga:@current_binding_level>, %vreg1<kill>; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] IntRegs:%vreg1
	%R0<def> = COPY %vreg3; IntRegs:%vreg3
	JMPret %R31, %PC<imp-def,dead>, %R0<imp-use>

# End machine code for function pushdecl_top_level.

# After Machine Loop Invariant Code Motion:
# Machine code for function pushdecl_top_level: SSA
Function Live Ins: %R0 in %vreg0

BB#0: derived from LLVM BB %0
    Live Ins: %R0
	%vreg0<def> = COPY %R0; IntRegs:%vreg0
	%vreg1<def> = L4_loadri_abs <ga:@current_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] IntRegs:%vreg1
	%vreg2<def> = L4_loadri_abs <ga:@global_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)] IntRegs:%vreg2
	S2_storeriabs <ga:@current_binding_level>, %vreg2<kill>; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] IntRegs:%vreg2
	ADJCALLSTACKDOWN 0, %R29<imp-def,dead>, %R30<imp-def,dead>, %R31<imp-use>, %R30<imp-use>, %R29<imp-use>
	%R0<def> = COPY %vreg0; IntRegs:%vreg0
	J2_call <ga:@pushdecl>, %D0<imp-def>, %R31<imp-def,dead>, %R0<imp-use>, ...
	ADJCALLSTACKUP 0, 0, %R29<imp-def,dead>, %R30<imp-def,dead>, %R31<imp-def,dead>, %R29<imp-use>
	%vreg3<def> = COPY %R0; IntRegs:%vreg3
	S2_storeriabs <ga:@current_binding_level>, %vreg1<kill>; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] IntRegs:%vreg1
	%R0<def> = COPY %vreg3; IntRegs:%vreg3
	JMPret %R31, %PC<imp-def,dead>, %R0<imp-use>

# End machine code for function pushdecl_top_level.

# After Machine Common Subexpression Elimination:
# Machine code for function pushdecl_top_level: SSA
Function Live Ins: %R0 in %vreg0

BB#0: derived from LLVM BB %0
    Live Ins: %R0
	%vreg0<def> = COPY %R0; IntRegs:%vreg0
	%vreg1<def> = L4_loadri_abs <ga:@current_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] IntRegs:%vreg1
	%vreg2<def> = L4_loadri_abs <ga:@global_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)] IntRegs:%vreg2
	S2_storeriabs <ga:@current_binding_level>, %vreg2<kill>; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] IntRegs:%vreg2
	ADJCALLSTACKDOWN 0, %R29<imp-def,dead>, %R30<imp-def,dead>, %R31<imp-use>, %R30<imp-use>, %R29<imp-use>
	%R0<def> = COPY %vreg0; IntRegs:%vreg0
	J2_call <ga:@pushdecl>, %D0<imp-def>, %R31<imp-def,dead>, %R0<imp-use>, ...
	ADJCALLSTACKUP 0, 0, %R29<imp-def,dead>, %R30<imp-def,dead>, %R31<imp-def,dead>, %R29<imp-use>
	%vreg3<def> = COPY %R0; IntRegs:%vreg3
	S2_storeriabs <ga:@current_binding_level>, %vreg1<kill>; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] IntRegs:%vreg1
	%R0<def> = COPY %vreg3; IntRegs:%vreg3
	JMPret %R31, %PC<imp-def,dead>, %R0<imp-use>

# End machine code for function pushdecl_top_level.

# After Machine code sinking:
# Machine code for function pushdecl_top_level: SSA
Function Live Ins: %R0 in %vreg0

BB#0: derived from LLVM BB %0
    Live Ins: %R0
	%vreg0<def> = COPY %R0; IntRegs:%vreg0
	%vreg1<def> = L4_loadri_abs <ga:@current_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] IntRegs:%vreg1
	%vreg2<def> = L4_loadri_abs <ga:@global_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)] IntRegs:%vreg2
	S2_storeriabs <ga:@current_binding_level>, %vreg2<kill>; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] IntRegs:%vreg2
	ADJCALLSTACKDOWN 0, %R29<imp-def,dead>, %R30<imp-def,dead>, %R31<imp-use>, %R30<imp-use>, %R29<imp-use>
	%R0<def> = COPY %vreg0; IntRegs:%vreg0
	J2_call <ga:@pushdecl>, %D0<imp-def>, %R31<imp-def,dead>, %R0<imp-use>, ...
	ADJCALLSTACKUP 0, 0, %R29<imp-def,dead>, %R30<imp-def,dead>, %R31<imp-def,dead>, %R29<imp-use>
	%vreg3<def> = COPY %R0; IntRegs:%vreg3
	S2_storeriabs <ga:@current_binding_level>, %vreg1<kill>; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] IntRegs:%vreg1
	%R0<def> = COPY %vreg3; IntRegs:%vreg3
	JMPret %R31, %PC<imp-def,dead>, %R0<imp-use>

# End machine code for function pushdecl_top_level.

# After Peephole Optimizations:
# Machine code for function pushdecl_top_level: SSA
Function Live Ins: %R0 in %vreg0

BB#0: derived from LLVM BB %0
    Live Ins: %R0
	%vreg0<def> = COPY %R0; IntRegs:%vreg0
	%vreg1<def> = L4_loadri_abs <ga:@current_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] IntRegs:%vreg1
	%vreg2<def> = L4_loadri_abs <ga:@global_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)] IntRegs:%vreg2
	S2_storeriabs <ga:@current_binding_level>, %vreg2<kill>; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] IntRegs:%vreg2
	ADJCALLSTACKDOWN 0, %R29<imp-def,dead>, %R30<imp-def,dead>, %R31<imp-use>, %R30<imp-use>, %R29<imp-use>
	%R0<def> = COPY %vreg0; IntRegs:%vreg0
	J2_call <ga:@pushdecl>, %D0<imp-def>, %R31<imp-def,dead>, %R0<imp-use>, ...
	ADJCALLSTACKUP 0, 0, %R29<imp-def,dead>, %R30<imp-def,dead>, %R31<imp-def,dead>, %R29<imp-use>
	%vreg3<def> = COPY %R0; IntRegs:%vreg3
	S2_storeriabs <ga:@current_binding_level>, %vreg1<kill>; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] IntRegs:%vreg1
	%R0<def> = COPY %vreg3; IntRegs:%vreg3
	JMPret %R31, %PC<imp-def,dead>, %R0<imp-use>

# End machine code for function pushdecl_top_level.

# After Remove dead machine instructions:
# Machine code for function pushdecl_top_level: SSA
Function Live Ins: %R0 in %vreg0

BB#0: derived from LLVM BB %0
    Live Ins: %R0
	%vreg0<def> = COPY %R0; IntRegs:%vreg0
	%vreg1<def> = L4_loadri_abs <ga:@current_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] IntRegs:%vreg1
	%vreg2<def> = L4_loadri_abs <ga:@global_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)] IntRegs:%vreg2
	S2_storeriabs <ga:@current_binding_level>, %vreg2<kill>; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] IntRegs:%vreg2
	ADJCALLSTACKDOWN 0, %R29<imp-def,dead>, %R30<imp-def,dead>, %R31<imp-use>, %R30<imp-use>, %R29<imp-use>
	%R0<def> = COPY %vreg0; IntRegs:%vreg0
	J2_call <ga:@pushdecl>, %D0<imp-def>, %R31<imp-def,dead>, %R0<imp-use>, ...
	ADJCALLSTACKUP 0, 0, %R29<imp-def,dead>, %R30<imp-def,dead>, %R31<imp-def,dead>, %R29<imp-use>
	%vreg3<def> = COPY %R0; IntRegs:%vreg3
	S2_storeriabs <ga:@current_binding_level>, %vreg1<kill>; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] IntRegs:%vreg1
	%R0<def> = COPY %vreg3; IntRegs:%vreg3
	JMPret %R31, %PC<imp-def,dead>, %R0<imp-use>

# End machine code for function pushdecl_top_level.

# After Hexagon Store Widening:
# Machine code for function pushdecl_top_level: SSA
Function Live Ins: %R0 in %vreg0

BB#0: derived from LLVM BB %0
    Live Ins: %R0
	%vreg0<def> = COPY %R0; IntRegs:%vreg0
	%vreg1<def> = L4_loadri_abs <ga:@current_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] IntRegs:%vreg1
	%vreg2<def> = L4_loadri_abs <ga:@global_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)] IntRegs:%vreg2
	S2_storeriabs <ga:@current_binding_level>, %vreg2<kill>; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] IntRegs:%vreg2
	ADJCALLSTACKDOWN 0, %R29<imp-def,dead>, %R30<imp-def,dead>, %R31<imp-use>, %R30<imp-use>, %R29<imp-use>
	%R0<def> = COPY %vreg0; IntRegs:%vreg0
	J2_call <ga:@pushdecl>, %D0<imp-def>, %R31<imp-def,dead>, %R0<imp-use>, ...
	ADJCALLSTACKUP 0, 0, %R29<imp-def,dead>, %R30<imp-def,dead>, %R31<imp-def,dead>, %R29<imp-use>
	%vreg3<def> = COPY %R0; IntRegs:%vreg3
	S2_storeriabs <ga:@current_binding_level>, %vreg1<kill>; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] IntRegs:%vreg1
	%R0<def> = COPY %vreg3; IntRegs:%vreg3
	JMPret %R31, %PC<imp-def,dead>, %R0<imp-use>

# End machine code for function pushdecl_top_level.

# After Hexagon Hardware Loops:
# Machine code for function pushdecl_top_level: SSA
Function Live Ins: %R0 in %vreg0

BB#0: derived from LLVM BB %0
    Live Ins: %R0
	%vreg0<def> = COPY %R0; IntRegs:%vreg0
	%vreg1<def> = L4_loadri_abs <ga:@current_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] IntRegs:%vreg1
	%vreg2<def> = L4_loadri_abs <ga:@global_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)] IntRegs:%vreg2
	S2_storeriabs <ga:@current_binding_level>, %vreg2<kill>; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] IntRegs:%vreg2
	ADJCALLSTACKDOWN 0, %R29<imp-def,dead>, %R30<imp-def,dead>, %R31<imp-use>, %R30<imp-use>, %R29<imp-use>
	%R0<def> = COPY %vreg0; IntRegs:%vreg0
	J2_call <ga:@pushdecl>, %D0<imp-def>, %R31<imp-def,dead>, %R0<imp-use>, ...
	ADJCALLSTACKUP 0, 0, %R29<imp-def,dead>, %R30<imp-def,dead>, %R31<imp-def,dead>, %R29<imp-use>
	%vreg3<def> = COPY %R0; IntRegs:%vreg3
	S2_storeriabs <ga:@current_binding_level>, %vreg1<kill>; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] IntRegs:%vreg1
	%R0<def> = COPY %vreg3; IntRegs:%vreg3
	JMPret %R31, %PC<imp-def,dead>, %R0<imp-use>

# End machine code for function pushdecl_top_level.

# After Process Implicit Definitions:
# Machine code for function pushdecl_top_level: SSA
Function Live Ins: %R0 in %vreg0

BB#0: derived from LLVM BB %0
    Live Ins: %R0
	%vreg0<def> = COPY %R0; IntRegs:%vreg0
	%vreg1<def> = L4_loadri_abs <ga:@current_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] IntRegs:%vreg1
	%vreg2<def> = L4_loadri_abs <ga:@global_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)] IntRegs:%vreg2
	S2_storeriabs <ga:@current_binding_level>, %vreg2<kill>; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] IntRegs:%vreg2
	ADJCALLSTACKDOWN 0, %R29<imp-def,dead>, %R30<imp-def,dead>, %R31<imp-use>, %R30<imp-use>, %R29<imp-use>
	%R0<def> = COPY %vreg0; IntRegs:%vreg0
	J2_call <ga:@pushdecl>, %D0<imp-def>, %R31<imp-def,dead>, %R0<imp-use>, ...
	ADJCALLSTACKUP 0, 0, %R29<imp-def,dead>, %R30<imp-def,dead>, %R31<imp-def,dead>, %R29<imp-use>
	%vreg3<def> = COPY %R0; IntRegs:%vreg3
	S2_storeriabs <ga:@current_binding_level>, %vreg1<kill>; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] IntRegs:%vreg1
	%R0<def> = COPY %vreg3; IntRegs:%vreg3
	JMPret %R31, %PC<imp-def,dead>, %R0<imp-use>

# End machine code for function pushdecl_top_level.

# After Live Variable Analysis:
# Machine code for function pushdecl_top_level: SSA
Function Live Ins: %R0 in %vreg0

BB#0: derived from LLVM BB %0
    Live Ins: %R0
	%vreg0<def> = COPY %R0<kill>; IntRegs:%vreg0
	%vreg1<def> = L4_loadri_abs <ga:@current_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] IntRegs:%vreg1
	%vreg2<def> = L4_loadri_abs <ga:@global_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)] IntRegs:%vreg2
	S2_storeriabs <ga:@current_binding_level>, %vreg2<kill>; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] IntRegs:%vreg2
	ADJCALLSTACKDOWN 0, %R29<imp-def,dead>, %R30<imp-def,dead>, %R31<imp-use>, %R30<imp-use>, %R29<imp-use>
	%R0<def> = COPY %vreg0<kill>; IntRegs:%vreg0
	J2_call <ga:@pushdecl>, %D0<imp-def,dead>, %R31<imp-def,dead>, %R0<imp-use,kill>, %R0<imp-def>, ...
	ADJCALLSTACKUP 0, 0, %R29<imp-def,dead>, %R30<imp-def,dead>, %R31<imp-def,dead>, %R29<imp-use>
	%vreg3<def> = COPY %R0<kill>; IntRegs:%vreg3
	S2_storeriabs <ga:@current_binding_level>, %vreg1<kill>; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] IntRegs:%vreg1
	%R0<def> = COPY %vreg3<kill>; IntRegs:%vreg3
	JMPret %R31, %PC<imp-def,dead>, %R0<imp-use,kill>

# End machine code for function pushdecl_top_level.

# After Machine Natural Loop Construction:
# Machine code for function pushdecl_top_level: SSA
Function Live Ins: %R0 in %vreg0

BB#0: derived from LLVM BB %0
    Live Ins: %R0
	%vreg0<def> = COPY %R0<kill>; IntRegs:%vreg0
	%vreg1<def> = L4_loadri_abs <ga:@current_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] IntRegs:%vreg1
	%vreg2<def> = L4_loadri_abs <ga:@global_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)] IntRegs:%vreg2
	S2_storeriabs <ga:@current_binding_level>, %vreg2<kill>; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] IntRegs:%vreg2
	ADJCALLSTACKDOWN 0, %R29<imp-def,dead>, %R30<imp-def,dead>, %R31<imp-use>, %R30<imp-use>, %R29<imp-use>
	%R0<def> = COPY %vreg0<kill>; IntRegs:%vreg0
	J2_call <ga:@pushdecl>, %D0<imp-def,dead>, %R31<imp-def,dead>, %R0<imp-use,kill>, %R0<imp-def>, ...
	ADJCALLSTACKUP 0, 0, %R29<imp-def,dead>, %R30<imp-def,dead>, %R31<imp-def,dead>, %R29<imp-use>
	%vreg3<def> = COPY %R0<kill>; IntRegs:%vreg3
	S2_storeriabs <ga:@current_binding_level>, %vreg1<kill>; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] IntRegs:%vreg1
	%R0<def> = COPY %vreg3<kill>; IntRegs:%vreg3
	JMPret %R31, %PC<imp-def,dead>, %R0<imp-use,kill>

# End machine code for function pushdecl_top_level.

# After Eliminate PHI nodes for register allocation:
# Machine code for function pushdecl_top_level: Post SSA
Function Live Ins: %R0 in %vreg0

BB#0: derived from LLVM BB %0
    Live Ins: %R0
	%vreg0<def> = COPY %R0<kill>; IntRegs:%vreg0
	%vreg1<def> = L4_loadri_abs <ga:@current_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] IntRegs:%vreg1
	%vreg2<def> = L4_loadri_abs <ga:@global_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)] IntRegs:%vreg2
	S2_storeriabs <ga:@current_binding_level>, %vreg2<kill>; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] IntRegs:%vreg2
	ADJCALLSTACKDOWN 0, %R29<imp-def,dead>, %R30<imp-def,dead>, %R31<imp-use>, %R30<imp-use>, %R29<imp-use>
	%R0<def> = COPY %vreg0<kill>; IntRegs:%vreg0
	J2_call <ga:@pushdecl>, %D0<imp-def,dead>, %R31<imp-def,dead>, %R0<imp-use,kill>, %R0<imp-def>, ...
	ADJCALLSTACKUP 0, 0, %R29<imp-def,dead>, %R30<imp-def,dead>, %R31<imp-def,dead>, %R29<imp-use>
	%vreg3<def> = COPY %R0<kill>; IntRegs:%vreg3
	S2_storeriabs <ga:@current_binding_level>, %vreg1<kill>; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] IntRegs:%vreg1
	%R0<def> = COPY %vreg3<kill>; IntRegs:%vreg3
	JMPret %R31, %PC<imp-def,dead>, %R0<imp-use,kill>

# End machine code for function pushdecl_top_level.

# After Two-Address instruction pass:
# Machine code for function pushdecl_top_level: Post SSA
Function Live Ins: %R0 in %vreg0

BB#0: derived from LLVM BB %0
    Live Ins: %R0
	%vreg0<def> = COPY %R0<kill>; IntRegs:%vreg0
	%vreg1<def> = L4_loadri_abs <ga:@current_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] IntRegs:%vreg1
	%vreg2<def> = L4_loadri_abs <ga:@global_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)] IntRegs:%vreg2
	S2_storeriabs <ga:@current_binding_level>, %vreg2<kill>; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] IntRegs:%vreg2
	ADJCALLSTACKDOWN 0, %R29<imp-def,dead>, %R30<imp-def,dead>, %R31<imp-use>, %R30<imp-use>, %R29<imp-use>
	%R0<def> = COPY %vreg0<kill>; IntRegs:%vreg0
	J2_call <ga:@pushdecl>, %D0<imp-def,dead>, %R31<imp-def,dead>, %R0<imp-use,kill>, %R0<imp-def>, ...
	ADJCALLSTACKUP 0, 0, %R29<imp-def,dead>, %R30<imp-def,dead>, %R31<imp-def,dead>, %R29<imp-use>
	%vreg3<def> = COPY %R0<kill>; IntRegs:%vreg3
	S2_storeriabs <ga:@current_binding_level>, %vreg1<kill>; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] IntRegs:%vreg1
	%R0<def> = COPY %vreg3<kill>; IntRegs:%vreg3
	JMPret %R31, %PC<imp-def,dead>, %R0<imp-use,kill>

# End machine code for function pushdecl_top_level.

# After Simple Register Coalescing:
# Machine code for function pushdecl_top_level: Post SSA
Function Live Ins: %R0 in %vreg0

0B	BB#0: derived from LLVM BB %0
	    Live Ins: %R0
16B		%vreg0<def> = COPY %R0; IntRegs:%vreg0
32B		%vreg1<def> = L4_loadri_abs <ga:@current_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] IntRegs:%vreg1
48B		%vreg2<def> = L4_loadri_abs <ga:@global_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)] IntRegs:%vreg2
64B		S2_storeriabs <ga:@current_binding_level>, %vreg2; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] IntRegs:%vreg2
80B		ADJCALLSTACKDOWN 0, %R29<imp-def,dead>, %R30<imp-def,dead>, %R31<imp-use>, %R30<imp-use>, %R29<imp-use>
96B		%R0<def> = COPY %vreg0; IntRegs:%vreg0
112B		J2_call <ga:@pushdecl>, %D0<imp-def,dead>, %R31<imp-def,dead>, %R0<imp-use>, %R0<imp-def>, ...
128B		ADJCALLSTACKUP 0, 0, %R29<imp-def,dead>, %R30<imp-def,dead>, %R31<imp-def,dead>, %R29<imp-use>
144B		%vreg3<def> = COPY %R0; IntRegs:%vreg3
160B		S2_storeriabs <ga:@current_binding_level>, %vreg1; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] IntRegs:%vreg1
176B		%R0<def> = COPY %vreg3; IntRegs:%vreg3
192B		JMPret %R31, %PC<imp-def,dead>, %R0<imp-use>

# End machine code for function pushdecl_top_level.

# After Hexagon Expand Condsets:
# Machine code for function pushdecl_top_level: Post SSA
Function Live Ins: %R0 in %vreg0

0B	BB#0: derived from LLVM BB %0
	    Live Ins: %R0
16B		%vreg0<def> = COPY %R0; IntRegs:%vreg0
32B		%vreg1<def> = L4_loadri_abs <ga:@current_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] IntRegs:%vreg1
48B		%vreg2<def> = L4_loadri_abs <ga:@global_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)] IntRegs:%vreg2
64B		S2_storeriabs <ga:@current_binding_level>, %vreg2; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] IntRegs:%vreg2
80B		ADJCALLSTACKDOWN 0, %R29<imp-def,dead>, %R30<imp-def,dead>, %R31<imp-use>, %R30<imp-use>, %R29<imp-use>
96B		%R0<def> = COPY %vreg0; IntRegs:%vreg0
112B		J2_call <ga:@pushdecl>, %D0<imp-def,dead>, %R31<imp-def,dead>, %R0<imp-use>, %R0<imp-def>, ...
128B		ADJCALLSTACKUP 0, 0, %R29<imp-def,dead>, %R30<imp-def,dead>, %R31<imp-def,dead>, %R29<imp-use>
144B		%vreg3<def> = COPY %R0; IntRegs:%vreg3
160B		S2_storeriabs <ga:@current_binding_level>, %vreg1; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] IntRegs:%vreg1
176B		%R0<def> = COPY %vreg3; IntRegs:%vreg3
192B		JMPret %R31, %PC<imp-def,dead>, %R0<imp-use>

# End machine code for function pushdecl_top_level.

# After Machine Instruction Scheduler:
# Machine code for function pushdecl_top_level: Post SSA
Function Live Ins: %R0 in %vreg0

0B	BB#0: derived from LLVM BB %0
	    Live Ins: %R0
8B		%vreg2<def> = L4_loadri_abs <ga:@global_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)] IntRegs:%vreg2
16B		%vreg0<def> = COPY %R0; IntRegs:%vreg0
32B		%vreg1<def> = L4_loadri_abs <ga:@current_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] IntRegs:%vreg1
80B		ADJCALLSTACKDOWN 0, %R29<imp-def,dead>, %R30<imp-def,dead>, %R31<imp-use>, %R30<imp-use>, %R29<imp-use>
96B		%R0<def> = COPY %vreg0; IntRegs:%vreg0
104B		S2_storeriabs <ga:@current_binding_level>, %vreg2; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] IntRegs:%vreg2
112B		J2_call <ga:@pushdecl>, %D0<imp-def,dead>, %R31<imp-def,dead>, %R0<imp-use>, %R0<imp-def>, ...
128B		ADJCALLSTACKUP 0, 0, %R29<imp-def,dead>, %R30<imp-def,dead>, %R31<imp-def,dead>, %R29<imp-use>
144B		%vreg3<def> = COPY %R0; IntRegs:%vreg3
160B		S2_storeriabs <ga:@current_binding_level>, %vreg1; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] IntRegs:%vreg1
176B		%R0<def> = COPY %vreg3; IntRegs:%vreg3
192B		JMPret %R31, %PC<imp-def,dead>, %R0<imp-use>

# End machine code for function pushdecl_top_level.

# After Greedy Register Allocator:
# Machine code for function pushdecl_top_level: Post SSA
Function Live Ins: %R0 in %vreg0

0B	BB#0: derived from LLVM BB %0
	    Live Ins: %R0
8B		%vreg2<def> = L4_loadri_abs <ga:@global_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)] IntRegs:%vreg2
16B		%vreg0<def> = COPY %R0; IntRegs:%vreg0
32B		%vreg1<def> = L4_loadri_abs <ga:@current_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] IntRegs:%vreg1
80B		ADJCALLSTACKDOWN 0, %R29<imp-def,dead>, %R30<imp-def,dead>, %R31<imp-use>, %R30<imp-use>, %R29<imp-use>
96B		%R0<def> = COPY %vreg0; IntRegs:%vreg0
104B		S2_storeriabs <ga:@current_binding_level>, %vreg2; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] IntRegs:%vreg2
112B		J2_call <ga:@pushdecl>, %D0<imp-def,dead>, %R31<imp-def,dead>, %R0<imp-use>, %R0<imp-def>, ...
128B		ADJCALLSTACKUP 0, 0, %R29<imp-def,dead>, %R30<imp-def,dead>, %R31<imp-def,dead>, %R29<imp-use>
144B		%vreg3<def> = COPY %R0; IntRegs:%vreg3
160B		S2_storeriabs <ga:@current_binding_level>, %vreg1; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] IntRegs:%vreg1
176B		%R0<def> = COPY %vreg3; IntRegs:%vreg3
192B		JMPret %R31, %PC<imp-def,dead>, %R0<imp-use>

# End machine code for function pushdecl_top_level.

# After Virtual Register Rewriter:
# Machine code for function pushdecl_top_level: Post SSA
Function Live Ins: %R0

0B	BB#0: derived from LLVM BB %0
	    Live Ins: %R0
8B		%R1<def> = L4_loadri_abs <ga:@global_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)]
32B		%R16<def> = L4_loadri_abs <ga:@current_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
80B		ADJCALLSTACKDOWN 0, %R29<imp-def,dead>, %R30<imp-def,dead>, %R31<imp-use>, %R30<imp-use>, %R29<imp-use>
104B		S2_storeriabs <ga:@current_binding_level>, %R1<kill>; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
112B		J2_call <ga:@pushdecl>, %D0<imp-def,dead>, %R31<imp-def,dead>, %R0<imp-use>, %R0<imp-def>, ...
128B		ADJCALLSTACKUP 0, 0, %R29<imp-def,dead>, %R30<imp-def,dead>, %R31<imp-def,dead>, %R29<imp-use>
160B		S2_storeriabs <ga:@current_binding_level>, %R16<kill>; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
192B		JMPret %R31, %PC<imp-def,dead>, %R0<imp-use>

# End machine code for function pushdecl_top_level.

# After Stack Slot Coloring:
# Machine code for function pushdecl_top_level: Post SSA
Function Live Ins: %R0

BB#0: derived from LLVM BB %0
    Live Ins: %R0
	%R1<def> = L4_loadri_abs <ga:@global_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)]
	%R16<def> = L4_loadri_abs <ga:@current_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	ADJCALLSTACKDOWN 0, %R29<imp-def,dead>, %R30<imp-def,dead>, %R31<imp-use>, %R30<imp-use>, %R29<imp-use>
	S2_storeriabs <ga:@current_binding_level>, %R1<kill>; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	J2_call <ga:@pushdecl>, %D0<imp-def,dead>, %R31<imp-def,dead>, %R0<imp-use>, %R0<imp-def>, ...
	ADJCALLSTACKUP 0, 0, %R29<imp-def,dead>, %R30<imp-def,dead>, %R31<imp-def,dead>, %R29<imp-use>
	S2_storeriabs <ga:@current_binding_level>, %R16<kill>; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	JMPret %R31, %PC<imp-def,dead>, %R0<imp-use>

# End machine code for function pushdecl_top_level.

# After Machine Loop Invariant Code Motion:
# Machine code for function pushdecl_top_level: Post SSA
Function Live Ins: %R0

BB#0: derived from LLVM BB %0
    Live Ins: %R0
	%R1<def> = L4_loadri_abs <ga:@global_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)]
	%R16<def> = L4_loadri_abs <ga:@current_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	ADJCALLSTACKDOWN 0, %R29<imp-def,dead>, %R30<imp-def,dead>, %R31<imp-use>, %R30<imp-use>, %R29<imp-use>
	S2_storeriabs <ga:@current_binding_level>, %R1<kill>; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	J2_call <ga:@pushdecl>, %D0<imp-def,dead>, %R31<imp-def,dead>, %R0<imp-use>, %R0<imp-def>, ...
	ADJCALLSTACKUP 0, 0, %R29<imp-def,dead>, %R30<imp-def,dead>, %R31<imp-def,dead>, %R29<imp-use>
	S2_storeriabs <ga:@current_binding_level>, %R16<kill>; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	JMPret %R31, %PC<imp-def,dead>, %R0<imp-use>

# End machine code for function pushdecl_top_level.

# After Hexagon RDF optimizations:
# Machine code for function pushdecl_top_level: Post SSA
Function Live Ins: %R0

BB#0: derived from LLVM BB %0
    Live Ins: %R0
	%R1<def> = L4_loadri_abs <ga:@global_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)]
	%R16<def> = L4_loadri_abs <ga:@current_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	ADJCALLSTACKDOWN 0, %R29<imp-def,dead>, %R30<imp-def,dead>, %R31<imp-use>, %R30<imp-use>, %R29<imp-use>
	S2_storeriabs <ga:@current_binding_level>, %R1<kill>; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	J2_call <ga:@pushdecl>, %D0<imp-def,dead>, %R31<imp-def,dead>, %R0<imp-use>, %R0<imp-def>, ...
	ADJCALLSTACKUP 0, 0, %R29<imp-def,dead>, %R30<imp-def,dead>, %R31<imp-def,dead>, %R29<imp-use>
	S2_storeriabs <ga:@current_binding_level>, %R16<kill>; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	JMPret %R31, %PC<imp-def,dead>, %R0<imp-use>

# End machine code for function pushdecl_top_level.

# After Shrink Wrapping analysis:
# Machine code for function pushdecl_top_level: Post SSA
Function Live Ins: %R0

BB#0: derived from LLVM BB %0
    Live Ins: %R0
	%R1<def> = L4_loadri_abs <ga:@global_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)]
	%R16<def> = L4_loadri_abs <ga:@current_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	ADJCALLSTACKDOWN 0, %R29<imp-def,dead>, %R30<imp-def,dead>, %R31<imp-use>, %R30<imp-use>, %R29<imp-use>
	S2_storeriabs <ga:@current_binding_level>, %R1<kill>; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	J2_call <ga:@pushdecl>, %D0<imp-def,dead>, %R31<imp-def,dead>, %R0<imp-use>, %R0<imp-def>, ...
	ADJCALLSTACKUP 0, 0, %R29<imp-def,dead>, %R30<imp-def,dead>, %R31<imp-def,dead>, %R29<imp-use>
	S2_storeriabs <ga:@current_binding_level>, %R16<kill>; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	JMPret %R31, %PC<imp-def,dead>, %R0<imp-use>

# End machine code for function pushdecl_top_level.

# After Prologue/Epilogue Insertion & Frame Finalization:
# Machine code for function pushdecl_top_level: Post SSA
Frame Objects:
  fi#-1: size=8, align=8, fixed, at location [SP-8]
Function Live Ins: %R0

BB#0: derived from LLVM BB %0
    Live Ins: %R0 %D8 %D8
	S2_allocframe 8, %R29<imp-def>, %R30<imp-def>, %R29<imp-use>, %R31<imp-use>, %R30<imp-use>; mem:ST4[<unknown>]
	S2_storerd_io %R29, 0, %D8<kill>; mem:ST8[FixedStack-1]
	%R1<def> = L4_loadri_abs <ga:@global_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)]
	%R16<def> = L4_loadri_abs <ga:@current_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	S2_storeriabs <ga:@current_binding_level>, %R1<kill>; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	J2_call <ga:@pushdecl>, %D0<imp-def,dead>, %R31<imp-def,dead>, %R0<imp-use>, %R0<imp-def>, ...
	S2_storeriabs <ga:@current_binding_level>, %R16<kill>; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	%D8<def> = L2_loadrd_io %R29, 0; mem:LD8[FixedStack-1]
	L4_return %R29<imp-def>, %R30<imp-def>, %R31<imp-def>, %PC<imp-def>, %R30<imp-use>, %PC<imp-def,dead>, %R0<imp-use>

# End machine code for function pushdecl_top_level.

# After Machine Copy Propagation Pass:
# Machine code for function pushdecl_top_level: Post SSA
Frame Objects:
  fi#-1: size=8, align=8, fixed, at location [SP-8]
Function Live Ins: %R0

BB#0: derived from LLVM BB %0
    Live Ins: %R0 %D8 %D8
	S2_allocframe 8, %R29<imp-def>, %R30<imp-def>, %R29<imp-use>, %R31<imp-use>, %R30<imp-use>; mem:ST4[<unknown>]
	S2_storerd_io %R29, 0, %D8<kill>; mem:ST8[FixedStack-1]
	%R1<def> = L4_loadri_abs <ga:@global_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)]
	%R16<def> = L4_loadri_abs <ga:@current_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	S2_storeriabs <ga:@current_binding_level>, %R1<kill>; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	J2_call <ga:@pushdecl>, %D0<imp-def,dead>, %R31<imp-def,dead>, %R0<imp-use>, %R0<imp-def>, ...
	S2_storeriabs <ga:@current_binding_level>, %R16<kill>; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	%D8<def> = L2_loadrd_io %R29, 0; mem:LD8[FixedStack-1]
	L4_return %R29<imp-def>, %R30<imp-def>, %R31<imp-def>, %PC<imp-def>, %R30<imp-use>, %PC<imp-def,dead>, %R0<imp-use>

# End machine code for function pushdecl_top_level.

# After Post-RA pseudo instruction expansion pass:
# Machine code for function pushdecl_top_level: Post SSA
Frame Objects:
  fi#-1: size=8, align=8, fixed, at location [SP-8]
Function Live Ins: %R0

BB#0: derived from LLVM BB %0
    Live Ins: %R0 %D8 %D8
	S2_allocframe 8, %R29<imp-def>, %R30<imp-def>, %R29<imp-use>, %R31<imp-use>, %R30<imp-use>; mem:ST4[<unknown>]
	S2_storerd_io %R29, 0, %D8<kill>; mem:ST8[FixedStack-1]
	%R1<def> = L4_loadri_abs <ga:@global_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)]
	%R16<def> = L4_loadri_abs <ga:@current_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	S2_storeriabs <ga:@current_binding_level>, %R1<kill>; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	J2_call <ga:@pushdecl>, %D0<imp-def,dead>, %R31<imp-def,dead>, %R0<imp-use>, %R0<imp-def>, ...
	S2_storeriabs <ga:@current_binding_level>, %R16<kill>; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	%D8<def> = L2_loadrd_io %R29, 0; mem:LD8[FixedStack-1]
	L4_return %R29<imp-def>, %R30<imp-def>, %R31<imp-def>, %PC<imp-def>, %R30<imp-use>, %PC<imp-def,dead>, %R0<imp-use>

# End machine code for function pushdecl_top_level.

# After Hexagon Copy-To-Combine Pass:
# Machine code for function pushdecl_top_level: Post SSA
Frame Objects:
  fi#-1: size=8, align=8, fixed, at location [SP-8]
Function Live Ins: %R0

BB#0: derived from LLVM BB %0
    Live Ins: %R0 %D8 %D8
	S2_allocframe 8, %R29<imp-def>, %R30<imp-def>, %R29<imp-use>, %R31<imp-use>, %R30<imp-use>; mem:ST4[<unknown>]
	S2_storerd_io %R29, 0, %D8<kill>; mem:ST8[FixedStack-1]
	%R1<def> = L4_loadri_abs <ga:@global_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)]
	%R16<def> = L4_loadri_abs <ga:@current_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	S2_storeriabs <ga:@current_binding_level>, %R1<kill>; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	J2_call <ga:@pushdecl>, %D0<imp-def,dead>, %R31<imp-def,dead>, %R0<imp-use>, %R0<imp-def>, ...
	S2_storeriabs <ga:@current_binding_level>, %R16<kill>; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	%D8<def> = L2_loadrd_io %R29, 0; mem:LD8[FixedStack-1]
	L4_return %R29<imp-def>, %R30<imp-def>, %R31<imp-def>, %PC<imp-def>, %R30<imp-use>, %PC<imp-def,dead>, %R0<imp-use>

# End machine code for function pushdecl_top_level.

# After Hexagon Split Const32s and Const64s:
# Machine code for function pushdecl_top_level: Post SSA
Frame Objects:
  fi#-1: size=8, align=8, fixed, at location [SP-8]
Function Live Ins: %R0

BB#0: derived from LLVM BB %0
    Live Ins: %R0 %D8 %D8
	S2_allocframe 8, %R29<imp-def>, %R30<imp-def>, %R29<imp-use>, %R31<imp-use>, %R30<imp-use>; mem:ST4[<unknown>]
	S2_storerd_io %R29, 0, %D8<kill>; mem:ST8[FixedStack-1]
	%R1<def> = L4_loadri_abs <ga:@global_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)]
	%R16<def> = L4_loadri_abs <ga:@current_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	S2_storeriabs <ga:@current_binding_level>, %R1<kill>; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	J2_call <ga:@pushdecl>, %D0<imp-def,dead>, %R31<imp-def,dead>, %R0<imp-use>, %R0<imp-def>, ...
	S2_storeriabs <ga:@current_binding_level>, %R16<kill>; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	%D8<def> = L2_loadrd_io %R29, 0; mem:LD8[FixedStack-1]
	L4_return %R29<imp-def>, %R30<imp-def>, %R31<imp-def>, %PC<imp-def>, %R30<imp-use>, %PC<imp-def,dead>, %R0<imp-use>

# End machine code for function pushdecl_top_level.

# After Analyze Machine Code For Garbage Collection:
# Machine code for function pushdecl_top_level: Post SSA
Frame Objects:
  fi#-1: size=8, align=8, fixed, at location [SP-8]
Function Live Ins: %R0

BB#0: derived from LLVM BB %0
    Live Ins: %R0 %D8 %D8
	S2_allocframe 8, %R29<imp-def>, %R30<imp-def>, %R29<imp-use>, %R31<imp-use>, %R30<imp-use>; mem:ST4[<unknown>]
	S2_storerd_io %R29, 0, %D8<kill>; mem:ST8[FixedStack-1]
	%R1<def> = L4_loadri_abs <ga:@global_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)]
	%R16<def> = L4_loadri_abs <ga:@current_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	S2_storeriabs <ga:@current_binding_level>, %R1<kill>; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	J2_call <ga:@pushdecl>, %D0<imp-def,dead>, %R31<imp-def,dead>, %R0<imp-use>, %R0<imp-def>, ...
	S2_storeriabs <ga:@current_binding_level>, %R16<kill>; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	%D8<def> = L2_loadrd_io %R29, 0; mem:LD8[FixedStack-1]
	L4_return %R29<imp-def>, %R30<imp-def>, %R31<imp-def>, %PC<imp-def>, %R30<imp-use>, %PC<imp-def,dead>, %R0<imp-use>

# End machine code for function pushdecl_top_level.

# After Hexagon NewValueJump:
# Machine code for function pushdecl_top_level: Post SSA
Frame Objects:
  fi#-1: size=8, align=8, fixed, at location [SP-8]
Function Live Ins: %R0

BB#0: derived from LLVM BB %0
    Live Ins: %R0 %D8 %D8
	S2_allocframe 8, %R29<imp-def>, %R30<imp-def>, %R29<imp-use>, %R31<imp-use>, %R30<imp-use>; mem:ST4[<unknown>]
	S2_storerd_io %R29, 0, %D8<kill>; mem:ST8[FixedStack-1]
	%R1<def> = L4_loadri_abs <ga:@global_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)]
	%R16<def> = L4_loadri_abs <ga:@current_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	S2_storeriabs <ga:@current_binding_level>, %R1<kill>; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	J2_call <ga:@pushdecl>, %D0<imp-def,dead>, %R31<imp-def,dead>, %R0<imp-use>, %R0<imp-def>, ...
	S2_storeriabs <ga:@current_binding_level>, %R16<kill>; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	%D8<def> = L2_loadrd_io %R29, 0; mem:LD8[FixedStack-1]
	L4_return %R29<imp-def>, %R30<imp-def>, %R31<imp-def>, %PC<imp-def>, %R30<imp-use>, %PC<imp-def,dead>, %R0<imp-use>

# End machine code for function pushdecl_top_level.

# After Hexagon Expand Predicate Spill Code:
# Machine code for function pushdecl_top_level: Post SSA
Frame Objects:
  fi#-1: size=8, align=8, fixed, at location [SP-8]
Function Live Ins: %R0

BB#0: derived from LLVM BB %0
    Live Ins: %R0 %D8 %D8
	S2_allocframe 8, %R29<imp-def>, %R30<imp-def>, %R29<imp-use>, %R31<imp-use>, %R30<imp-use>; mem:ST4[<unknown>]
	S2_storerd_io %R29, 0, %D8<kill>; mem:ST8[FixedStack-1]
	%R1<def> = L4_loadri_abs <ga:@global_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)]
	%R16<def> = L4_loadri_abs <ga:@current_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	S2_storeriabs <ga:@current_binding_level>, %R1<kill>; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	J2_call <ga:@pushdecl>, %D0<imp-def,dead>, %R31<imp-def,dead>, %R0<imp-use>, %R0<imp-def>, ...
	S2_storeriabs <ga:@current_binding_level>, %R16<kill>; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	%D8<def> = L2_loadrd_io %R29, 0; mem:LD8[FixedStack-1]
	L4_return %R29<imp-def>, %R30<imp-def>, %R31<imp-def>, %PC<imp-def>, %R30<imp-use>, %PC<imp-def,dead>, %R0<imp-use>

# End machine code for function pushdecl_top_level.

# After Hexagon Hardware Loop Fixup:
# Machine code for function pushdecl_top_level: Post SSA
Frame Objects:
  fi#-1: size=8, align=8, fixed, at location [SP-8]
Function Live Ins: %R0

BB#0: derived from LLVM BB %0
    Live Ins: %R0 %D8 %D8
	S2_allocframe 8, %R29<imp-def>, %R30<imp-def>, %R29<imp-use>, %R31<imp-use>, %R30<imp-use>; mem:ST4[<unknown>]
	S2_storerd_io %R29, 0, %D8<kill>; mem:ST8[FixedStack-1]
	%R1<def> = L4_loadri_abs <ga:@global_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)]
	%R16<def> = L4_loadri_abs <ga:@current_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	S2_storeriabs <ga:@current_binding_level>, %R1<kill>; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	J2_call <ga:@pushdecl>, %D0<imp-def,dead>, %R31<imp-def,dead>, %R0<imp-use>, %R0<imp-def>, ...
	S2_storeriabs <ga:@current_binding_level>, %R16<kill>; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	%D8<def> = L2_loadrd_io %R29, 0; mem:LD8[FixedStack-1]
	L4_return %R29<imp-def>, %R30<imp-def>, %R31<imp-def>, %PC<imp-def>, %R30<imp-use>, %PC<imp-def,dead>, %R0<imp-use>

# End machine code for function pushdecl_top_level.

# After Hexagon generate mux instructions:
# Machine code for function pushdecl_top_level: Post SSA
Frame Objects:
  fi#-1: size=8, align=8, fixed, at location [SP-8]
Function Live Ins: %R0

BB#0: derived from LLVM BB %0
    Live Ins: %R0 %D8 %D8
	S2_allocframe 8, %R29<imp-def>, %R30<imp-def>, %R29<imp-use>, %R31<imp-use>, %R30<imp-use>; mem:ST4[<unknown>]
	S2_storerd_io %R29, 0, %D8<kill>; mem:ST8[FixedStack-1]
	%R1<def> = L4_loadri_abs <ga:@global_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)]
	%R16<def> = L4_loadri_abs <ga:@current_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	S2_storeriabs <ga:@current_binding_level>, %R1<kill>; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	J2_call <ga:@pushdecl>, %D0<imp-def,dead>, %R31<imp-def,dead>, %R0<imp-use>, %R0<imp-def>, ...
	S2_storeriabs <ga:@current_binding_level>, %R16<kill>; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	%D8<def> = L2_loadrd_io %R29, 0; mem:LD8[FixedStack-1]
	L4_return %R29<imp-def>, %R30<imp-def>, %R31<imp-def>, %PC<imp-def>, %R30<imp-use>, %PC<imp-def,dead>, %R0<imp-use>

# End machine code for function pushdecl_top_level.

# After Hexagon Packetizer:
# Machine code for function pushdecl_top_level: Post SSA
Frame Objects:
  fi#-1: size=8, align=8, fixed, at location [SP-8]
Function Live Ins: %R0

BB#0: derived from LLVM BB %0
    Live Ins: %R0 %D8 %D8
	BUNDLE %R29<imp-def>, %R30<imp-def>, %R29<imp-use>, %R31<imp-use>, %R30<imp-use>, %D8<imp-use,kill>
	  * S2_allocframe 8, %R29<imp-def>, %R30<imp-def>, %R29<imp-use>, %R31<imp-use>, %R30<imp-use>; mem:ST4[<unknown>]
	  * S2_storerd_io %R29<internal>, -16, %D8<kill>; mem:ST8[FixedStack-1]
	BUNDLE %R1<imp-def>, %R16<imp-def>
	  * %R1<def> = L4_loadri_abs <ga:@global_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)]
	  * %R16<def> = L4_loadri_abs <ga:@current_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	BUNDLE %D0<imp-def,dead>, %R31<imp-def,dead>, %R0<imp-def>, %R1<imp-use,kill>, %R0<imp-use>, ...
	  * S2_storeriabs <ga:@current_binding_level>, %R1<kill>; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	  * J2_call <ga:@pushdecl>, %D0<imp-def,dead>, %R31<imp-def,dead>, %R0<imp-use>, %R0<imp-def>, ...
	BUNDLE %D8<imp-def>, %R16<imp-def>, %R17<imp-def>, %R16<imp-use,kill>, %R29<imp-use>
	  * S2_storeriabs <ga:@current_binding_level>, %R16<kill>; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	  * %D8<def> = L2_loadrd_io %R29, 0; mem:LD8[FixedStack-1]
	L4_return %R29<imp-def>, %R30<imp-def>, %R31<imp-def>, %PC<imp-def>, %R30<imp-use>, %PC<imp-def,dead>, %R0<imp-use>

# End machine code for function pushdecl_top_level.

# After Hexagon call frame information:
# Machine code for function pushdecl_top_level: Post SSA
Frame Objects:
  fi#-1: size=8, align=8, fixed, at location [SP-8]
Function Live Ins: %R0

BB#0: derived from LLVM BB %0
    Live Ins: %R0 %D8 %D8
	BUNDLE %R29<imp-def>, %R30<imp-def>, %R29<imp-use>, %R31<imp-use>, %R30<imp-use>, %D8<imp-use,kill>
	  * S2_allocframe 8, %R29<imp-def>, %R30<imp-def>, %R29<imp-use>, %R31<imp-use>, %R30<imp-use>; mem:ST4[<unknown>]
	  * S2_storerd_io %R29<internal>, -16, %D8<kill>; mem:ST8[FixedStack-1]
	BUNDLE %R1<imp-def>, %R16<imp-def>
	  * %R1<def> = L4_loadri_abs <ga:@global_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)]
	  * %R16<def> = L4_loadri_abs <ga:@current_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	BUNDLE %D0<imp-def,dead>, %R31<imp-def,dead>, %R0<imp-def>, %R1<imp-use,kill>, %R0<imp-use>, ...
	  * S2_storeriabs <ga:@current_binding_level>, %R1<kill>; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	  * J2_call <ga:@pushdecl>, %D0<imp-def,dead>, %R31<imp-def,dead>, %R0<imp-use>, %R0<imp-def>, ...
	BUNDLE %D8<imp-def>, %R16<imp-def>, %R17<imp-def>, %R16<imp-use,kill>, %R29<imp-use>
	  * S2_storeriabs <ga:@current_binding_level>, %R16<kill>; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	  * %D8<def> = L2_loadrd_io %R29, 0; mem:LD8[FixedStack-1]
	L4_return %R29<imp-def>, %R30<imp-def>, %R31<imp-def>, %PC<imp-def>, %R30<imp-use>, %PC<imp-def,dead>, %R0<imp-use>

# End machine code for function pushdecl_top_level.

# After Contiguously Lay Out Funclets:
# Machine code for function pushdecl_top_level: Post SSA
Frame Objects:
  fi#-1: size=8, align=8, fixed, at location [SP-8]
Function Live Ins: %R0

BB#0: derived from LLVM BB %0
    Live Ins: %R0 %D8 %D8
	BUNDLE %R29<imp-def>, %R30<imp-def>, %R29<imp-use>, %R31<imp-use>, %R30<imp-use>, %D8<imp-use,kill>
	  * S2_allocframe 8, %R29<imp-def>, %R30<imp-def>, %R29<imp-use>, %R31<imp-use>, %R30<imp-use>; mem:ST4[<unknown>]
	  * S2_storerd_io %R29<internal>, -16, %D8<kill>; mem:ST8[FixedStack-1]
	BUNDLE %R1<imp-def>, %R16<imp-def>
	  * %R1<def> = L4_loadri_abs <ga:@global_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)]
	  * %R16<def> = L4_loadri_abs <ga:@current_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	BUNDLE %D0<imp-def,dead>, %R31<imp-def,dead>, %R0<imp-def>, %R1<imp-use,kill>, %R0<imp-use>, ...
	  * S2_storeriabs <ga:@current_binding_level>, %R1<kill>; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	  * J2_call <ga:@pushdecl>, %D0<imp-def,dead>, %R31<imp-def,dead>, %R0<imp-use>, %R0<imp-def>, ...
	BUNDLE %D8<imp-def>, %R16<imp-def>, %R17<imp-def>, %R16<imp-use,kill>, %R29<imp-use>
	  * S2_storeriabs <ga:@current_binding_level>, %R16<kill>; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	  * %D8<def> = L2_loadrd_io %R29, 0; mem:LD8[FixedStack-1]
	L4_return %R29<imp-def>, %R30<imp-def>, %R31<imp-def>, %PC<imp-def>, %R30<imp-use>, %PC<imp-def,dead>, %R0<imp-use>

# End machine code for function pushdecl_top_level.

# After StackMap Liveness Analysis:
# Machine code for function pushdecl_top_level: Post SSA
Frame Objects:
  fi#-1: size=8, align=8, fixed, at location [SP-8]
Function Live Ins: %R0

BB#0: derived from LLVM BB %0
    Live Ins: %R0 %D8 %D8
	BUNDLE %R29<imp-def>, %R30<imp-def>, %R29<imp-use>, %R31<imp-use>, %R30<imp-use>, %D8<imp-use,kill>
	  * S2_allocframe 8, %R29<imp-def>, %R30<imp-def>, %R29<imp-use>, %R31<imp-use>, %R30<imp-use>; mem:ST4[<unknown>]
	  * S2_storerd_io %R29<internal>, -16, %D8<kill>; mem:ST8[FixedStack-1]
	BUNDLE %R1<imp-def>, %R16<imp-def>
	  * %R1<def> = L4_loadri_abs <ga:@global_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)]
	  * %R16<def> = L4_loadri_abs <ga:@current_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	BUNDLE %D0<imp-def,dead>, %R31<imp-def,dead>, %R0<imp-def>, %R1<imp-use,kill>, %R0<imp-use>, ...
	  * S2_storeriabs <ga:@current_binding_level>, %R1<kill>; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	  * J2_call <ga:@pushdecl>, %D0<imp-def,dead>, %R31<imp-def,dead>, %R0<imp-use>, %R0<imp-def>, ...
	BUNDLE %D8<imp-def>, %R16<imp-def>, %R17<imp-def>, %R16<imp-use,kill>, %R29<imp-use>
	  * S2_storeriabs <ga:@current_binding_level>, %R16<kill>; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	  * %D8<def> = L2_loadrd_io %R29, 0; mem:LD8[FixedStack-1]
	L4_return %R29<imp-def>, %R30<imp-def>, %R31<imp-def>, %PC<imp-def>, %R30<imp-use>, %PC<imp-def,dead>, %R0<imp-use>

# End machine code for function pushdecl_top_level.

# After Live DEBUG_VALUE analysis:
# Machine code for function pushdecl_top_level: Post SSA
Frame Objects:
  fi#-1: size=8, align=8, fixed, at location [SP-8]
Function Live Ins: %R0

BB#0: derived from LLVM BB %0
    Live Ins: %R0 %D8 %D8
	BUNDLE %R29<imp-def>, %R30<imp-def>, %R29<imp-use>, %R31<imp-use>, %R30<imp-use>, %D8<imp-use,kill>
	  * S2_allocframe 8, %R29<imp-def>, %R30<imp-def>, %R29<imp-use>, %R31<imp-use>, %R30<imp-use>; mem:ST4[<unknown>]
	  * S2_storerd_io %R29<internal>, -16, %D8<kill>; mem:ST8[FixedStack-1]
	BUNDLE %R1<imp-def>, %R16<imp-def>
	  * %R1<def> = L4_loadri_abs <ga:@global_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)]
	  * %R16<def> = L4_loadri_abs <ga:@current_binding_level>; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	BUNDLE %D0<imp-def,dead>, %R31<imp-def,dead>, %R0<imp-def>, %R1<imp-use,kill>, %R0<imp-use>, ...
	  * S2_storeriabs <ga:@current_binding_level>, %R1<kill>; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	  * J2_call <ga:@pushdecl>, %D0<imp-def,dead>, %R31<imp-def,dead>, %R0<imp-use>, %R0<imp-def>, ...
	BUNDLE %D8<imp-def>, %R16<imp-def>, %R17<imp-def>, %R16<imp-use,kill>, %R29<imp-use>
	  * S2_storeriabs <ga:@current_binding_level>, %R16<kill>; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	  * %D8<def> = L2_loadrd_io %R29, 0; mem:LD8[FixedStack-1]
	L4_return %R29<imp-def>, %R30<imp-def>, %R31<imp-def>, %PC<imp-def>, %R30<imp-use>, %PC<imp-def,dead>, %R0<imp-use>

# End machine code for function pushdecl_top_level.

