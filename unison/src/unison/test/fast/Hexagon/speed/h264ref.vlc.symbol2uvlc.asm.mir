--- |
  ; ModuleID = 'h264ref.vlc.symbol2uvlc.ll'
  target datalayout = "e-m:e-p:32:32:32-i64:64:64-i32:32:32-i16:16:16-i1:8:8-f64:64:64-f32:32:32-v64:64:64-v32:32:32-a:0-n16:32"
  target triple = "hexagon"
  
  %struct.syntaxelement.214 = type { i32, i32, i32, i32, i32, i32, i32, i32, void (i32, i32, i32*, i32*)*, void (%struct.syntaxelement.214*, %struct.EncodingEnvironment.221*)* }
  %struct.EncodingEnvironment.221 = type { i32, i32, i32, i32, i32, i8*, i32*, i32, i32, i32, i32, i32, i8*, i32*, i32, i32, i32, i32, i32, i32 }
  
  ; Function Attrs: norecurse nounwind
  define i32 @symbol2uvlc(%struct.syntaxelement.214* nocapture %sym) #0 {
    %cgep7 = bitcast %struct.syntaxelement.214* %sym to %struct.syntaxelement.214*
    %cgep4 = getelementptr %struct.syntaxelement.214, %struct.syntaxelement.214* %cgep7, i32 0, i32 3
    %1 = load i32, i32* %cgep4, align 4
    %2 = sdiv i32 %1, 2
    %3 = shl i32 1, %2
    %cgep5 = getelementptr %struct.syntaxelement.214, %struct.syntaxelement.214* %cgep7, i32 0, i32 4
    %4 = load i32, i32* %cgep5, align 4
    %5 = add nsw i32 %3, -1
    %6 = and i32 %5, %4
    %7 = or i32 %6, %3
    %cgep6 = getelementptr %struct.syntaxelement.214, %struct.syntaxelement.214* %cgep7, i32 0, i32 5
    store i32 %7, i32* %cgep6, align 4
    ret i32 0
  }
  
  attributes #0 = { norecurse nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="hexagonv4" "target-features"="-hvx,-hvx-double" "unsafe-fp-math"="false" "use-soft-float"="false" }
  
  !llvm.ident = !{!0}
  
  !0 = !{!"clang version 3.8.0 (http://llvm.org/git/clang.git 2d49f0a0ae8366964a93e3b7b26e29679bee7160) (http://llvm.org/git/llvm.git 60bc66b44837125843b58ed3e0fd2e6bb948d839)"}

...
---
name:            symbol2uvlc
alignment:       4
exposesReturnsTwice: false
hasInlineAsm:    false
isSSA:           false
tracksRegLiveness: true
tracksSubRegLiveness: false
liveins:         
  - { reg: '%r0' }
frameInfo:       
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    0
  adjustsStack:    false
  hasCalls:        false
  maxCallFrameSize: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
body:             |
  bb.0 (%ir-block.0, freq 8):
    liveins: %r0
    liveouts: %r2, %r3, %r1, %r31, %r0
  
    BUNDLE implicit-def %r1, implicit-def %r0, implicit-def %r2, implicit %r0 {
      %r1 = A2_tfr %r0
      %r0 = A2_tfrsi -1
      %r2 = A2_tfrsi 1
    }
    %r3 = L2_loadri_io %r1, 12 :: (load 4 from %ir.cgep4)
    %r3 = S2_lsr_i_r_acc killed %r3, %r3, 31
    BUNDLE implicit-def %r3, implicit-def %r4, implicit killed %r3, implicit %r1 {
      %r3 = S2_asr_i_r killed %r3, 1
      %r4 = L2_loadri_io %r1, 16 :: (load 4 from %ir.cgep5)
    }
    %r0 = S2_asl_r_r_acc killed %r0, killed %r2, %r3
    BUNDLE implicit-def %r2, implicit-def %r0, implicit killed %r0, implicit killed %r4 {
      %r2 = A2_and killed %r0, killed %r4
      %r0 = A2_tfrsi 0
    }
    BUNDLE implicit-def dead %r2, implicit-def dead %pc, implicit killed %r2, implicit killed %r3, implicit killed %r1, implicit %r31, implicit %r0 {
      %r2 = S2_setbit_r killed %r2, killed %r3
      S2_storerinew_io killed %r1, 20, internal killed %r2 :: (store 4 into %ir.cgep6)
      JMPret %r31, implicit-def dead %pc, implicit %r0
    }

...
