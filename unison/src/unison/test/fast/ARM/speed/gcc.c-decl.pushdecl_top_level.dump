# After Instruction Selection:
# Machine code for function pushdecl_top_level: SSA
Function Live Ins: %R0 in %vreg0

BB#0: derived from LLVM BB %0
    Live Ins: %R0
	%vreg0<def> = COPY %R0; GPR:%vreg0
	%vreg1<def> = t2MOVi32imm <ga:@current_binding_level>; rGPR:%vreg1
	%vreg2<def> = t2MOVi32imm <ga:@global_binding_level>; rGPR:%vreg2
	%vreg3<def> = t2LDRi12 %vreg2<kill>, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)] GPR:%vreg3 rGPR:%vreg2
	%vreg4<def> = t2LDRi12 %vreg1, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] GPR:%vreg4 rGPR:%vreg1
	t2STRi12 %vreg3<kill>, %vreg1, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] GPR:%vreg3 rGPR:%vreg1
	ADJCALLSTACKDOWN 0, pred:14, pred:%noreg, %SP<imp-def,dead>, %SP<imp-use>
	%R0<def> = COPY %vreg0; GPR:%vreg0
	tBL pred:14, pred:%noreg, <ga:@pushdecl>, <regmask %LR %D8 %D9 %D10 %D11 %D12 %D13 %D14 %D15 %Q4 %Q5 %Q6 %Q7 %R4 %R5 %R6 %R7 %R8 %R9 %R10 %R11 %S16 %S17 %S18 %S19 %S20 %S21 %S22 %S23 %S24 %S25 %S26 %S27 %S28 %S29 %S30 %S31 %D8_D10 %D9_D11 %D10_D12 %D11_D13 %D12_D14 %D13_D15 %Q4_Q5 %Q5_Q6 %Q6_Q7 %Q4_Q5_Q6_Q7 %R4_R5 %R6_R7 %R8_R9 %R10_R11 %D8_D9_D10 %D9_D10_D11 %D10_D11_D12 %D11_D12_D13 %D12_D13_D14 %D13_D14_D15 %D8_D10_D12 %D9_D11_D13 %D10_D12_D14 %D11_D13_D15 %D8_D10_D12_D14 %D9_D11_D13_D15 %D9_D10 %D11_D12 %D13_D14 %D9_D10_D11_D12 %D11_D12_D13_D14>, %SP<imp-use>, %R0<imp-use>, %SP<imp-def>, %R0<imp-def>, ...
	ADJCALLSTACKUP 0, 0, pred:14, pred:%noreg, %SP<imp-def,dead>, %SP<imp-use>
	%vreg5<def> = COPY %R0; GPR:%vreg5
	t2STRi12 %vreg4<kill>, %vreg1, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] GPR:%vreg4 rGPR:%vreg1
	%R0<def> = COPY %vreg5; GPR:%vreg5
	tBX_RET pred:14, pred:%noreg, %R0<imp-use>

# End machine code for function pushdecl_top_level.

# After Expand ISel Pseudo-instructions:
# Machine code for function pushdecl_top_level: SSA
Function Live Ins: %R0 in %vreg0

BB#0: derived from LLVM BB %0
    Live Ins: %R0
	%vreg0<def> = COPY %R0; GPR:%vreg0
	%vreg1<def> = t2MOVi32imm <ga:@current_binding_level>; rGPR:%vreg1
	%vreg2<def> = t2MOVi32imm <ga:@global_binding_level>; rGPR:%vreg2
	%vreg3<def> = t2LDRi12 %vreg2<kill>, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)] GPR:%vreg3 rGPR:%vreg2
	%vreg4<def> = t2LDRi12 %vreg1, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] GPR:%vreg4 rGPR:%vreg1
	t2STRi12 %vreg3<kill>, %vreg1, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] GPR:%vreg3 rGPR:%vreg1
	ADJCALLSTACKDOWN 0, pred:14, pred:%noreg, %SP<imp-def,dead>, %SP<imp-use>
	%R0<def> = COPY %vreg0; GPR:%vreg0
	tBL pred:14, pred:%noreg, <ga:@pushdecl>, <regmask %LR %D8 %D9 %D10 %D11 %D12 %D13 %D14 %D15 %Q4 %Q5 %Q6 %Q7 %R4 %R5 %R6 %R7 %R8 %R9 %R10 %R11 %S16 %S17 %S18 %S19 %S20 %S21 %S22 %S23 %S24 %S25 %S26 %S27 %S28 %S29 %S30 %S31 %D8_D10 %D9_D11 %D10_D12 %D11_D13 %D12_D14 %D13_D15 %Q4_Q5 %Q5_Q6 %Q6_Q7 %Q4_Q5_Q6_Q7 %R4_R5 %R6_R7 %R8_R9 %R10_R11 %D8_D9_D10 %D9_D10_D11 %D10_D11_D12 %D11_D12_D13 %D12_D13_D14 %D13_D14_D15 %D8_D10_D12 %D9_D11_D13 %D10_D12_D14 %D11_D13_D15 %D8_D10_D12_D14 %D9_D11_D13_D15 %D9_D10 %D11_D12 %D13_D14 %D9_D10_D11_D12 %D11_D12_D13_D14>, %SP<imp-use>, %R0<imp-use>, %SP<imp-def>, %R0<imp-def>, ...
	ADJCALLSTACKUP 0, 0, pred:14, pred:%noreg, %SP<imp-def,dead>, %SP<imp-use>
	%vreg5<def> = COPY %R0; GPR:%vreg5
	t2STRi12 %vreg4<kill>, %vreg1, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] GPR:%vreg4 rGPR:%vreg1
	%R0<def> = COPY %vreg5; GPR:%vreg5
	tBX_RET pred:14, pred:%noreg, %R0<imp-use>

# End machine code for function pushdecl_top_level.

# After Tail Duplication:
# Machine code for function pushdecl_top_level: SSA
Function Live Ins: %R0 in %vreg0

BB#0: derived from LLVM BB %0
    Live Ins: %R0
	%vreg0<def> = COPY %R0; GPR:%vreg0
	%vreg1<def> = t2MOVi32imm <ga:@current_binding_level>; rGPR:%vreg1
	%vreg2<def> = t2MOVi32imm <ga:@global_binding_level>; rGPR:%vreg2
	%vreg3<def> = t2LDRi12 %vreg2<kill>, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)] GPR:%vreg3 rGPR:%vreg2
	%vreg4<def> = t2LDRi12 %vreg1, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] GPR:%vreg4 rGPR:%vreg1
	t2STRi12 %vreg3<kill>, %vreg1, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] GPR:%vreg3 rGPR:%vreg1
	ADJCALLSTACKDOWN 0, pred:14, pred:%noreg, %SP<imp-def,dead>, %SP<imp-use>
	%R0<def> = COPY %vreg0; GPR:%vreg0
	tBL pred:14, pred:%noreg, <ga:@pushdecl>, <regmask %LR %D8 %D9 %D10 %D11 %D12 %D13 %D14 %D15 %Q4 %Q5 %Q6 %Q7 %R4 %R5 %R6 %R7 %R8 %R9 %R10 %R11 %S16 %S17 %S18 %S19 %S20 %S21 %S22 %S23 %S24 %S25 %S26 %S27 %S28 %S29 %S30 %S31 %D8_D10 %D9_D11 %D10_D12 %D11_D13 %D12_D14 %D13_D15 %Q4_Q5 %Q5_Q6 %Q6_Q7 %Q4_Q5_Q6_Q7 %R4_R5 %R6_R7 %R8_R9 %R10_R11 %D8_D9_D10 %D9_D10_D11 %D10_D11_D12 %D11_D12_D13 %D12_D13_D14 %D13_D14_D15 %D8_D10_D12 %D9_D11_D13 %D10_D12_D14 %D11_D13_D15 %D8_D10_D12_D14 %D9_D11_D13_D15 %D9_D10 %D11_D12 %D13_D14 %D9_D10_D11_D12 %D11_D12_D13_D14>, %SP<imp-use>, %R0<imp-use>, %SP<imp-def>, %R0<imp-def>, ...
	ADJCALLSTACKUP 0, 0, pred:14, pred:%noreg, %SP<imp-def,dead>, %SP<imp-use>
	%vreg5<def> = COPY %R0; GPR:%vreg5
	t2STRi12 %vreg4<kill>, %vreg1, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] GPR:%vreg4 rGPR:%vreg1
	%R0<def> = COPY %vreg5; GPR:%vreg5
	tBX_RET pred:14, pred:%noreg, %R0<imp-use>

# End machine code for function pushdecl_top_level.

# After Optimize machine instruction PHIs:
# Machine code for function pushdecl_top_level: SSA
Function Live Ins: %R0 in %vreg0

BB#0: derived from LLVM BB %0
    Live Ins: %R0
	%vreg0<def> = COPY %R0; GPR:%vreg0
	%vreg1<def> = t2MOVi32imm <ga:@current_binding_level>; rGPR:%vreg1
	%vreg2<def> = t2MOVi32imm <ga:@global_binding_level>; rGPR:%vreg2
	%vreg3<def> = t2LDRi12 %vreg2<kill>, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)] GPR:%vreg3 rGPR:%vreg2
	%vreg4<def> = t2LDRi12 %vreg1, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] GPR:%vreg4 rGPR:%vreg1
	t2STRi12 %vreg3<kill>, %vreg1, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] GPR:%vreg3 rGPR:%vreg1
	ADJCALLSTACKDOWN 0, pred:14, pred:%noreg, %SP<imp-def,dead>, %SP<imp-use>
	%R0<def> = COPY %vreg0; GPR:%vreg0
	tBL pred:14, pred:%noreg, <ga:@pushdecl>, <regmask %LR %D8 %D9 %D10 %D11 %D12 %D13 %D14 %D15 %Q4 %Q5 %Q6 %Q7 %R4 %R5 %R6 %R7 %R8 %R9 %R10 %R11 %S16 %S17 %S18 %S19 %S20 %S21 %S22 %S23 %S24 %S25 %S26 %S27 %S28 %S29 %S30 %S31 %D8_D10 %D9_D11 %D10_D12 %D11_D13 %D12_D14 %D13_D15 %Q4_Q5 %Q5_Q6 %Q6_Q7 %Q4_Q5_Q6_Q7 %R4_R5 %R6_R7 %R8_R9 %R10_R11 %D8_D9_D10 %D9_D10_D11 %D10_D11_D12 %D11_D12_D13 %D12_D13_D14 %D13_D14_D15 %D8_D10_D12 %D9_D11_D13 %D10_D12_D14 %D11_D13_D15 %D8_D10_D12_D14 %D9_D11_D13_D15 %D9_D10 %D11_D12 %D13_D14 %D9_D10_D11_D12 %D11_D12_D13_D14>, %SP<imp-use>, %R0<imp-use>, %SP<imp-def>, %R0<imp-def>, ...
	ADJCALLSTACKUP 0, 0, pred:14, pred:%noreg, %SP<imp-def,dead>, %SP<imp-use>
	%vreg5<def> = COPY %R0; GPR:%vreg5
	t2STRi12 %vreg4<kill>, %vreg1, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] GPR:%vreg4 rGPR:%vreg1
	%R0<def> = COPY %vreg5; GPR:%vreg5
	tBX_RET pred:14, pred:%noreg, %R0<imp-use>

# End machine code for function pushdecl_top_level.

# After Merge disjoint stack slots:
# Machine code for function pushdecl_top_level: SSA
Function Live Ins: %R0 in %vreg0

BB#0: derived from LLVM BB %0
    Live Ins: %R0
	%vreg0<def> = COPY %R0; GPR:%vreg0
	%vreg1<def> = t2MOVi32imm <ga:@current_binding_level>; rGPR:%vreg1
	%vreg2<def> = t2MOVi32imm <ga:@global_binding_level>; rGPR:%vreg2
	%vreg3<def> = t2LDRi12 %vreg2<kill>, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)] GPR:%vreg3 rGPR:%vreg2
	%vreg4<def> = t2LDRi12 %vreg1, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] GPR:%vreg4 rGPR:%vreg1
	t2STRi12 %vreg3<kill>, %vreg1, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] GPR:%vreg3 rGPR:%vreg1
	ADJCALLSTACKDOWN 0, pred:14, pred:%noreg, %SP<imp-def,dead>, %SP<imp-use>
	%R0<def> = COPY %vreg0; GPR:%vreg0
	tBL pred:14, pred:%noreg, <ga:@pushdecl>, <regmask %LR %D8 %D9 %D10 %D11 %D12 %D13 %D14 %D15 %Q4 %Q5 %Q6 %Q7 %R4 %R5 %R6 %R7 %R8 %R9 %R10 %R11 %S16 %S17 %S18 %S19 %S20 %S21 %S22 %S23 %S24 %S25 %S26 %S27 %S28 %S29 %S30 %S31 %D8_D10 %D9_D11 %D10_D12 %D11_D13 %D12_D14 %D13_D15 %Q4_Q5 %Q5_Q6 %Q6_Q7 %Q4_Q5_Q6_Q7 %R4_R5 %R6_R7 %R8_R9 %R10_R11 %D8_D9_D10 %D9_D10_D11 %D10_D11_D12 %D11_D12_D13 %D12_D13_D14 %D13_D14_D15 %D8_D10_D12 %D9_D11_D13 %D10_D12_D14 %D11_D13_D15 %D8_D10_D12_D14 %D9_D11_D13_D15 %D9_D10 %D11_D12 %D13_D14 %D9_D10_D11_D12 %D11_D12_D13_D14>, %SP<imp-use>, %R0<imp-use>, %SP<imp-def>, %R0<imp-def>, ...
	ADJCALLSTACKUP 0, 0, pred:14, pred:%noreg, %SP<imp-def,dead>, %SP<imp-use>
	%vreg5<def> = COPY %R0; GPR:%vreg5
	t2STRi12 %vreg4<kill>, %vreg1, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] GPR:%vreg4 rGPR:%vreg1
	%R0<def> = COPY %vreg5; GPR:%vreg5
	tBX_RET pred:14, pred:%noreg, %R0<imp-use>

# End machine code for function pushdecl_top_level.

# After Local Stack Slot Allocation:
# Machine code for function pushdecl_top_level: SSA
Function Live Ins: %R0 in %vreg0

BB#0: derived from LLVM BB %0
    Live Ins: %R0
	%vreg0<def> = COPY %R0; GPR:%vreg0
	%vreg1<def> = t2MOVi32imm <ga:@current_binding_level>; rGPR:%vreg1
	%vreg2<def> = t2MOVi32imm <ga:@global_binding_level>; rGPR:%vreg2
	%vreg3<def> = t2LDRi12 %vreg2<kill>, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)] GPR:%vreg3 rGPR:%vreg2
	%vreg4<def> = t2LDRi12 %vreg1, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] GPR:%vreg4 rGPR:%vreg1
	t2STRi12 %vreg3<kill>, %vreg1, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] GPR:%vreg3 rGPR:%vreg1
	ADJCALLSTACKDOWN 0, pred:14, pred:%noreg, %SP<imp-def,dead>, %SP<imp-use>
	%R0<def> = COPY %vreg0; GPR:%vreg0
	tBL pred:14, pred:%noreg, <ga:@pushdecl>, <regmask %LR %D8 %D9 %D10 %D11 %D12 %D13 %D14 %D15 %Q4 %Q5 %Q6 %Q7 %R4 %R5 %R6 %R7 %R8 %R9 %R10 %R11 %S16 %S17 %S18 %S19 %S20 %S21 %S22 %S23 %S24 %S25 %S26 %S27 %S28 %S29 %S30 %S31 %D8_D10 %D9_D11 %D10_D12 %D11_D13 %D12_D14 %D13_D15 %Q4_Q5 %Q5_Q6 %Q6_Q7 %Q4_Q5_Q6_Q7 %R4_R5 %R6_R7 %R8_R9 %R10_R11 %D8_D9_D10 %D9_D10_D11 %D10_D11_D12 %D11_D12_D13 %D12_D13_D14 %D13_D14_D15 %D8_D10_D12 %D9_D11_D13 %D10_D12_D14 %D11_D13_D15 %D8_D10_D12_D14 %D9_D11_D13_D15 %D9_D10 %D11_D12 %D13_D14 %D9_D10_D11_D12 %D11_D12_D13_D14>, %SP<imp-use>, %R0<imp-use>, %SP<imp-def>, %R0<imp-def>, ...
	ADJCALLSTACKUP 0, 0, pred:14, pred:%noreg, %SP<imp-def,dead>, %SP<imp-use>
	%vreg5<def> = COPY %R0; GPR:%vreg5
	t2STRi12 %vreg4<kill>, %vreg1, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] GPR:%vreg4 rGPR:%vreg1
	%R0<def> = COPY %vreg5; GPR:%vreg5
	tBX_RET pred:14, pred:%noreg, %R0<imp-use>

# End machine code for function pushdecl_top_level.

# After Remove dead machine instructions:
# Machine code for function pushdecl_top_level: SSA
Function Live Ins: %R0 in %vreg0

BB#0: derived from LLVM BB %0
    Live Ins: %R0
	%vreg0<def> = COPY %R0; GPR:%vreg0
	%vreg1<def> = t2MOVi32imm <ga:@current_binding_level>; rGPR:%vreg1
	%vreg2<def> = t2MOVi32imm <ga:@global_binding_level>; rGPR:%vreg2
	%vreg3<def> = t2LDRi12 %vreg2<kill>, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)] GPR:%vreg3 rGPR:%vreg2
	%vreg4<def> = t2LDRi12 %vreg1, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] GPR:%vreg4 rGPR:%vreg1
	t2STRi12 %vreg3<kill>, %vreg1, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] GPR:%vreg3 rGPR:%vreg1
	ADJCALLSTACKDOWN 0, pred:14, pred:%noreg, %SP<imp-def,dead>, %SP<imp-use>
	%R0<def> = COPY %vreg0; GPR:%vreg0
	tBL pred:14, pred:%noreg, <ga:@pushdecl>, <regmask %LR %D8 %D9 %D10 %D11 %D12 %D13 %D14 %D15 %Q4 %Q5 %Q6 %Q7 %R4 %R5 %R6 %R7 %R8 %R9 %R10 %R11 %S16 %S17 %S18 %S19 %S20 %S21 %S22 %S23 %S24 %S25 %S26 %S27 %S28 %S29 %S30 %S31 %D8_D10 %D9_D11 %D10_D12 %D11_D13 %D12_D14 %D13_D15 %Q4_Q5 %Q5_Q6 %Q6_Q7 %Q4_Q5_Q6_Q7 %R4_R5 %R6_R7 %R8_R9 %R10_R11 %D8_D9_D10 %D9_D10_D11 %D10_D11_D12 %D11_D12_D13 %D12_D13_D14 %D13_D14_D15 %D8_D10_D12 %D9_D11_D13 %D10_D12_D14 %D11_D13_D15 %D8_D10_D12_D14 %D9_D11_D13_D15 %D9_D10 %D11_D12 %D13_D14 %D9_D10_D11_D12 %D11_D12_D13_D14>, %SP<imp-use>, %R0<imp-use>, %SP<imp-def>, %R0<imp-def>, ...
	ADJCALLSTACKUP 0, 0, pred:14, pred:%noreg, %SP<imp-def,dead>, %SP<imp-use>
	%vreg5<def> = COPY %R0; GPR:%vreg5
	t2STRi12 %vreg4<kill>, %vreg1, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] GPR:%vreg4 rGPR:%vreg1
	%R0<def> = COPY %vreg5; GPR:%vreg5
	tBX_RET pred:14, pred:%noreg, %R0<imp-use>

# End machine code for function pushdecl_top_level.

# After Machine Loop Invariant Code Motion:
# Machine code for function pushdecl_top_level: SSA
Function Live Ins: %R0 in %vreg0

BB#0: derived from LLVM BB %0
    Live Ins: %R0
	%vreg0<def> = COPY %R0; GPR:%vreg0
	%vreg1<def> = t2MOVi32imm <ga:@current_binding_level>; rGPR:%vreg1
	%vreg2<def> = t2MOVi32imm <ga:@global_binding_level>; rGPR:%vreg2
	%vreg3<def> = t2LDRi12 %vreg2<kill>, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)] GPR:%vreg3 rGPR:%vreg2
	%vreg4<def> = t2LDRi12 %vreg1, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] GPR:%vreg4 rGPR:%vreg1
	t2STRi12 %vreg3<kill>, %vreg1, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] GPR:%vreg3 rGPR:%vreg1
	ADJCALLSTACKDOWN 0, pred:14, pred:%noreg, %SP<imp-def,dead>, %SP<imp-use>
	%R0<def> = COPY %vreg0; GPR:%vreg0
	tBL pred:14, pred:%noreg, <ga:@pushdecl>, <regmask %LR %D8 %D9 %D10 %D11 %D12 %D13 %D14 %D15 %Q4 %Q5 %Q6 %Q7 %R4 %R5 %R6 %R7 %R8 %R9 %R10 %R11 %S16 %S17 %S18 %S19 %S20 %S21 %S22 %S23 %S24 %S25 %S26 %S27 %S28 %S29 %S30 %S31 %D8_D10 %D9_D11 %D10_D12 %D11_D13 %D12_D14 %D13_D15 %Q4_Q5 %Q5_Q6 %Q6_Q7 %Q4_Q5_Q6_Q7 %R4_R5 %R6_R7 %R8_R9 %R10_R11 %D8_D9_D10 %D9_D10_D11 %D10_D11_D12 %D11_D12_D13 %D12_D13_D14 %D13_D14_D15 %D8_D10_D12 %D9_D11_D13 %D10_D12_D14 %D11_D13_D15 %D8_D10_D12_D14 %D9_D11_D13_D15 %D9_D10 %D11_D12 %D13_D14 %D9_D10_D11_D12 %D11_D12_D13_D14>, %SP<imp-use>, %R0<imp-use>, %SP<imp-def>, %R0<imp-def>, ...
	ADJCALLSTACKUP 0, 0, pred:14, pred:%noreg, %SP<imp-def,dead>, %SP<imp-use>
	%vreg5<def> = COPY %R0; GPR:%vreg5
	t2STRi12 %vreg4<kill>, %vreg1, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] GPR:%vreg4 rGPR:%vreg1
	%R0<def> = COPY %vreg5; GPR:%vreg5
	tBX_RET pred:14, pred:%noreg, %R0<imp-use>

# End machine code for function pushdecl_top_level.

# After Machine Common Subexpression Elimination:
# Machine code for function pushdecl_top_level: SSA
Function Live Ins: %R0 in %vreg0

BB#0: derived from LLVM BB %0
    Live Ins: %R0
	%vreg0<def> = COPY %R0; GPR:%vreg0
	%vreg1<def> = t2MOVi32imm <ga:@current_binding_level>; rGPR:%vreg1
	%vreg2<def> = t2MOVi32imm <ga:@global_binding_level>; rGPR:%vreg2
	%vreg3<def> = t2LDRi12 %vreg2<kill>, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)] GPR:%vreg3 rGPR:%vreg2
	%vreg4<def> = t2LDRi12 %vreg1, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] GPR:%vreg4 rGPR:%vreg1
	t2STRi12 %vreg3<kill>, %vreg1, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] GPR:%vreg3 rGPR:%vreg1
	ADJCALLSTACKDOWN 0, pred:14, pred:%noreg, %SP<imp-def,dead>, %SP<imp-use>
	%R0<def> = COPY %vreg0; GPR:%vreg0
	tBL pred:14, pred:%noreg, <ga:@pushdecl>, <regmask %LR %D8 %D9 %D10 %D11 %D12 %D13 %D14 %D15 %Q4 %Q5 %Q6 %Q7 %R4 %R5 %R6 %R7 %R8 %R9 %R10 %R11 %S16 %S17 %S18 %S19 %S20 %S21 %S22 %S23 %S24 %S25 %S26 %S27 %S28 %S29 %S30 %S31 %D8_D10 %D9_D11 %D10_D12 %D11_D13 %D12_D14 %D13_D15 %Q4_Q5 %Q5_Q6 %Q6_Q7 %Q4_Q5_Q6_Q7 %R4_R5 %R6_R7 %R8_R9 %R10_R11 %D8_D9_D10 %D9_D10_D11 %D10_D11_D12 %D11_D12_D13 %D12_D13_D14 %D13_D14_D15 %D8_D10_D12 %D9_D11_D13 %D10_D12_D14 %D11_D13_D15 %D8_D10_D12_D14 %D9_D11_D13_D15 %D9_D10 %D11_D12 %D13_D14 %D9_D10_D11_D12 %D11_D12_D13_D14>, %SP<imp-use>, %R0<imp-use>, %SP<imp-def>, %R0<imp-def>, ...
	ADJCALLSTACKUP 0, 0, pred:14, pred:%noreg, %SP<imp-def,dead>, %SP<imp-use>
	%vreg5<def> = COPY %R0; GPR:%vreg5
	t2STRi12 %vreg4<kill>, %vreg1, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] GPR:%vreg4 rGPR:%vreg1
	%R0<def> = COPY %vreg5; GPR:%vreg5
	tBX_RET pred:14, pred:%noreg, %R0<imp-use>

# End machine code for function pushdecl_top_level.

# After Machine code sinking:
# Machine code for function pushdecl_top_level: SSA
Function Live Ins: %R0 in %vreg0

BB#0: derived from LLVM BB %0
    Live Ins: %R0
	%vreg0<def> = COPY %R0; GPR:%vreg0
	%vreg1<def> = t2MOVi32imm <ga:@current_binding_level>; rGPR:%vreg1
	%vreg2<def> = t2MOVi32imm <ga:@global_binding_level>; rGPR:%vreg2
	%vreg3<def> = t2LDRi12 %vreg2<kill>, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)] GPR:%vreg3 rGPR:%vreg2
	%vreg4<def> = t2LDRi12 %vreg1, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] GPR:%vreg4 rGPR:%vreg1
	t2STRi12 %vreg3<kill>, %vreg1, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] GPR:%vreg3 rGPR:%vreg1
	ADJCALLSTACKDOWN 0, pred:14, pred:%noreg, %SP<imp-def,dead>, %SP<imp-use>
	%R0<def> = COPY %vreg0; GPR:%vreg0
	tBL pred:14, pred:%noreg, <ga:@pushdecl>, <regmask %LR %D8 %D9 %D10 %D11 %D12 %D13 %D14 %D15 %Q4 %Q5 %Q6 %Q7 %R4 %R5 %R6 %R7 %R8 %R9 %R10 %R11 %S16 %S17 %S18 %S19 %S20 %S21 %S22 %S23 %S24 %S25 %S26 %S27 %S28 %S29 %S30 %S31 %D8_D10 %D9_D11 %D10_D12 %D11_D13 %D12_D14 %D13_D15 %Q4_Q5 %Q5_Q6 %Q6_Q7 %Q4_Q5_Q6_Q7 %R4_R5 %R6_R7 %R8_R9 %R10_R11 %D8_D9_D10 %D9_D10_D11 %D10_D11_D12 %D11_D12_D13 %D12_D13_D14 %D13_D14_D15 %D8_D10_D12 %D9_D11_D13 %D10_D12_D14 %D11_D13_D15 %D8_D10_D12_D14 %D9_D11_D13_D15 %D9_D10 %D11_D12 %D13_D14 %D9_D10_D11_D12 %D11_D12_D13_D14>, %SP<imp-use>, %R0<imp-use>, %SP<imp-def>, %R0<imp-def>, ...
	ADJCALLSTACKUP 0, 0, pred:14, pred:%noreg, %SP<imp-def,dead>, %SP<imp-use>
	%vreg5<def> = COPY %R0; GPR:%vreg5
	t2STRi12 %vreg4<kill>, %vreg1, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] GPR:%vreg4 rGPR:%vreg1
	%R0<def> = COPY %vreg5; GPR:%vreg5
	tBX_RET pred:14, pred:%noreg, %R0<imp-use>

# End machine code for function pushdecl_top_level.

# After Peephole Optimizations:
# Machine code for function pushdecl_top_level: SSA
Function Live Ins: %R0 in %vreg0

BB#0: derived from LLVM BB %0
    Live Ins: %R0
	%vreg0<def> = COPY %R0; GPR:%vreg0
	%vreg1<def> = t2MOVi32imm <ga:@current_binding_level>; rGPR:%vreg1
	%vreg2<def> = t2MOVi32imm <ga:@global_binding_level>; rGPR:%vreg2
	%vreg3<def> = t2LDRi12 %vreg2<kill>, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)] GPR:%vreg3 rGPR:%vreg2
	%vreg4<def> = t2LDRi12 %vreg1, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] GPR:%vreg4 rGPR:%vreg1
	t2STRi12 %vreg3<kill>, %vreg1, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] GPR:%vreg3 rGPR:%vreg1
	ADJCALLSTACKDOWN 0, pred:14, pred:%noreg, %SP<imp-def,dead>, %SP<imp-use>
	%R0<def> = COPY %vreg0; GPR:%vreg0
	tBL pred:14, pred:%noreg, <ga:@pushdecl>, <regmask %LR %D8 %D9 %D10 %D11 %D12 %D13 %D14 %D15 %Q4 %Q5 %Q6 %Q7 %R4 %R5 %R6 %R7 %R8 %R9 %R10 %R11 %S16 %S17 %S18 %S19 %S20 %S21 %S22 %S23 %S24 %S25 %S26 %S27 %S28 %S29 %S30 %S31 %D8_D10 %D9_D11 %D10_D12 %D11_D13 %D12_D14 %D13_D15 %Q4_Q5 %Q5_Q6 %Q6_Q7 %Q4_Q5_Q6_Q7 %R4_R5 %R6_R7 %R8_R9 %R10_R11 %D8_D9_D10 %D9_D10_D11 %D10_D11_D12 %D11_D12_D13 %D12_D13_D14 %D13_D14_D15 %D8_D10_D12 %D9_D11_D13 %D10_D12_D14 %D11_D13_D15 %D8_D10_D12_D14 %D9_D11_D13_D15 %D9_D10 %D11_D12 %D13_D14 %D9_D10_D11_D12 %D11_D12_D13_D14>, %SP<imp-use>, %R0<imp-use>, %SP<imp-def>, %R0<imp-def>, ...
	ADJCALLSTACKUP 0, 0, pred:14, pred:%noreg, %SP<imp-def,dead>, %SP<imp-use>
	%vreg5<def> = COPY %R0; GPR:%vreg5
	t2STRi12 %vreg4<kill>, %vreg1, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] GPR:%vreg4 rGPR:%vreg1
	%R0<def> = COPY %vreg5; GPR:%vreg5
	tBX_RET pred:14, pred:%noreg, %R0<imp-use>

# End machine code for function pushdecl_top_level.

# After Remove dead machine instructions:
# Machine code for function pushdecl_top_level: SSA
Function Live Ins: %R0 in %vreg0

BB#0: derived from LLVM BB %0
    Live Ins: %R0
	%vreg0<def> = COPY %R0; GPR:%vreg0
	%vreg1<def> = t2MOVi32imm <ga:@current_binding_level>; rGPR:%vreg1
	%vreg2<def> = t2MOVi32imm <ga:@global_binding_level>; rGPR:%vreg2
	%vreg3<def> = t2LDRi12 %vreg2<kill>, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)] GPR:%vreg3 rGPR:%vreg2
	%vreg4<def> = t2LDRi12 %vreg1, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] GPR:%vreg4 rGPR:%vreg1
	t2STRi12 %vreg3<kill>, %vreg1, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] GPR:%vreg3 rGPR:%vreg1
	ADJCALLSTACKDOWN 0, pred:14, pred:%noreg, %SP<imp-def,dead>, %SP<imp-use>
	%R0<def> = COPY %vreg0; GPR:%vreg0
	tBL pred:14, pred:%noreg, <ga:@pushdecl>, <regmask %LR %D8 %D9 %D10 %D11 %D12 %D13 %D14 %D15 %Q4 %Q5 %Q6 %Q7 %R4 %R5 %R6 %R7 %R8 %R9 %R10 %R11 %S16 %S17 %S18 %S19 %S20 %S21 %S22 %S23 %S24 %S25 %S26 %S27 %S28 %S29 %S30 %S31 %D8_D10 %D9_D11 %D10_D12 %D11_D13 %D12_D14 %D13_D15 %Q4_Q5 %Q5_Q6 %Q6_Q7 %Q4_Q5_Q6_Q7 %R4_R5 %R6_R7 %R8_R9 %R10_R11 %D8_D9_D10 %D9_D10_D11 %D10_D11_D12 %D11_D12_D13 %D12_D13_D14 %D13_D14_D15 %D8_D10_D12 %D9_D11_D13 %D10_D12_D14 %D11_D13_D15 %D8_D10_D12_D14 %D9_D11_D13_D15 %D9_D10 %D11_D12 %D13_D14 %D9_D10_D11_D12 %D11_D12_D13_D14>, %SP<imp-use>, %R0<imp-use>, %SP<imp-def>, %R0<imp-def>, ...
	ADJCALLSTACKUP 0, 0, pred:14, pred:%noreg, %SP<imp-def,dead>, %SP<imp-use>
	%vreg5<def> = COPY %R0; GPR:%vreg5
	t2STRi12 %vreg4<kill>, %vreg1, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] GPR:%vreg4 rGPR:%vreg1
	%R0<def> = COPY %vreg5; GPR:%vreg5
	tBX_RET pred:14, pred:%noreg, %R0<imp-use>

# End machine code for function pushdecl_top_level.

# After ARM MLA / MLS expansion pass:
# Machine code for function pushdecl_top_level: SSA
Function Live Ins: %R0 in %vreg0

BB#0: derived from LLVM BB %0
    Live Ins: %R0
	%vreg0<def> = COPY %R0; GPR:%vreg0
	%vreg1<def> = t2MOVi32imm <ga:@current_binding_level>; rGPR:%vreg1
	%vreg2<def> = t2MOVi32imm <ga:@global_binding_level>; rGPR:%vreg2
	%vreg3<def> = t2LDRi12 %vreg2<kill>, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)] GPR:%vreg3 rGPR:%vreg2
	%vreg4<def> = t2LDRi12 %vreg1, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] GPR:%vreg4 rGPR:%vreg1
	t2STRi12 %vreg3<kill>, %vreg1, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] GPR:%vreg3 rGPR:%vreg1
	ADJCALLSTACKDOWN 0, pred:14, pred:%noreg, %SP<imp-def,dead>, %SP<imp-use>
	%R0<def> = COPY %vreg0; GPR:%vreg0
	tBL pred:14, pred:%noreg, <ga:@pushdecl>, <regmask %LR %D8 %D9 %D10 %D11 %D12 %D13 %D14 %D15 %Q4 %Q5 %Q6 %Q7 %R4 %R5 %R6 %R7 %R8 %R9 %R10 %R11 %S16 %S17 %S18 %S19 %S20 %S21 %S22 %S23 %S24 %S25 %S26 %S27 %S28 %S29 %S30 %S31 %D8_D10 %D9_D11 %D10_D12 %D11_D13 %D12_D14 %D13_D15 %Q4_Q5 %Q5_Q6 %Q6_Q7 %Q4_Q5_Q6_Q7 %R4_R5 %R6_R7 %R8_R9 %R10_R11 %D8_D9_D10 %D9_D10_D11 %D10_D11_D12 %D11_D12_D13 %D12_D13_D14 %D13_D14_D15 %D8_D10_D12 %D9_D11_D13 %D10_D12_D14 %D11_D13_D15 %D8_D10_D12_D14 %D9_D11_D13_D15 %D9_D10 %D11_D12 %D13_D14 %D9_D10_D11_D12 %D11_D12_D13_D14>, %SP<imp-use>, %R0<imp-use>, %SP<imp-def>, %R0<imp-def>, ...
	ADJCALLSTACKUP 0, 0, pred:14, pred:%noreg, %SP<imp-def,dead>, %SP<imp-use>
	%vreg5<def> = COPY %R0; GPR:%vreg5
	t2STRi12 %vreg4<kill>, %vreg1, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] GPR:%vreg4 rGPR:%vreg1
	%R0<def> = COPY %vreg5; GPR:%vreg5
	tBX_RET pred:14, pred:%noreg, %R0<imp-use>

# End machine code for function pushdecl_top_level.

# After ARM pre- register allocation load / store optimization pass:
# Machine code for function pushdecl_top_level: SSA
Function Live Ins: %R0 in %vreg0

BB#0: derived from LLVM BB %0
    Live Ins: %R0
	%vreg0<def> = COPY %R0; GPR:%vreg0
	%vreg1<def> = t2MOVi32imm <ga:@current_binding_level>; rGPR:%vreg1
	%vreg2<def> = t2MOVi32imm <ga:@global_binding_level>; rGPR:%vreg2
	%vreg3<def> = t2LDRi12 %vreg2<kill>, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)] GPR:%vreg3 rGPR:%vreg2
	%vreg4<def> = t2LDRi12 %vreg1, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] GPR:%vreg4 rGPR:%vreg1
	t2STRi12 %vreg3<kill>, %vreg1, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] GPR:%vreg3 rGPR:%vreg1
	ADJCALLSTACKDOWN 0, pred:14, pred:%noreg, %SP<imp-def,dead>, %SP<imp-use>
	%R0<def> = COPY %vreg0; GPR:%vreg0
	tBL pred:14, pred:%noreg, <ga:@pushdecl>, <regmask %LR %D8 %D9 %D10 %D11 %D12 %D13 %D14 %D15 %Q4 %Q5 %Q6 %Q7 %R4 %R5 %R6 %R7 %R8 %R9 %R10 %R11 %S16 %S17 %S18 %S19 %S20 %S21 %S22 %S23 %S24 %S25 %S26 %S27 %S28 %S29 %S30 %S31 %D8_D10 %D9_D11 %D10_D12 %D11_D13 %D12_D14 %D13_D15 %Q4_Q5 %Q5_Q6 %Q6_Q7 %Q4_Q5_Q6_Q7 %R4_R5 %R6_R7 %R8_R9 %R10_R11 %D8_D9_D10 %D9_D10_D11 %D10_D11_D12 %D11_D12_D13 %D12_D13_D14 %D13_D14_D15 %D8_D10_D12 %D9_D11_D13 %D10_D12_D14 %D11_D13_D15 %D8_D10_D12_D14 %D9_D11_D13_D15 %D9_D10 %D11_D12 %D13_D14 %D9_D10_D11_D12 %D11_D12_D13_D14>, %SP<imp-use>, %R0<imp-use>, %SP<imp-def>, %R0<imp-def>, ...
	ADJCALLSTACKUP 0, 0, pred:14, pred:%noreg, %SP<imp-def,dead>, %SP<imp-use>
	%vreg5<def> = COPY %R0; GPR:%vreg5
	t2STRi12 %vreg4<kill>, %vreg1, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] GPR:%vreg4 rGPR:%vreg1
	%R0<def> = COPY %vreg5; GPR:%vreg5
	tBX_RET pred:14, pred:%noreg, %R0<imp-use>

# End machine code for function pushdecl_top_level.

# After ARM A15 S->D optimizer:
# Machine code for function pushdecl_top_level: SSA
Function Live Ins: %R0 in %vreg0

BB#0: derived from LLVM BB %0
    Live Ins: %R0
	%vreg0<def> = COPY %R0; GPR:%vreg0
	%vreg1<def> = t2MOVi32imm <ga:@current_binding_level>; rGPR:%vreg1
	%vreg2<def> = t2MOVi32imm <ga:@global_binding_level>; rGPR:%vreg2
	%vreg3<def> = t2LDRi12 %vreg2<kill>, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)] GPR:%vreg3 rGPR:%vreg2
	%vreg4<def> = t2LDRi12 %vreg1, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] GPR:%vreg4 rGPR:%vreg1
	t2STRi12 %vreg3<kill>, %vreg1, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] GPR:%vreg3 rGPR:%vreg1
	ADJCALLSTACKDOWN 0, pred:14, pred:%noreg, %SP<imp-def,dead>, %SP<imp-use>
	%R0<def> = COPY %vreg0; GPR:%vreg0
	tBL pred:14, pred:%noreg, <ga:@pushdecl>, <regmask %LR %D8 %D9 %D10 %D11 %D12 %D13 %D14 %D15 %Q4 %Q5 %Q6 %Q7 %R4 %R5 %R6 %R7 %R8 %R9 %R10 %R11 %S16 %S17 %S18 %S19 %S20 %S21 %S22 %S23 %S24 %S25 %S26 %S27 %S28 %S29 %S30 %S31 %D8_D10 %D9_D11 %D10_D12 %D11_D13 %D12_D14 %D13_D15 %Q4_Q5 %Q5_Q6 %Q6_Q7 %Q4_Q5_Q6_Q7 %R4_R5 %R6_R7 %R8_R9 %R10_R11 %D8_D9_D10 %D9_D10_D11 %D10_D11_D12 %D11_D12_D13 %D12_D13_D14 %D13_D14_D15 %D8_D10_D12 %D9_D11_D13 %D10_D12_D14 %D11_D13_D15 %D8_D10_D12_D14 %D9_D11_D13_D15 %D9_D10 %D11_D12 %D13_D14 %D9_D10_D11_D12 %D11_D12_D13_D14>, %SP<imp-use>, %R0<imp-use>, %SP<imp-def>, %R0<imp-def>, ...
	ADJCALLSTACKUP 0, 0, pred:14, pred:%noreg, %SP<imp-def,dead>, %SP<imp-use>
	%vreg5<def> = COPY %R0; GPR:%vreg5
	t2STRi12 %vreg4<kill>, %vreg1, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] GPR:%vreg4 rGPR:%vreg1
	%R0<def> = COPY %vreg5; GPR:%vreg5
	tBX_RET pred:14, pred:%noreg, %R0<imp-use>

# End machine code for function pushdecl_top_level.

# After Process Implicit Definitions:
# Machine code for function pushdecl_top_level: SSA
Function Live Ins: %R0 in %vreg0

BB#0: derived from LLVM BB %0
    Live Ins: %R0
	%vreg0<def> = COPY %R0; GPR:%vreg0
	%vreg1<def> = t2MOVi32imm <ga:@current_binding_level>; rGPR:%vreg1
	%vreg2<def> = t2MOVi32imm <ga:@global_binding_level>; rGPR:%vreg2
	%vreg3<def> = t2LDRi12 %vreg2<kill>, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)] GPR:%vreg3 rGPR:%vreg2
	%vreg4<def> = t2LDRi12 %vreg1, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] GPR:%vreg4 rGPR:%vreg1
	t2STRi12 %vreg3<kill>, %vreg1, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] GPR:%vreg3 rGPR:%vreg1
	ADJCALLSTACKDOWN 0, pred:14, pred:%noreg, %SP<imp-def,dead>, %SP<imp-use>
	%R0<def> = COPY %vreg0; GPR:%vreg0
	tBL pred:14, pred:%noreg, <ga:@pushdecl>, <regmask %LR %D8 %D9 %D10 %D11 %D12 %D13 %D14 %D15 %Q4 %Q5 %Q6 %Q7 %R4 %R5 %R6 %R7 %R8 %R9 %R10 %R11 %S16 %S17 %S18 %S19 %S20 %S21 %S22 %S23 %S24 %S25 %S26 %S27 %S28 %S29 %S30 %S31 %D8_D10 %D9_D11 %D10_D12 %D11_D13 %D12_D14 %D13_D15 %Q4_Q5 %Q5_Q6 %Q6_Q7 %Q4_Q5_Q6_Q7 %R4_R5 %R6_R7 %R8_R9 %R10_R11 %D8_D9_D10 %D9_D10_D11 %D10_D11_D12 %D11_D12_D13 %D12_D13_D14 %D13_D14_D15 %D8_D10_D12 %D9_D11_D13 %D10_D12_D14 %D11_D13_D15 %D8_D10_D12_D14 %D9_D11_D13_D15 %D9_D10 %D11_D12 %D13_D14 %D9_D10_D11_D12 %D11_D12_D13_D14>, %SP<imp-use>, %R0<imp-use>, %SP<imp-def>, %R0<imp-def>, ...
	ADJCALLSTACKUP 0, 0, pred:14, pred:%noreg, %SP<imp-def,dead>, %SP<imp-use>
	%vreg5<def> = COPY %R0; GPR:%vreg5
	t2STRi12 %vreg4<kill>, %vreg1, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] GPR:%vreg4 rGPR:%vreg1
	%R0<def> = COPY %vreg5; GPR:%vreg5
	tBX_RET pred:14, pred:%noreg, %R0<imp-use>

# End machine code for function pushdecl_top_level.

# After Live Variable Analysis:
# Machine code for function pushdecl_top_level: SSA
Function Live Ins: %R0 in %vreg0

BB#0: derived from LLVM BB %0
    Live Ins: %R0
	%vreg0<def> = COPY %R0<kill>; GPR:%vreg0
	%vreg1<def> = t2MOVi32imm <ga:@current_binding_level>; rGPR:%vreg1
	%vreg2<def> = t2MOVi32imm <ga:@global_binding_level>; rGPR:%vreg2
	%vreg3<def> = t2LDRi12 %vreg2<kill>, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)] GPR:%vreg3 rGPR:%vreg2
	%vreg4<def> = t2LDRi12 %vreg1, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] GPR:%vreg4 rGPR:%vreg1
	t2STRi12 %vreg3<kill>, %vreg1, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] GPR:%vreg3 rGPR:%vreg1
	ADJCALLSTACKDOWN 0, pred:14, pred:%noreg, %SP<imp-def,dead>, %SP<imp-use>
	%R0<def> = COPY %vreg0<kill>; GPR:%vreg0
	tBL pred:14, pred:%noreg, <ga:@pushdecl>, <regmask %LR %D8 %D9 %D10 %D11 %D12 %D13 %D14 %D15 %Q4 %Q5 %Q6 %Q7 %R4 %R5 %R6 %R7 %R8 %R9 %R10 %R11 %S16 %S17 %S18 %S19 %S20 %S21 %S22 %S23 %S24 %S25 %S26 %S27 %S28 %S29 %S30 %S31 %D8_D10 %D9_D11 %D10_D12 %D11_D13 %D12_D14 %D13_D15 %Q4_Q5 %Q5_Q6 %Q6_Q7 %Q4_Q5_Q6_Q7 %R4_R5 %R6_R7 %R8_R9 %R10_R11 %D8_D9_D10 %D9_D10_D11 %D10_D11_D12 %D11_D12_D13 %D12_D13_D14 %D13_D14_D15 %D8_D10_D12 %D9_D11_D13 %D10_D12_D14 %D11_D13_D15 %D8_D10_D12_D14 %D9_D11_D13_D15 %D9_D10 %D11_D12 %D13_D14 %D9_D10_D11_D12 %D11_D12_D13_D14>, %SP<imp-use>, %R0<imp-use,kill>, %SP<imp-def>, %R0<imp-def>, ...
	ADJCALLSTACKUP 0, 0, pred:14, pred:%noreg, %SP<imp-def,dead>, %SP<imp-use>
	%vreg5<def> = COPY %R0<kill>; GPR:%vreg5
	t2STRi12 %vreg4<kill>, %vreg1<kill>, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] GPR:%vreg4 rGPR:%vreg1
	%R0<def> = COPY %vreg5<kill>; GPR:%vreg5
	tBX_RET pred:14, pred:%noreg, %R0<imp-use,kill>

# End machine code for function pushdecl_top_level.

# After Machine Natural Loop Construction:
# Machine code for function pushdecl_top_level: SSA
Function Live Ins: %R0 in %vreg0

BB#0: derived from LLVM BB %0
    Live Ins: %R0
	%vreg0<def> = COPY %R0<kill>; GPR:%vreg0
	%vreg1<def> = t2MOVi32imm <ga:@current_binding_level>; rGPR:%vreg1
	%vreg2<def> = t2MOVi32imm <ga:@global_binding_level>; rGPR:%vreg2
	%vreg3<def> = t2LDRi12 %vreg2<kill>, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)] GPR:%vreg3 rGPR:%vreg2
	%vreg4<def> = t2LDRi12 %vreg1, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] GPR:%vreg4 rGPR:%vreg1
	t2STRi12 %vreg3<kill>, %vreg1, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] GPR:%vreg3 rGPR:%vreg1
	ADJCALLSTACKDOWN 0, pred:14, pred:%noreg, %SP<imp-def,dead>, %SP<imp-use>
	%R0<def> = COPY %vreg0<kill>; GPR:%vreg0
	tBL pred:14, pred:%noreg, <ga:@pushdecl>, <regmask %LR %D8 %D9 %D10 %D11 %D12 %D13 %D14 %D15 %Q4 %Q5 %Q6 %Q7 %R4 %R5 %R6 %R7 %R8 %R9 %R10 %R11 %S16 %S17 %S18 %S19 %S20 %S21 %S22 %S23 %S24 %S25 %S26 %S27 %S28 %S29 %S30 %S31 %D8_D10 %D9_D11 %D10_D12 %D11_D13 %D12_D14 %D13_D15 %Q4_Q5 %Q5_Q6 %Q6_Q7 %Q4_Q5_Q6_Q7 %R4_R5 %R6_R7 %R8_R9 %R10_R11 %D8_D9_D10 %D9_D10_D11 %D10_D11_D12 %D11_D12_D13 %D12_D13_D14 %D13_D14_D15 %D8_D10_D12 %D9_D11_D13 %D10_D12_D14 %D11_D13_D15 %D8_D10_D12_D14 %D9_D11_D13_D15 %D9_D10 %D11_D12 %D13_D14 %D9_D10_D11_D12 %D11_D12_D13_D14>, %SP<imp-use>, %R0<imp-use,kill>, %SP<imp-def>, %R0<imp-def>, ...
	ADJCALLSTACKUP 0, 0, pred:14, pred:%noreg, %SP<imp-def,dead>, %SP<imp-use>
	%vreg5<def> = COPY %R0<kill>; GPR:%vreg5
	t2STRi12 %vreg4<kill>, %vreg1<kill>, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] GPR:%vreg4 rGPR:%vreg1
	%R0<def> = COPY %vreg5<kill>; GPR:%vreg5
	tBX_RET pred:14, pred:%noreg, %R0<imp-use,kill>

# End machine code for function pushdecl_top_level.

# After Eliminate PHI nodes for register allocation:
# Machine code for function pushdecl_top_level: Post SSA
Function Live Ins: %R0 in %vreg0

BB#0: derived from LLVM BB %0
    Live Ins: %R0
	%vreg0<def> = COPY %R0<kill>; GPR:%vreg0
	%vreg1<def> = t2MOVi32imm <ga:@current_binding_level>; rGPR:%vreg1
	%vreg2<def> = t2MOVi32imm <ga:@global_binding_level>; rGPR:%vreg2
	%vreg3<def> = t2LDRi12 %vreg2<kill>, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)] GPR:%vreg3 rGPR:%vreg2
	%vreg4<def> = t2LDRi12 %vreg1, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] GPR:%vreg4 rGPR:%vreg1
	t2STRi12 %vreg3<kill>, %vreg1, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] GPR:%vreg3 rGPR:%vreg1
	ADJCALLSTACKDOWN 0, pred:14, pred:%noreg, %SP<imp-def,dead>, %SP<imp-use>
	%R0<def> = COPY %vreg0<kill>; GPR:%vreg0
	tBL pred:14, pred:%noreg, <ga:@pushdecl>, <regmask %LR %D8 %D9 %D10 %D11 %D12 %D13 %D14 %D15 %Q4 %Q5 %Q6 %Q7 %R4 %R5 %R6 %R7 %R8 %R9 %R10 %R11 %S16 %S17 %S18 %S19 %S20 %S21 %S22 %S23 %S24 %S25 %S26 %S27 %S28 %S29 %S30 %S31 %D8_D10 %D9_D11 %D10_D12 %D11_D13 %D12_D14 %D13_D15 %Q4_Q5 %Q5_Q6 %Q6_Q7 %Q4_Q5_Q6_Q7 %R4_R5 %R6_R7 %R8_R9 %R10_R11 %D8_D9_D10 %D9_D10_D11 %D10_D11_D12 %D11_D12_D13 %D12_D13_D14 %D13_D14_D15 %D8_D10_D12 %D9_D11_D13 %D10_D12_D14 %D11_D13_D15 %D8_D10_D12_D14 %D9_D11_D13_D15 %D9_D10 %D11_D12 %D13_D14 %D9_D10_D11_D12 %D11_D12_D13_D14>, %SP<imp-use>, %R0<imp-use,kill>, %SP<imp-def>, %R0<imp-def>, ...
	ADJCALLSTACKUP 0, 0, pred:14, pred:%noreg, %SP<imp-def,dead>, %SP<imp-use>
	%vreg5<def> = COPY %R0<kill>; GPR:%vreg5
	t2STRi12 %vreg4<kill>, %vreg1<kill>, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] GPR:%vreg4 rGPR:%vreg1
	%R0<def> = COPY %vreg5<kill>; GPR:%vreg5
	tBX_RET pred:14, pred:%noreg, %R0<imp-use,kill>

# End machine code for function pushdecl_top_level.

# After Two-Address instruction pass:
# Machine code for function pushdecl_top_level: Post SSA
Function Live Ins: %R0 in %vreg0

BB#0: derived from LLVM BB %0
    Live Ins: %R0
	%vreg0<def> = COPY %R0<kill>; GPR:%vreg0
	%vreg1<def> = t2MOVi32imm <ga:@current_binding_level>; rGPR:%vreg1
	%vreg2<def> = t2MOVi32imm <ga:@global_binding_level>; rGPR:%vreg2
	%vreg3<def> = t2LDRi12 %vreg2<kill>, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)] GPR:%vreg3 rGPR:%vreg2
	%vreg4<def> = t2LDRi12 %vreg1, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] GPR:%vreg4 rGPR:%vreg1
	t2STRi12 %vreg3<kill>, %vreg1, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] GPR:%vreg3 rGPR:%vreg1
	ADJCALLSTACKDOWN 0, pred:14, pred:%noreg, %SP<imp-def,dead>, %SP<imp-use>
	%R0<def> = COPY %vreg0<kill>; GPR:%vreg0
	tBL pred:14, pred:%noreg, <ga:@pushdecl>, <regmask %LR %D8 %D9 %D10 %D11 %D12 %D13 %D14 %D15 %Q4 %Q5 %Q6 %Q7 %R4 %R5 %R6 %R7 %R8 %R9 %R10 %R11 %S16 %S17 %S18 %S19 %S20 %S21 %S22 %S23 %S24 %S25 %S26 %S27 %S28 %S29 %S30 %S31 %D8_D10 %D9_D11 %D10_D12 %D11_D13 %D12_D14 %D13_D15 %Q4_Q5 %Q5_Q6 %Q6_Q7 %Q4_Q5_Q6_Q7 %R4_R5 %R6_R7 %R8_R9 %R10_R11 %D8_D9_D10 %D9_D10_D11 %D10_D11_D12 %D11_D12_D13 %D12_D13_D14 %D13_D14_D15 %D8_D10_D12 %D9_D11_D13 %D10_D12_D14 %D11_D13_D15 %D8_D10_D12_D14 %D9_D11_D13_D15 %D9_D10 %D11_D12 %D13_D14 %D9_D10_D11_D12 %D11_D12_D13_D14>, %SP<imp-use>, %R0<imp-use,kill>, %SP<imp-def>, %R0<imp-def>, ...
	ADJCALLSTACKUP 0, 0, pred:14, pred:%noreg, %SP<imp-def,dead>, %SP<imp-use>
	%vreg5<def> = COPY %R0<kill>; GPR:%vreg5
	t2STRi12 %vreg4<kill>, %vreg1<kill>, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] GPR:%vreg4 rGPR:%vreg1
	%R0<def> = COPY %vreg5<kill>; GPR:%vreg5
	tBX_RET pred:14, pred:%noreg, %R0<imp-use,kill>

# End machine code for function pushdecl_top_level.

# After Simple Register Coalescing:
# Machine code for function pushdecl_top_level: Post SSA
Function Live Ins: %R0 in %vreg0

0B	BB#0: derived from LLVM BB %0
	    Live Ins: %R0
16B		%vreg0<def> = COPY %R0; GPR:%vreg0
32B		%vreg1<def> = t2MOVi32imm <ga:@current_binding_level>; rGPR:%vreg1
48B		%vreg2<def> = t2MOVi32imm <ga:@global_binding_level>; rGPR:%vreg2
64B		%vreg3<def> = t2LDRi12 %vreg2, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)] GPR:%vreg3 rGPR:%vreg2
80B		%vreg4<def> = t2LDRi12 %vreg1, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] GPR:%vreg4 rGPR:%vreg1
96B		t2STRi12 %vreg3, %vreg1, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] GPR:%vreg3 rGPR:%vreg1
112B		ADJCALLSTACKDOWN 0, pred:14, pred:%noreg, %SP<imp-def,dead>, %SP<imp-use>
128B		%R0<def> = COPY %vreg0; GPR:%vreg0
144B		tBL pred:14, pred:%noreg, <ga:@pushdecl>, <regmask %LR %D8 %D9 %D10 %D11 %D12 %D13 %D14 %D15 %Q4 %Q5 %Q6 %Q7 %R4 %R5 %R6 %R7 %R8 %R9 %R10 %R11 %S16 %S17 %S18 %S19 %S20 %S21 %S22 %S23 %S24 %S25 %S26 %S27 %S28 %S29 %S30 %S31 %D8_D10 %D9_D11 %D10_D12 %D11_D13 %D12_D14 %D13_D15 %Q4_Q5 %Q5_Q6 %Q6_Q7 %Q4_Q5_Q6_Q7 %R4_R5 %R6_R7 %R8_R9 %R10_R11 %D8_D9_D10 %D9_D10_D11 %D10_D11_D12 %D11_D12_D13 %D12_D13_D14 %D13_D14_D15 %D8_D10_D12 %D9_D11_D13 %D10_D12_D14 %D11_D13_D15 %D8_D10_D12_D14 %D9_D11_D13_D15 %D9_D10 %D11_D12 %D13_D14 %D9_D10_D11_D12 %D11_D12_D13_D14>, %SP<imp-use>, %R0<imp-use>, %SP<imp-def>, %R0<imp-def>, ...
160B		ADJCALLSTACKUP 0, 0, pred:14, pred:%noreg, %SP<imp-def,dead>, %SP<imp-use>
176B		%vreg5<def> = COPY %R0; GPR:%vreg5
192B		t2STRi12 %vreg4, %vreg1, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] GPR:%vreg4 rGPR:%vreg1
208B		%R0<def> = COPY %vreg5; GPR:%vreg5
224B		tBX_RET pred:14, pred:%noreg, %R0<imp-use>

# End machine code for function pushdecl_top_level.

# After Machine Instruction Scheduler:
# Machine code for function pushdecl_top_level: Post SSA
Function Live Ins: %R0 in %vreg0

0B	BB#0: derived from LLVM BB %0
	    Live Ins: %R0
16B		%vreg0<def> = COPY %R0; GPR:%vreg0
32B		%vreg1<def> = t2MOVi32imm <ga:@current_binding_level>; rGPR:%vreg1
48B		%vreg2<def> = t2MOVi32imm <ga:@global_binding_level>; rGPR:%vreg2
64B		%vreg3<def> = t2LDRi12 %vreg2, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)] GPR:%vreg3 rGPR:%vreg2
80B		%vreg4<def> = t2LDRi12 %vreg1, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] GPR:%vreg4 rGPR:%vreg1
96B		t2STRi12 %vreg3, %vreg1, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] GPR:%vreg3 rGPR:%vreg1
112B		ADJCALLSTACKDOWN 0, pred:14, pred:%noreg, %SP<imp-def,dead>, %SP<imp-use>
128B		%R0<def> = COPY %vreg0; GPR:%vreg0
144B		tBL pred:14, pred:%noreg, <ga:@pushdecl>, <regmask %LR %D8 %D9 %D10 %D11 %D12 %D13 %D14 %D15 %Q4 %Q5 %Q6 %Q7 %R4 %R5 %R6 %R7 %R8 %R9 %R10 %R11 %S16 %S17 %S18 %S19 %S20 %S21 %S22 %S23 %S24 %S25 %S26 %S27 %S28 %S29 %S30 %S31 %D8_D10 %D9_D11 %D10_D12 %D11_D13 %D12_D14 %D13_D15 %Q4_Q5 %Q5_Q6 %Q6_Q7 %Q4_Q5_Q6_Q7 %R4_R5 %R6_R7 %R8_R9 %R10_R11 %D8_D9_D10 %D9_D10_D11 %D10_D11_D12 %D11_D12_D13 %D12_D13_D14 %D13_D14_D15 %D8_D10_D12 %D9_D11_D13 %D10_D12_D14 %D11_D13_D15 %D8_D10_D12_D14 %D9_D11_D13_D15 %D9_D10 %D11_D12 %D13_D14 %D9_D10_D11_D12 %D11_D12_D13_D14>, %SP<imp-use>, %R0<imp-use>, %SP<imp-def>, %R0<imp-def>, ...
160B		ADJCALLSTACKUP 0, 0, pred:14, pred:%noreg, %SP<imp-def,dead>, %SP<imp-use>
176B		%vreg5<def> = COPY %R0; GPR:%vreg5
192B		t2STRi12 %vreg4, %vreg1, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] GPR:%vreg4 rGPR:%vreg1
208B		%R0<def> = COPY %vreg5; GPR:%vreg5
224B		tBX_RET pred:14, pred:%noreg, %R0<imp-use>

# End machine code for function pushdecl_top_level.

# After Greedy Register Allocator:
# Machine code for function pushdecl_top_level: Post SSA
Function Live Ins: %R0 in %vreg0

0B	BB#0: derived from LLVM BB %0
	    Live Ins: %R0
16B		%vreg0<def> = COPY %R0; GPR:%vreg0
32B		%vreg1<def> = t2MOVi32imm <ga:@current_binding_level>; rGPR:%vreg1
48B		%vreg2<def> = t2MOVi32imm <ga:@global_binding_level>; rGPR:%vreg2
64B		%vreg3<def> = t2LDRi12 %vreg2, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)] GPR:%vreg3 rGPR:%vreg2
80B		%vreg4<def> = t2LDRi12 %vreg1, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] GPR:%vreg4 rGPR:%vreg1
96B		t2STRi12 %vreg3, %vreg1, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] GPR:%vreg3 rGPR:%vreg1
112B		ADJCALLSTACKDOWN 0, pred:14, pred:%noreg, %SP<imp-def,dead>, %SP<imp-use>
128B		%R0<def> = COPY %vreg0; GPR:%vreg0
144B		tBL pred:14, pred:%noreg, <ga:@pushdecl>, <regmask %LR %D8 %D9 %D10 %D11 %D12 %D13 %D14 %D15 %Q4 %Q5 %Q6 %Q7 %R4 %R5 %R6 %R7 %R8 %R9 %R10 %R11 %S16 %S17 %S18 %S19 %S20 %S21 %S22 %S23 %S24 %S25 %S26 %S27 %S28 %S29 %S30 %S31 %D8_D10 %D9_D11 %D10_D12 %D11_D13 %D12_D14 %D13_D15 %Q4_Q5 %Q5_Q6 %Q6_Q7 %Q4_Q5_Q6_Q7 %R4_R5 %R6_R7 %R8_R9 %R10_R11 %D8_D9_D10 %D9_D10_D11 %D10_D11_D12 %D11_D12_D13 %D12_D13_D14 %D13_D14_D15 %D8_D10_D12 %D9_D11_D13 %D10_D12_D14 %D11_D13_D15 %D8_D10_D12_D14 %D9_D11_D13_D15 %D9_D10 %D11_D12 %D13_D14 %D9_D10_D11_D12 %D11_D12_D13_D14>, %SP<imp-use>, %R0<imp-use>, %SP<imp-def>, %R0<imp-def>, ...
160B		ADJCALLSTACKUP 0, 0, pred:14, pred:%noreg, %SP<imp-def,dead>, %SP<imp-use>
176B		%vreg5<def> = COPY %R0; GPR:%vreg5
192B		t2STRi12 %vreg4, %vreg1, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)] GPR:%vreg4 rGPR:%vreg1
208B		%R0<def> = COPY %vreg5; GPR:%vreg5
224B		tBX_RET pred:14, pred:%noreg, %R0<imp-use>

# End machine code for function pushdecl_top_level.

# After Virtual Register Rewriter:
# Machine code for function pushdecl_top_level: Post SSA
Function Live Ins: %R0

0B	BB#0: derived from LLVM BB %0
	    Live Ins: %R0
32B		%R4<def> = t2MOVi32imm <ga:@current_binding_level>
48B		%R1<def> = t2MOVi32imm <ga:@global_binding_level>
64B		%R1<def> = t2LDRi12 %R1<kill>, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)]
80B		%R5<def> = t2LDRi12 %R4, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
96B		t2STRi12 %R1<kill>, %R4, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
112B		ADJCALLSTACKDOWN 0, pred:14, pred:%noreg, %SP<imp-def,dead>, %SP<imp-use>
144B		tBL pred:14, pred:%noreg, <ga:@pushdecl>, <regmask %LR %D8 %D9 %D10 %D11 %D12 %D13 %D14 %D15 %Q4 %Q5 %Q6 %Q7 %R4 %R5 %R6 %R7 %R8 %R9 %R10 %R11 %S16 %S17 %S18 %S19 %S20 %S21 %S22 %S23 %S24 %S25 %S26 %S27 %S28 %S29 %S30 %S31 %D8_D10 %D9_D11 %D10_D12 %D11_D13 %D12_D14 %D13_D15 %Q4_Q5 %Q5_Q6 %Q6_Q7 %Q4_Q5_Q6_Q7 %R4_R5 %R6_R7 %R8_R9 %R10_R11 %D8_D9_D10 %D9_D10_D11 %D10_D11_D12 %D11_D12_D13 %D12_D13_D14 %D13_D14_D15 %D8_D10_D12 %D9_D11_D13 %D10_D12_D14 %D11_D13_D15 %D8_D10_D12_D14 %D9_D11_D13_D15 %D9_D10 %D11_D12 %D13_D14 %D9_D10_D11_D12 %D11_D12_D13_D14>, %SP<imp-use>, %R0<imp-use>, %SP<imp-def>, %R0<imp-def>, ...
160B		ADJCALLSTACKUP 0, 0, pred:14, pred:%noreg, %SP<imp-def,dead>, %SP<imp-use>
192B		t2STRi12 %R5<kill>, %R4<kill>, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
224B		tBX_RET pred:14, pred:%noreg, %R0<imp-use>

# End machine code for function pushdecl_top_level.

# After Stack Slot Coloring:
# Machine code for function pushdecl_top_level: Post SSA
Function Live Ins: %R0

BB#0: derived from LLVM BB %0
    Live Ins: %R0
	%R4<def> = t2MOVi32imm <ga:@current_binding_level>
	%R1<def> = t2MOVi32imm <ga:@global_binding_level>
	%R1<def> = t2LDRi12 %R1<kill>, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)]
	%R5<def> = t2LDRi12 %R4, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	t2STRi12 %R1<kill>, %R4, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	ADJCALLSTACKDOWN 0, pred:14, pred:%noreg, %SP<imp-def,dead>, %SP<imp-use>
	tBL pred:14, pred:%noreg, <ga:@pushdecl>, <regmask %LR %D8 %D9 %D10 %D11 %D12 %D13 %D14 %D15 %Q4 %Q5 %Q6 %Q7 %R4 %R5 %R6 %R7 %R8 %R9 %R10 %R11 %S16 %S17 %S18 %S19 %S20 %S21 %S22 %S23 %S24 %S25 %S26 %S27 %S28 %S29 %S30 %S31 %D8_D10 %D9_D11 %D10_D12 %D11_D13 %D12_D14 %D13_D15 %Q4_Q5 %Q5_Q6 %Q6_Q7 %Q4_Q5_Q6_Q7 %R4_R5 %R6_R7 %R8_R9 %R10_R11 %D8_D9_D10 %D9_D10_D11 %D10_D11_D12 %D11_D12_D13 %D12_D13_D14 %D13_D14_D15 %D8_D10_D12 %D9_D11_D13 %D10_D12_D14 %D11_D13_D15 %D8_D10_D12_D14 %D9_D11_D13_D15 %D9_D10 %D11_D12 %D13_D14 %D9_D10_D11_D12 %D11_D12_D13_D14>, %SP<imp-use>, %R0<imp-use>, %SP<imp-def>, %R0<imp-def>, ...
	ADJCALLSTACKUP 0, 0, pred:14, pred:%noreg, %SP<imp-def,dead>, %SP<imp-use>
	t2STRi12 %R5<kill>, %R4<kill>, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	tBX_RET pred:14, pred:%noreg, %R0<imp-use>

# End machine code for function pushdecl_top_level.

# After Machine Loop Invariant Code Motion:
# Machine code for function pushdecl_top_level: Post SSA
Function Live Ins: %R0

BB#0: derived from LLVM BB %0
    Live Ins: %R0
	%R4<def> = t2MOVi32imm <ga:@current_binding_level>
	%R1<def> = t2MOVi32imm <ga:@global_binding_level>
	%R1<def> = t2LDRi12 %R1<kill>, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)]
	%R5<def> = t2LDRi12 %R4, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	t2STRi12 %R1<kill>, %R4, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	ADJCALLSTACKDOWN 0, pred:14, pred:%noreg, %SP<imp-def,dead>, %SP<imp-use>
	tBL pred:14, pred:%noreg, <ga:@pushdecl>, <regmask %LR %D8 %D9 %D10 %D11 %D12 %D13 %D14 %D15 %Q4 %Q5 %Q6 %Q7 %R4 %R5 %R6 %R7 %R8 %R9 %R10 %R11 %S16 %S17 %S18 %S19 %S20 %S21 %S22 %S23 %S24 %S25 %S26 %S27 %S28 %S29 %S30 %S31 %D8_D10 %D9_D11 %D10_D12 %D11_D13 %D12_D14 %D13_D15 %Q4_Q5 %Q5_Q6 %Q6_Q7 %Q4_Q5_Q6_Q7 %R4_R5 %R6_R7 %R8_R9 %R10_R11 %D8_D9_D10 %D9_D10_D11 %D10_D11_D12 %D11_D12_D13 %D12_D13_D14 %D13_D14_D15 %D8_D10_D12 %D9_D11_D13 %D10_D12_D14 %D11_D13_D15 %D8_D10_D12_D14 %D9_D11_D13_D15 %D9_D10 %D11_D12 %D13_D14 %D9_D10_D11_D12 %D11_D12_D13_D14>, %SP<imp-use>, %R0<imp-use>, %SP<imp-def>, %R0<imp-def>, ...
	ADJCALLSTACKUP 0, 0, pred:14, pred:%noreg, %SP<imp-def,dead>, %SP<imp-use>
	t2STRi12 %R5<kill>, %R4<kill>, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	tBX_RET pred:14, pred:%noreg, %R0<imp-use>

# End machine code for function pushdecl_top_level.

# After Shrink Wrapping analysis:
# Machine code for function pushdecl_top_level: Post SSA
Function Live Ins: %R0

BB#0: derived from LLVM BB %0
    Live Ins: %R0
	%R4<def> = t2MOVi32imm <ga:@current_binding_level>
	%R1<def> = t2MOVi32imm <ga:@global_binding_level>
	%R1<def> = t2LDRi12 %R1<kill>, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)]
	%R5<def> = t2LDRi12 %R4, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	t2STRi12 %R1<kill>, %R4, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	ADJCALLSTACKDOWN 0, pred:14, pred:%noreg, %SP<imp-def,dead>, %SP<imp-use>
	tBL pred:14, pred:%noreg, <ga:@pushdecl>, <regmask %LR %D8 %D9 %D10 %D11 %D12 %D13 %D14 %D15 %Q4 %Q5 %Q6 %Q7 %R4 %R5 %R6 %R7 %R8 %R9 %R10 %R11 %S16 %S17 %S18 %S19 %S20 %S21 %S22 %S23 %S24 %S25 %S26 %S27 %S28 %S29 %S30 %S31 %D8_D10 %D9_D11 %D10_D12 %D11_D13 %D12_D14 %D13_D15 %Q4_Q5 %Q5_Q6 %Q6_Q7 %Q4_Q5_Q6_Q7 %R4_R5 %R6_R7 %R8_R9 %R10_R11 %D8_D9_D10 %D9_D10_D11 %D10_D11_D12 %D11_D12_D13 %D12_D13_D14 %D13_D14_D15 %D8_D10_D12 %D9_D11_D13 %D10_D12_D14 %D11_D13_D15 %D8_D10_D12_D14 %D9_D11_D13_D15 %D9_D10 %D11_D12 %D13_D14 %D9_D10_D11_D12 %D11_D12_D13_D14>, %SP<imp-use>, %R0<imp-use>, %SP<imp-def>, %R0<imp-def>, ...
	ADJCALLSTACKUP 0, 0, pred:14, pred:%noreg, %SP<imp-def,dead>, %SP<imp-use>
	t2STRi12 %R5<kill>, %R4<kill>, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	tBX_RET pred:14, pred:%noreg, %R0<imp-use>

# End machine code for function pushdecl_top_level.

# After Prologue/Epilogue Insertion & Frame Finalization:
# Machine code for function pushdecl_top_level: Post SSA
Frame Objects:
  fi#0: size=4, align=4, at location [SP-4]
  fi#1: size=4, align=4, at location [SP-8]
  fi#2: size=4, align=4, at location [SP-12]
  fi#3: size=4, align=4, at location [SP-16]
Function Live Ins: %R0

BB#0: derived from LLVM BB %0
    Live Ins: %R0 %R4 %R5 %R7 %LR
	%SP<def,tied1> = t2STMDB_UPD %SP<tied0>, pred:14, pred:%noreg, %R4<kill>, %R5<kill>, %R7<kill>, %LR<kill>; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	%R7<def> = t2ADDri %SP<kill>, 8, pred:14, pred:%noreg, opt:%noreg; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	%R4<def> = t2MOVi32imm <ga:@current_binding_level>
	%R1<def> = t2MOVi32imm <ga:@global_binding_level>
	%R1<def> = t2LDRi12 %R1<kill>, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)]
	%R5<def> = t2LDRi12 %R4, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	t2STRi12 %R1<kill>, %R4, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	tBL pred:14, pred:%noreg, <ga:@pushdecl>, <regmask %LR %D8 %D9 %D10 %D11 %D12 %D13 %D14 %D15 %Q4 %Q5 %Q6 %Q7 %R4 %R5 %R6 %R7 %R8 %R9 %R10 %R11 %S16 %S17 %S18 %S19 %S20 %S21 %S22 %S23 %S24 %S25 %S26 %S27 %S28 %S29 %S30 %S31 %D8_D10 %D9_D11 %D10_D12 %D11_D13 %D12_D14 %D13_D15 %Q4_Q5 %Q5_Q6 %Q6_Q7 %Q4_Q5_Q6_Q7 %R4_R5 %R6_R7 %R8_R9 %R10_R11 %D8_D9_D10 %D9_D10_D11 %D10_D11_D12 %D11_D12_D13 %D12_D13_D14 %D13_D14_D15 %D8_D10_D12 %D9_D11_D13 %D10_D12_D14 %D11_D13_D15 %D8_D10_D12_D14 %D9_D11_D13_D15 %D9_D10 %D11_D12 %D13_D14 %D9_D10_D11_D12 %D11_D12_D13_D14>, %LR<imp-def,dead>, %SP<imp-use>, %R0<imp-use>, %SP<imp-def>, %R0<imp-def>
	t2STRi12 %R5<kill>, %R4<kill>, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	%SP<def,tied1> = t2LDMIA_RET %SP<tied0>, pred:14, pred:%noreg, %R4<def>, %R5<def>, %R7<def>, %PC<def>, %R0<imp-use>

# End machine code for function pushdecl_top_level.

# After Machine Copy Propagation Pass:
# Machine code for function pushdecl_top_level: Post SSA
Frame Objects:
  fi#0: size=4, align=4, at location [SP-4]
  fi#1: size=4, align=4, at location [SP-8]
  fi#2: size=4, align=4, at location [SP-12]
  fi#3: size=4, align=4, at location [SP-16]
Function Live Ins: %R0

BB#0: derived from LLVM BB %0
    Live Ins: %R0 %R4 %R5 %R7 %LR
	%SP<def,tied1> = t2STMDB_UPD %SP<tied0>, pred:14, pred:%noreg, %R4<kill>, %R5<kill>, %R7<kill>, %LR<kill>; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	%R7<def> = t2ADDri %SP<kill>, 8, pred:14, pred:%noreg, opt:%noreg; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	%R4<def> = t2MOVi32imm <ga:@current_binding_level>
	%R1<def> = t2MOVi32imm <ga:@global_binding_level>
	%R1<def> = t2LDRi12 %R1<kill>, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)]
	%R5<def> = t2LDRi12 %R4, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	t2STRi12 %R1<kill>, %R4, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	tBL pred:14, pred:%noreg, <ga:@pushdecl>, <regmask %LR %D8 %D9 %D10 %D11 %D12 %D13 %D14 %D15 %Q4 %Q5 %Q6 %Q7 %R4 %R5 %R6 %R7 %R8 %R9 %R10 %R11 %S16 %S17 %S18 %S19 %S20 %S21 %S22 %S23 %S24 %S25 %S26 %S27 %S28 %S29 %S30 %S31 %D8_D10 %D9_D11 %D10_D12 %D11_D13 %D12_D14 %D13_D15 %Q4_Q5 %Q5_Q6 %Q6_Q7 %Q4_Q5_Q6_Q7 %R4_R5 %R6_R7 %R8_R9 %R10_R11 %D8_D9_D10 %D9_D10_D11 %D10_D11_D12 %D11_D12_D13 %D12_D13_D14 %D13_D14_D15 %D8_D10_D12 %D9_D11_D13 %D10_D12_D14 %D11_D13_D15 %D8_D10_D12_D14 %D9_D11_D13_D15 %D9_D10 %D11_D12 %D13_D14 %D9_D10_D11_D12 %D11_D12_D13_D14>, %LR<imp-def,dead>, %SP<imp-use>, %R0<imp-use>, %SP<imp-def>, %R0<imp-def>
	t2STRi12 %R5<kill>, %R4<kill>, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	%SP<def,tied1> = t2LDMIA_RET %SP<tied0>, pred:14, pred:%noreg, %R4<def>, %R5<def>, %R7<def>, %PC<def>, %R0<imp-use>

# End machine code for function pushdecl_top_level.

# After Post-RA pseudo instruction expansion pass:
# Machine code for function pushdecl_top_level: Post SSA
Frame Objects:
  fi#0: size=4, align=4, at location [SP-4]
  fi#1: size=4, align=4, at location [SP-8]
  fi#2: size=4, align=4, at location [SP-12]
  fi#3: size=4, align=4, at location [SP-16]
Function Live Ins: %R0

BB#0: derived from LLVM BB %0
    Live Ins: %R0 %R4 %R5 %R7 %LR
	%SP<def,tied1> = t2STMDB_UPD %SP<tied0>, pred:14, pred:%noreg, %R4<kill>, %R5<kill>, %R7<kill>, %LR<kill>; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	%R7<def> = t2ADDri %SP<kill>, 8, pred:14, pred:%noreg, opt:%noreg; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	%R4<def> = t2MOVi32imm <ga:@current_binding_level>
	%R1<def> = t2MOVi32imm <ga:@global_binding_level>
	%R1<def> = t2LDRi12 %R1<kill>, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)]
	%R5<def> = t2LDRi12 %R4, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	t2STRi12 %R1<kill>, %R4, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	tBL pred:14, pred:%noreg, <ga:@pushdecl>, <regmask %LR %D8 %D9 %D10 %D11 %D12 %D13 %D14 %D15 %Q4 %Q5 %Q6 %Q7 %R4 %R5 %R6 %R7 %R8 %R9 %R10 %R11 %S16 %S17 %S18 %S19 %S20 %S21 %S22 %S23 %S24 %S25 %S26 %S27 %S28 %S29 %S30 %S31 %D8_D10 %D9_D11 %D10_D12 %D11_D13 %D12_D14 %D13_D15 %Q4_Q5 %Q5_Q6 %Q6_Q7 %Q4_Q5_Q6_Q7 %R4_R5 %R6_R7 %R8_R9 %R10_R11 %D8_D9_D10 %D9_D10_D11 %D10_D11_D12 %D11_D12_D13 %D12_D13_D14 %D13_D14_D15 %D8_D10_D12 %D9_D11_D13 %D10_D12_D14 %D11_D13_D15 %D8_D10_D12_D14 %D9_D11_D13_D15 %D9_D10 %D11_D12 %D13_D14 %D9_D10_D11_D12 %D11_D12_D13_D14>, %LR<imp-def,dead>, %SP<imp-use>, %R0<imp-use>, %SP<imp-def>, %R0<imp-def>
	t2STRi12 %R5<kill>, %R4<kill>, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	%SP<def,tied1> = t2LDMIA_RET %SP<tied0>, pred:14, pred:%noreg, %R4<def>, %R5<def>, %R7<def>, %PC<def>, %R0<imp-use>

# End machine code for function pushdecl_top_level.

# After ARM load / store optimization pass:
# Machine code for function pushdecl_top_level: Post SSA
Frame Objects:
  fi#0: size=4, align=4, at location [SP-4]
  fi#1: size=4, align=4, at location [SP-8]
  fi#2: size=4, align=4, at location [SP-12]
  fi#3: size=4, align=4, at location [SP-16]
Function Live Ins: %R0

BB#0: derived from LLVM BB %0
    Live Ins: %R0 %R4 %R5 %R7 %LR
	%SP<def,tied1> = t2STMDB_UPD %SP<tied0>, pred:14, pred:%noreg, %R4<kill>, %R5<kill>, %R7<kill>, %LR<kill>; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	%R7<def> = t2ADDri %SP<kill>, 8, pred:14, pred:%noreg, opt:%noreg; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	%R4<def> = t2MOVi32imm <ga:@current_binding_level>
	%R1<def> = t2MOVi32imm <ga:@global_binding_level>
	%R1<def> = t2LDRi12 %R1<kill>, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)]
	%R5<def> = t2LDRi12 %R4, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	t2STRi12 %R1<kill>, %R4, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	tBL pred:14, pred:%noreg, <ga:@pushdecl>, <regmask %LR %D8 %D9 %D10 %D11 %D12 %D13 %D14 %D15 %Q4 %Q5 %Q6 %Q7 %R4 %R5 %R6 %R7 %R8 %R9 %R10 %R11 %S16 %S17 %S18 %S19 %S20 %S21 %S22 %S23 %S24 %S25 %S26 %S27 %S28 %S29 %S30 %S31 %D8_D10 %D9_D11 %D10_D12 %D11_D13 %D12_D14 %D13_D15 %Q4_Q5 %Q5_Q6 %Q6_Q7 %Q4_Q5_Q6_Q7 %R4_R5 %R6_R7 %R8_R9 %R10_R11 %D8_D9_D10 %D9_D10_D11 %D10_D11_D12 %D11_D12_D13 %D12_D13_D14 %D13_D14_D15 %D8_D10_D12 %D9_D11_D13 %D10_D12_D14 %D11_D13_D15 %D8_D10_D12_D14 %D9_D11_D13_D15 %D9_D10 %D11_D12 %D13_D14 %D9_D10_D11_D12 %D11_D12_D13_D14>, %LR<imp-def,dead>, %SP<imp-use>, %R0<imp-use>, %SP<imp-def>, %R0<imp-def>
	t2STRi12 %R5<kill>, %R4<kill>, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	%SP<def,tied1> = t2LDMIA_RET %SP<tied0>, pred:14, pred:%noreg, %R4<def>, %R5<def>, %R7<def>, %PC<def>, %R0<imp-use>

# End machine code for function pushdecl_top_level.

# After Execution dependency fix:
# Machine code for function pushdecl_top_level: Post SSA
Frame Objects:
  fi#0: size=4, align=4, at location [SP-4]
  fi#1: size=4, align=4, at location [SP-8]
  fi#2: size=4, align=4, at location [SP-12]
  fi#3: size=4, align=4, at location [SP-16]
Function Live Ins: %R0

BB#0: derived from LLVM BB %0
    Live Ins: %R0 %R4 %R5 %R7 %LR
	%SP<def,tied1> = t2STMDB_UPD %SP<tied0>, pred:14, pred:%noreg, %R4<kill>, %R5<kill>, %R7<kill>, %LR<kill>; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	%R7<def> = t2ADDri %SP<kill>, 8, pred:14, pred:%noreg, opt:%noreg; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	%R4<def> = t2MOVi32imm <ga:@current_binding_level>
	%R1<def> = t2MOVi32imm <ga:@global_binding_level>
	%R1<def> = t2LDRi12 %R1<kill>, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)]
	%R5<def> = t2LDRi12 %R4, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	t2STRi12 %R1<kill>, %R4, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	tBL pred:14, pred:%noreg, <ga:@pushdecl>, <regmask %LR %D8 %D9 %D10 %D11 %D12 %D13 %D14 %D15 %Q4 %Q5 %Q6 %Q7 %R4 %R5 %R6 %R7 %R8 %R9 %R10 %R11 %S16 %S17 %S18 %S19 %S20 %S21 %S22 %S23 %S24 %S25 %S26 %S27 %S28 %S29 %S30 %S31 %D8_D10 %D9_D11 %D10_D12 %D11_D13 %D12_D14 %D13_D15 %Q4_Q5 %Q5_Q6 %Q6_Q7 %Q4_Q5_Q6_Q7 %R4_R5 %R6_R7 %R8_R9 %R10_R11 %D8_D9_D10 %D9_D10_D11 %D10_D11_D12 %D11_D12_D13 %D12_D13_D14 %D13_D14_D15 %D8_D10_D12 %D9_D11_D13 %D10_D12_D14 %D11_D13_D15 %D8_D10_D12_D14 %D9_D11_D13_D15 %D9_D10 %D11_D12 %D13_D14 %D9_D10_D11_D12 %D11_D12_D13_D14>, %LR<imp-def,dead>, %SP<imp-use>, %R0<imp-use>, %SP<imp-def>, %R0<imp-def>
	t2STRi12 %R5<kill>, %R4<kill>, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	%SP<def,tied1> = t2LDMIA_RET %SP<tied0>, pred:14, pred:%noreg, %R4<def>, %R5<def>, %R7<def>, %PC<def>, %R0<imp-use>

# End machine code for function pushdecl_top_level.

# After ARM pseudo instruction expansion pass:
# Machine code for function pushdecl_top_level: Post SSA
Frame Objects:
  fi#0: size=4, align=4, at location [SP-4]
  fi#1: size=4, align=4, at location [SP-8]
  fi#2: size=4, align=4, at location [SP-12]
  fi#3: size=4, align=4, at location [SP-16]
Function Live Ins: %R0

BB#0: derived from LLVM BB %0
    Live Ins: %R0 %R4 %R5 %R7 %LR
	%SP<def,tied1> = t2STMDB_UPD %SP<tied0>, pred:14, pred:%noreg, %R4<kill>, %R5<kill>, %R7<kill>, %LR<kill>; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	%R7<def> = t2ADDri %SP<kill>, 8, pred:14, pred:%noreg, opt:%noreg; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	%R4<def> = t2MOVi16 <ga:@current_binding_level>[TF=1], pred:14, pred:%noreg
	%R4<def,tied1> = t2MOVTi16 %R4<tied0>, <ga:@current_binding_level>[TF=2], pred:14, pred:%noreg
	%R1<def> = t2MOVi16 <ga:@global_binding_level>[TF=1], pred:14, pred:%noreg
	%R1<def,tied1> = t2MOVTi16 %R1<tied0>, <ga:@global_binding_level>[TF=2], pred:14, pred:%noreg
	%R1<def> = t2LDRi12 %R1<kill>, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)]
	%R5<def> = t2LDRi12 %R4, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	t2STRi12 %R1<kill>, %R4, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	tBL pred:14, pred:%noreg, <ga:@pushdecl>, <regmask %LR %D8 %D9 %D10 %D11 %D12 %D13 %D14 %D15 %Q4 %Q5 %Q6 %Q7 %R4 %R5 %R6 %R7 %R8 %R9 %R10 %R11 %S16 %S17 %S18 %S19 %S20 %S21 %S22 %S23 %S24 %S25 %S26 %S27 %S28 %S29 %S30 %S31 %D8_D10 %D9_D11 %D10_D12 %D11_D13 %D12_D14 %D13_D15 %Q4_Q5 %Q5_Q6 %Q6_Q7 %Q4_Q5_Q6_Q7 %R4_R5 %R6_R7 %R8_R9 %R10_R11 %D8_D9_D10 %D9_D10_D11 %D10_D11_D12 %D11_D12_D13 %D12_D13_D14 %D13_D14_D15 %D8_D10_D12 %D9_D11_D13 %D10_D12_D14 %D11_D13_D15 %D8_D10_D12_D14 %D9_D11_D13_D15 %D9_D10 %D11_D12 %D13_D14 %D9_D10_D11_D12 %D11_D12_D13_D14>, %LR<imp-def,dead>, %SP<imp-use>, %R0<imp-use>, %SP<imp-def>, %R0<imp-def>
	t2STRi12 %R5<kill>, %R4<kill>, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	%SP<def,tied1> = t2LDMIA_RET %SP<tied0>, pred:14, pred:%noreg, %R4<def>, %R5<def>, %R7<def>, %PC<def>, %R0<imp-use>

# End machine code for function pushdecl_top_level.

# After Thumb2 instruction size reduction pass:
# Machine code for function pushdecl_top_level: Post SSA
Frame Objects:
  fi#0: size=4, align=4, at location [SP-4]
  fi#1: size=4, align=4, at location [SP-8]
  fi#2: size=4, align=4, at location [SP-12]
  fi#3: size=4, align=4, at location [SP-16]
Function Live Ins: %R0

BB#0: derived from LLVM BB %0
    Live Ins: %R0 %R4 %R5 %R7 %LR
	%SP<def,tied1> = t2STMDB_UPD %SP<tied0>, pred:14, pred:%noreg, %R4<kill>, %R5<kill>, %R7<kill>, %LR<kill>; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	%R7<def> = t2ADDri %SP<kill>, 8, pred:14, pred:%noreg, opt:%noreg; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	%R4<def> = t2MOVi16 <ga:@current_binding_level>[TF=1], pred:14, pred:%noreg
	%R4<def,tied1> = t2MOVTi16 %R4<tied0>, <ga:@current_binding_level>[TF=2], pred:14, pred:%noreg
	%R1<def> = t2MOVi16 <ga:@global_binding_level>[TF=1], pred:14, pred:%noreg
	%R1<def,tied1> = t2MOVTi16 %R1<tied0>, <ga:@global_binding_level>[TF=2], pred:14, pred:%noreg
	%R1<def> = t2LDRi12 %R1<kill>, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)]
	%R5<def> = t2LDRi12 %R4, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	t2STRi12 %R1<kill>, %R4, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	tBL pred:14, pred:%noreg, <ga:@pushdecl>, <regmask %LR %D8 %D9 %D10 %D11 %D12 %D13 %D14 %D15 %Q4 %Q5 %Q6 %Q7 %R4 %R5 %R6 %R7 %R8 %R9 %R10 %R11 %S16 %S17 %S18 %S19 %S20 %S21 %S22 %S23 %S24 %S25 %S26 %S27 %S28 %S29 %S30 %S31 %D8_D10 %D9_D11 %D10_D12 %D11_D13 %D12_D14 %D13_D15 %Q4_Q5 %Q5_Q6 %Q6_Q7 %Q4_Q5_Q6_Q7 %R4_R5 %R6_R7 %R8_R9 %R10_R11 %D8_D9_D10 %D9_D10_D11 %D10_D11_D12 %D11_D12_D13 %D12_D13_D14 %D13_D14_D15 %D8_D10_D12 %D9_D11_D13 %D10_D12_D14 %D11_D13_D15 %D8_D10_D12_D14 %D9_D11_D13_D15 %D9_D10 %D11_D12 %D13_D14 %D9_D10_D11_D12 %D11_D12_D13_D14>, %LR<imp-def,dead>, %SP<imp-use>, %R0<imp-use>, %SP<imp-def>, %R0<imp-def>
	t2STRi12 %R5<kill>, %R4<kill>, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	%SP<def,tied1> = t2LDMIA_RET %SP<tied0>, pred:14, pred:%noreg, %R4<def>, %R5<def>, %R7<def>, %PC<def>, %R0<imp-use>

# End machine code for function pushdecl_top_level.

# After Thumb IT blocks insertion pass:
# Machine code for function pushdecl_top_level: Post SSA
Frame Objects:
  fi#0: size=4, align=4, at location [SP-4]
  fi#1: size=4, align=4, at location [SP-8]
  fi#2: size=4, align=4, at location [SP-12]
  fi#3: size=4, align=4, at location [SP-16]
Function Live Ins: %R0

BB#0: derived from LLVM BB %0
    Live Ins: %R0 %R4 %R5 %R7 %LR
	%SP<def,tied1> = t2STMDB_UPD %SP<tied0>, pred:14, pred:%noreg, %R4<kill>, %R5<kill>, %R7<kill>, %LR<kill>; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	%R7<def> = t2ADDri %SP<kill>, 8, pred:14, pred:%noreg, opt:%noreg; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	%R4<def> = t2MOVi16 <ga:@current_binding_level>[TF=1], pred:14, pred:%noreg
	%R4<def,tied1> = t2MOVTi16 %R4<tied0>, <ga:@current_binding_level>[TF=2], pred:14, pred:%noreg
	%R1<def> = t2MOVi16 <ga:@global_binding_level>[TF=1], pred:14, pred:%noreg
	%R1<def,tied1> = t2MOVTi16 %R1<tied0>, <ga:@global_binding_level>[TF=2], pred:14, pred:%noreg
	%R1<def> = t2LDRi12 %R1<kill>, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)]
	%R5<def> = t2LDRi12 %R4, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	t2STRi12 %R1<kill>, %R4, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	tBL pred:14, pred:%noreg, <ga:@pushdecl>, <regmask %LR %D8 %D9 %D10 %D11 %D12 %D13 %D14 %D15 %Q4 %Q5 %Q6 %Q7 %R4 %R5 %R6 %R7 %R8 %R9 %R10 %R11 %S16 %S17 %S18 %S19 %S20 %S21 %S22 %S23 %S24 %S25 %S26 %S27 %S28 %S29 %S30 %S31 %D8_D10 %D9_D11 %D10_D12 %D11_D13 %D12_D14 %D13_D15 %Q4_Q5 %Q5_Q6 %Q6_Q7 %Q4_Q5_Q6_Q7 %R4_R5 %R6_R7 %R8_R9 %R10_R11 %D8_D9_D10 %D9_D10_D11 %D10_D11_D12 %D11_D12_D13 %D12_D13_D14 %D13_D14_D15 %D8_D10_D12 %D9_D11_D13 %D10_D12_D14 %D11_D13_D15 %D8_D10_D12_D14 %D9_D11_D13_D15 %D9_D10 %D11_D12 %D13_D14 %D9_D10_D11_D12 %D11_D12_D13_D14>, %LR<imp-def,dead>, %SP<imp-use>, %R0<imp-use>, %SP<imp-def>, %R0<imp-def>
	t2STRi12 %R5<kill>, %R4<kill>, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	%SP<def,tied1> = t2LDMIA_RET %SP<tied0>, pred:14, pred:%noreg, %R4<def>, %R5<def>, %R7<def>, %PC<def>, %R0<imp-use>

# End machine code for function pushdecl_top_level.

# After Analyze Machine Code For Garbage Collection:
# Machine code for function pushdecl_top_level: Post SSA
Frame Objects:
  fi#0: size=4, align=4, at location [SP-4]
  fi#1: size=4, align=4, at location [SP-8]
  fi#2: size=4, align=4, at location [SP-12]
  fi#3: size=4, align=4, at location [SP-16]
Function Live Ins: %R0

BB#0: derived from LLVM BB %0
    Live Ins: %R0 %R4 %R5 %R7 %LR
	%SP<def,tied1> = t2STMDB_UPD %SP<tied0>, pred:14, pred:%noreg, %R4<kill>, %R5<kill>, %R7<kill>, %LR<kill>; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	%R7<def> = t2ADDri %SP<kill>, 8, pred:14, pred:%noreg, opt:%noreg; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	%R4<def> = t2MOVi16 <ga:@current_binding_level>[TF=1], pred:14, pred:%noreg
	%R4<def,tied1> = t2MOVTi16 %R4<tied0>, <ga:@current_binding_level>[TF=2], pred:14, pred:%noreg
	%R1<def> = t2MOVi16 <ga:@global_binding_level>[TF=1], pred:14, pred:%noreg
	%R1<def,tied1> = t2MOVTi16 %R1<tied0>, <ga:@global_binding_level>[TF=2], pred:14, pred:%noreg
	%R1<def> = t2LDRi12 %R1<kill>, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)]
	%R5<def> = t2LDRi12 %R4, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	t2STRi12 %R1<kill>, %R4, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	tBL pred:14, pred:%noreg, <ga:@pushdecl>, <regmask %LR %D8 %D9 %D10 %D11 %D12 %D13 %D14 %D15 %Q4 %Q5 %Q6 %Q7 %R4 %R5 %R6 %R7 %R8 %R9 %R10 %R11 %S16 %S17 %S18 %S19 %S20 %S21 %S22 %S23 %S24 %S25 %S26 %S27 %S28 %S29 %S30 %S31 %D8_D10 %D9_D11 %D10_D12 %D11_D13 %D12_D14 %D13_D15 %Q4_Q5 %Q5_Q6 %Q6_Q7 %Q4_Q5_Q6_Q7 %R4_R5 %R6_R7 %R8_R9 %R10_R11 %D8_D9_D10 %D9_D10_D11 %D10_D11_D12 %D11_D12_D13 %D12_D13_D14 %D13_D14_D15 %D8_D10_D12 %D9_D11_D13 %D10_D12_D14 %D11_D13_D15 %D8_D10_D12_D14 %D9_D11_D13_D15 %D9_D10 %D11_D12 %D13_D14 %D9_D10_D11_D12 %D11_D12_D13_D14>, %LR<imp-def,dead>, %SP<imp-use>, %R0<imp-use>, %SP<imp-def>, %R0<imp-def>
	t2STRi12 %R5<kill>, %R4<kill>, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	%SP<def,tied1> = t2LDMIA_RET %SP<tied0>, pred:14, pred:%noreg, %R4<def>, %R5<def>, %R7<def>, %PC<def>, %R0<imp-use>

# End machine code for function pushdecl_top_level.

# After Thumb2 instruction size reduction pass:
# Machine code for function pushdecl_top_level: Post SSA
Frame Objects:
  fi#0: size=4, align=4, at location [SP-4]
  fi#1: size=4, align=4, at location [SP-8]
  fi#2: size=4, align=4, at location [SP-12]
  fi#3: size=4, align=4, at location [SP-16]
Function Live Ins: %R0

BB#0: derived from LLVM BB %0
    Live Ins: %R0 %R4 %R5 %R7 %LR
	tPUSH pred:14, pred:%noreg, %R4<kill>, %R5<kill>, %R7<kill>, %LR<kill>, %SP<imp-def>, %SP<imp-use>; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	%R7<def> = tADDrSPi %SP<kill>, 2, pred:14, pred:%noreg; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	%R4<def> = t2MOVi16 <ga:@current_binding_level>[TF=1], pred:14, pred:%noreg
	%R4<def,tied1> = t2MOVTi16 %R4<tied0>, <ga:@current_binding_level>[TF=2], pred:14, pred:%noreg
	%R1<def> = t2MOVi16 <ga:@global_binding_level>[TF=1], pred:14, pred:%noreg
	%R1<def,tied1> = t2MOVTi16 %R1<tied0>, <ga:@global_binding_level>[TF=2], pred:14, pred:%noreg
	%R1<def> = tLDRi %R1<kill>, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)]
	%R5<def> = tLDRi %R4, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	tSTRi %R1<kill>, %R4, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	tBL pred:14, pred:%noreg, <ga:@pushdecl>, <regmask %LR %D8 %D9 %D10 %D11 %D12 %D13 %D14 %D15 %Q4 %Q5 %Q6 %Q7 %R4 %R5 %R6 %R7 %R8 %R9 %R10 %R11 %S16 %S17 %S18 %S19 %S20 %S21 %S22 %S23 %S24 %S25 %S26 %S27 %S28 %S29 %S30 %S31 %D8_D10 %D9_D11 %D10_D12 %D11_D13 %D12_D14 %D13_D15 %Q4_Q5 %Q5_Q6 %Q6_Q7 %Q4_Q5_Q6_Q7 %R4_R5 %R6_R7 %R8_R9 %R10_R11 %D8_D9_D10 %D9_D10_D11 %D10_D11_D12 %D11_D12_D13 %D12_D13_D14 %D13_D14_D15 %D8_D10_D12 %D9_D11_D13 %D10_D12_D14 %D11_D13_D15 %D8_D10_D12_D14 %D9_D11_D13_D15 %D9_D10 %D11_D12 %D13_D14 %D9_D10_D11_D12 %D11_D12_D13_D14>, %LR<imp-def,dead>, %SP<imp-use>, %R0<imp-use>, %SP<imp-def>, %R0<imp-def>
	tSTRi %R5<kill>, %R4<kill>, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	tPOP_RET pred:14, pred:%noreg, %R4<def>, %R5<def>, %R7<def>, %PC<def>, %R0<imp-use>

# End machine code for function pushdecl_top_level.

# After Unpack machine instruction bundles:
# Machine code for function pushdecl_top_level: Post SSA
Frame Objects:
  fi#0: size=4, align=4, at location [SP-4]
  fi#1: size=4, align=4, at location [SP-8]
  fi#2: size=4, align=4, at location [SP-12]
  fi#3: size=4, align=4, at location [SP-16]
Function Live Ins: %R0

BB#0: derived from LLVM BB %0
    Live Ins: %R0 %R4 %R5 %R7 %LR
	tPUSH pred:14, pred:%noreg, %R4<kill>, %R5<kill>, %R7<kill>, %LR<kill>, %SP<imp-def>, %SP<imp-use>; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	%R7<def> = tADDrSPi %SP<kill>, 2, pred:14, pred:%noreg; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	%R4<def> = t2MOVi16 <ga:@current_binding_level>[TF=1], pred:14, pred:%noreg
	%R4<def,tied1> = t2MOVTi16 %R4<tied0>, <ga:@current_binding_level>[TF=2], pred:14, pred:%noreg
	%R1<def> = t2MOVi16 <ga:@global_binding_level>[TF=1], pred:14, pred:%noreg
	%R1<def,tied1> = t2MOVTi16 %R1<tied0>, <ga:@global_binding_level>[TF=2], pred:14, pred:%noreg
	%R1<def> = tLDRi %R1<kill>, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)]
	%R5<def> = tLDRi %R4, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	tSTRi %R1<kill>, %R4, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	tBL pred:14, pred:%noreg, <ga:@pushdecl>, <regmask %LR %D8 %D9 %D10 %D11 %D12 %D13 %D14 %D15 %Q4 %Q5 %Q6 %Q7 %R4 %R5 %R6 %R7 %R8 %R9 %R10 %R11 %S16 %S17 %S18 %S19 %S20 %S21 %S22 %S23 %S24 %S25 %S26 %S27 %S28 %S29 %S30 %S31 %D8_D10 %D9_D11 %D10_D12 %D11_D13 %D12_D14 %D13_D15 %Q4_Q5 %Q5_Q6 %Q6_Q7 %Q4_Q5_Q6_Q7 %R4_R5 %R6_R7 %R8_R9 %R10_R11 %D8_D9_D10 %D9_D10_D11 %D10_D11_D12 %D11_D12_D13 %D12_D13_D14 %D13_D14_D15 %D8_D10_D12 %D9_D11_D13 %D10_D12_D14 %D11_D13_D15 %D8_D10_D12_D14 %D9_D11_D13_D15 %D9_D10 %D11_D12 %D13_D14 %D9_D10_D11_D12 %D11_D12_D13_D14>, %LR<imp-def,dead>, %SP<imp-use>, %R0<imp-use>, %SP<imp-def>, %R0<imp-def>
	tSTRi %R5<kill>, %R4<kill>, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	tPOP_RET pred:14, pred:%noreg, %R4<def>, %R5<def>, %R7<def>, %PC<def>, %R0<imp-use>

# End machine code for function pushdecl_top_level.

# After optimise barriers pass:
# Machine code for function pushdecl_top_level: Post SSA
Frame Objects:
  fi#0: size=4, align=4, at location [SP-4]
  fi#1: size=4, align=4, at location [SP-8]
  fi#2: size=4, align=4, at location [SP-12]
  fi#3: size=4, align=4, at location [SP-16]
Function Live Ins: %R0

BB#0: derived from LLVM BB %0
    Live Ins: %R0 %R4 %R5 %R7 %LR
	tPUSH pred:14, pred:%noreg, %R4<kill>, %R5<kill>, %R7<kill>, %LR<kill>, %SP<imp-def>, %SP<imp-use>; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	%R7<def> = tADDrSPi %SP<kill>, 2, pred:14, pred:%noreg; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	%R4<def> = t2MOVi16 <ga:@current_binding_level>[TF=1], pred:14, pred:%noreg
	%R4<def,tied1> = t2MOVTi16 %R4<tied0>, <ga:@current_binding_level>[TF=2], pred:14, pred:%noreg
	%R1<def> = t2MOVi16 <ga:@global_binding_level>[TF=1], pred:14, pred:%noreg
	%R1<def,tied1> = t2MOVTi16 %R1<tied0>, <ga:@global_binding_level>[TF=2], pred:14, pred:%noreg
	%R1<def> = tLDRi %R1<kill>, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)]
	%R5<def> = tLDRi %R4, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	tSTRi %R1<kill>, %R4, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	tBL pred:14, pred:%noreg, <ga:@pushdecl>, <regmask %LR %D8 %D9 %D10 %D11 %D12 %D13 %D14 %D15 %Q4 %Q5 %Q6 %Q7 %R4 %R5 %R6 %R7 %R8 %R9 %R10 %R11 %S16 %S17 %S18 %S19 %S20 %S21 %S22 %S23 %S24 %S25 %S26 %S27 %S28 %S29 %S30 %S31 %D8_D10 %D9_D11 %D10_D12 %D11_D13 %D12_D14 %D13_D15 %Q4_Q5 %Q5_Q6 %Q6_Q7 %Q4_Q5_Q6_Q7 %R4_R5 %R6_R7 %R8_R9 %R10_R11 %D8_D9_D10 %D9_D10_D11 %D10_D11_D12 %D11_D12_D13 %D12_D13_D14 %D13_D14_D15 %D8_D10_D12 %D9_D11_D13 %D10_D12_D14 %D11_D13_D15 %D8_D10_D12_D14 %D9_D11_D13_D15 %D9_D10 %D11_D12 %D13_D14 %D9_D10_D11_D12 %D11_D12_D13_D14>, %LR<imp-def,dead>, %SP<imp-use>, %R0<imp-use>, %SP<imp-def>, %R0<imp-def>
	tSTRi %R5<kill>, %R4<kill>, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	tPOP_RET pred:14, pred:%noreg, %R4<def>, %R5<def>, %R7<def>, %PC<def>, %R0<imp-use>

# End machine code for function pushdecl_top_level.

# After ARM constant island placement and branch shortening pass:
# Machine code for function pushdecl_top_level: Post SSA, not tracking liveness
Frame Objects:
  fi#0: size=4, align=4, at location [SP-4]
  fi#1: size=4, align=4, at location [SP-8]
  fi#2: size=4, align=4, at location [SP-12]
  fi#3: size=4, align=4, at location [SP-16]
Function Live Ins: %R0

BB#0: derived from LLVM BB %0
    Live Ins: %R0 %R4 %R5 %R7 %LR
	tPUSH pred:14, pred:%noreg, %R4<kill>, %R5<kill>, %R7<kill>, %LR<kill>, %SP<imp-def>, %SP<imp-use>; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	%R7<def> = tADDrSPi %SP<kill>, 2, pred:14, pred:%noreg; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	%R4<def> = t2MOVi16 <ga:@current_binding_level>[TF=1], pred:14, pred:%noreg
	%R4<def,tied1> = t2MOVTi16 %R4<tied0>, <ga:@current_binding_level>[TF=2], pred:14, pred:%noreg
	%R1<def> = t2MOVi16 <ga:@global_binding_level>[TF=1], pred:14, pred:%noreg
	%R1<def,tied1> = t2MOVTi16 %R1<tied0>, <ga:@global_binding_level>[TF=2], pred:14, pred:%noreg
	%R1<def> = tLDRi %R1<kill>, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)]
	%R5<def> = tLDRi %R4, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	tSTRi %R1<kill>, %R4, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	tBL pred:14, pred:%noreg, <ga:@pushdecl>, <regmask %LR %D8 %D9 %D10 %D11 %D12 %D13 %D14 %D15 %Q4 %Q5 %Q6 %Q7 %R4 %R5 %R6 %R7 %R8 %R9 %R10 %R11 %S16 %S17 %S18 %S19 %S20 %S21 %S22 %S23 %S24 %S25 %S26 %S27 %S28 %S29 %S30 %S31 %D8_D10 %D9_D11 %D10_D12 %D11_D13 %D12_D14 %D13_D15 %Q4_Q5 %Q5_Q6 %Q6_Q7 %Q4_Q5_Q6_Q7 %R4_R5 %R6_R7 %R8_R9 %R10_R11 %D8_D9_D10 %D9_D10_D11 %D10_D11_D12 %D11_D12_D13 %D12_D13_D14 %D13_D14_D15 %D8_D10_D12 %D9_D11_D13 %D10_D12_D14 %D11_D13_D15 %D8_D10_D12_D14 %D9_D11_D13_D15 %D9_D10 %D11_D12 %D13_D14 %D9_D10_D11_D12 %D11_D12_D13_D14>, %LR<imp-def,dead>, %SP<imp-use>, %R0<imp-use>, %SP<imp-def>, %R0<imp-def>
	tSTRi %R5<kill>, %R4<kill>, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	tPOP_RET pred:14, pred:%noreg, %R4<def>, %R5<def>, %R7<def>, %PC<def>, %R0<imp-use>

# End machine code for function pushdecl_top_level.

# After Contiguously Lay Out Funclets:
# Machine code for function pushdecl_top_level: Post SSA, not tracking liveness
Frame Objects:
  fi#0: size=4, align=4, at location [SP-4]
  fi#1: size=4, align=4, at location [SP-8]
  fi#2: size=4, align=4, at location [SP-12]
  fi#3: size=4, align=4, at location [SP-16]
Function Live Ins: %R0

BB#0: derived from LLVM BB %0
    Live Ins: %R0 %R4 %R5 %R7 %LR
	tPUSH pred:14, pred:%noreg, %R4<kill>, %R5<kill>, %R7<kill>, %LR<kill>, %SP<imp-def>, %SP<imp-use>; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	%R7<def> = tADDrSPi %SP<kill>, 2, pred:14, pred:%noreg; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	%R4<def> = t2MOVi16 <ga:@current_binding_level>[TF=1], pred:14, pred:%noreg
	%R4<def,tied1> = t2MOVTi16 %R4<tied0>, <ga:@current_binding_level>[TF=2], pred:14, pred:%noreg
	%R1<def> = t2MOVi16 <ga:@global_binding_level>[TF=1], pred:14, pred:%noreg
	%R1<def,tied1> = t2MOVTi16 %R1<tied0>, <ga:@global_binding_level>[TF=2], pred:14, pred:%noreg
	%R1<def> = tLDRi %R1<kill>, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)]
	%R5<def> = tLDRi %R4, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	tSTRi %R1<kill>, %R4, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	tBL pred:14, pred:%noreg, <ga:@pushdecl>, <regmask %LR %D8 %D9 %D10 %D11 %D12 %D13 %D14 %D15 %Q4 %Q5 %Q6 %Q7 %R4 %R5 %R6 %R7 %R8 %R9 %R10 %R11 %S16 %S17 %S18 %S19 %S20 %S21 %S22 %S23 %S24 %S25 %S26 %S27 %S28 %S29 %S30 %S31 %D8_D10 %D9_D11 %D10_D12 %D11_D13 %D12_D14 %D13_D15 %Q4_Q5 %Q5_Q6 %Q6_Q7 %Q4_Q5_Q6_Q7 %R4_R5 %R6_R7 %R8_R9 %R10_R11 %D8_D9_D10 %D9_D10_D11 %D10_D11_D12 %D11_D12_D13 %D12_D13_D14 %D13_D14_D15 %D8_D10_D12 %D9_D11_D13 %D10_D12_D14 %D11_D13_D15 %D8_D10_D12_D14 %D9_D11_D13_D15 %D9_D10 %D11_D12 %D13_D14 %D9_D10_D11_D12 %D11_D12_D13_D14>, %LR<imp-def,dead>, %SP<imp-use>, %R0<imp-use>, %SP<imp-def>, %R0<imp-def>
	tSTRi %R5<kill>, %R4<kill>, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	tPOP_RET pred:14, pred:%noreg, %R4<def>, %R5<def>, %R7<def>, %PC<def>, %R0<imp-use>

# End machine code for function pushdecl_top_level.

# After StackMap Liveness Analysis:
# Machine code for function pushdecl_top_level: Post SSA, not tracking liveness
Frame Objects:
  fi#0: size=4, align=4, at location [SP-4]
  fi#1: size=4, align=4, at location [SP-8]
  fi#2: size=4, align=4, at location [SP-12]
  fi#3: size=4, align=4, at location [SP-16]
Function Live Ins: %R0

BB#0: derived from LLVM BB %0
    Live Ins: %R0 %R4 %R5 %R7 %LR
	tPUSH pred:14, pred:%noreg, %R4<kill>, %R5<kill>, %R7<kill>, %LR<kill>, %SP<imp-def>, %SP<imp-use>; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	%R7<def> = tADDrSPi %SP<kill>, 2, pred:14, pred:%noreg; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	%R4<def> = t2MOVi16 <ga:@current_binding_level>[TF=1], pred:14, pred:%noreg
	%R4<def,tied1> = t2MOVTi16 %R4<tied0>, <ga:@current_binding_level>[TF=2], pred:14, pred:%noreg
	%R1<def> = t2MOVi16 <ga:@global_binding_level>[TF=1], pred:14, pred:%noreg
	%R1<def,tied1> = t2MOVTi16 %R1<tied0>, <ga:@global_binding_level>[TF=2], pred:14, pred:%noreg
	%R1<def> = tLDRi %R1<kill>, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)]
	%R5<def> = tLDRi %R4, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	tSTRi %R1<kill>, %R4, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	tBL pred:14, pred:%noreg, <ga:@pushdecl>, <regmask %LR %D8 %D9 %D10 %D11 %D12 %D13 %D14 %D15 %Q4 %Q5 %Q6 %Q7 %R4 %R5 %R6 %R7 %R8 %R9 %R10 %R11 %S16 %S17 %S18 %S19 %S20 %S21 %S22 %S23 %S24 %S25 %S26 %S27 %S28 %S29 %S30 %S31 %D8_D10 %D9_D11 %D10_D12 %D11_D13 %D12_D14 %D13_D15 %Q4_Q5 %Q5_Q6 %Q6_Q7 %Q4_Q5_Q6_Q7 %R4_R5 %R6_R7 %R8_R9 %R10_R11 %D8_D9_D10 %D9_D10_D11 %D10_D11_D12 %D11_D12_D13 %D12_D13_D14 %D13_D14_D15 %D8_D10_D12 %D9_D11_D13 %D10_D12_D14 %D11_D13_D15 %D8_D10_D12_D14 %D9_D11_D13_D15 %D9_D10 %D11_D12 %D13_D14 %D9_D10_D11_D12 %D11_D12_D13_D14>, %LR<imp-def,dead>, %SP<imp-use>, %R0<imp-use>, %SP<imp-def>, %R0<imp-def>
	tSTRi %R5<kill>, %R4<kill>, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	tPOP_RET pred:14, pred:%noreg, %R4<def>, %R5<def>, %R7<def>, %PC<def>, %R0<imp-use>

# End machine code for function pushdecl_top_level.

# After Live DEBUG_VALUE analysis:
# Machine code for function pushdecl_top_level: Post SSA, not tracking liveness
Frame Objects:
  fi#0: size=4, align=4, at location [SP-4]
  fi#1: size=4, align=4, at location [SP-8]
  fi#2: size=4, align=4, at location [SP-12]
  fi#3: size=4, align=4, at location [SP-16]
Function Live Ins: %R0

BB#0: derived from LLVM BB %0
    Live Ins: %R0 %R4 %R5 %R7 %LR
	tPUSH pred:14, pred:%noreg, %R4<kill>, %R5<kill>, %R7<kill>, %LR<kill>, %SP<imp-def>, %SP<imp-use>; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	%R7<def> = tADDrSPi %SP<kill>, 2, pred:14, pred:%noreg; flags: FrameSetup
	CFI_INSTRUCTION <call frame instruction>; flags: FrameSetup
	%R4<def> = t2MOVi16 <ga:@current_binding_level>[TF=1], pred:14, pred:%noreg
	%R4<def,tied1> = t2MOVTi16 %R4<tied0>, <ga:@current_binding_level>[TF=2], pred:14, pred:%noreg
	%R1<def> = t2MOVi16 <ga:@global_binding_level>[TF=1], pred:14, pred:%noreg
	%R1<def,tied1> = t2MOVTi16 %R1<tied0>, <ga:@global_binding_level>[TF=2], pred:14, pred:%noreg
	%R1<def> = tLDRi %R1<kill>, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @global_binding_level to i32*)]
	%R5<def> = tLDRi %R4, 0, pred:14, pred:%noreg; mem:LD4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	tSTRi %R1<kill>, %R4, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	tBL pred:14, pred:%noreg, <ga:@pushdecl>, <regmask %LR %D8 %D9 %D10 %D11 %D12 %D13 %D14 %D15 %Q4 %Q5 %Q6 %Q7 %R4 %R5 %R6 %R7 %R8 %R9 %R10 %R11 %S16 %S17 %S18 %S19 %S20 %S21 %S22 %S23 %S24 %S25 %S26 %S27 %S28 %S29 %S30 %S31 %D8_D10 %D9_D11 %D10_D12 %D11_D13 %D12_D14 %D13_D15 %Q4_Q5 %Q5_Q6 %Q6_Q7 %Q4_Q5_Q6_Q7 %R4_R5 %R6_R7 %R8_R9 %R10_R11 %D8_D9_D10 %D9_D10_D11 %D10_D11_D12 %D11_D12_D13 %D12_D13_D14 %D13_D14_D15 %D8_D10_D12 %D9_D11_D13 %D10_D12_D14 %D11_D13_D15 %D8_D10_D12_D14 %D9_D11_D13_D15 %D9_D10 %D11_D12 %D13_D14 %D9_D10_D11_D12 %D11_D12_D13_D14>, %LR<imp-def,dead>, %SP<imp-use>, %R0<imp-use>, %SP<imp-def>, %R0<imp-def>
	tSTRi %R5<kill>, %R4<kill>, 0, pred:14, pred:%noreg; mem:ST4[bitcast (%struct.binding_level.2606** @current_binding_level to i32*)]
	tPOP_RET pred:14, pred:%noreg, %R4<def>, %R5<def>, %R7<def>, %PC<def>, %R0<imp-use>

# End machine code for function pushdecl_top_level.

