--- |
  ; ModuleID = 'dummy.ll'
...
---
name:            data_section
alignment:       1
exposesReturnsTwice: false
hasInlineAsm:    false
isSSA:           true
tracksRegLiveness: true
tracksSubRegLiveness: false
registers:       
  - { id: 0, class: rgpr }
  - { id: 1, class: gprnopc }
  - { id: 2, class: rgpr }
  - { id: 3, class: gpr }
  - { id: 4, class: rgpr }
  - { id: 5, class: rgpr }
  - { id: 6, class: gpr }
  - { id: 7, class: rgpr }
  - { id: 8, class: rgpr }
frameInfo:       
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    0
  adjustsStack:    false
  hasCalls:        true
  maxCallFrameSize: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
body:             |
  bb.0 (%ir-block.0, freq 16):
    successors: %bb.2(50), %bb.1(50)
  
    %0 = t2MOVi32imm @in_section
    %1 = t2LDRi12 %0, 0, 14, _, <0x2bef9e0> = !{!"unison-memory-partition", i32 0} :: (load 4 from @in_section)
    t2CMPri killed %1, 2, 14, _, implicit-def %cpsr
    t2Bcc %bb.2, 0, %cpsr
    t2B %bb.1, 14, _
  
  bb.1 (%ir-block.3, freq 8):
    successors: %bb.2(100)
  
    %2 = t2MOVi32imm @asm_out_file
    %3 = t2LDRi12 killed %2, 0, 14, _, <0x2bef9e0> = !{!"unison-memory-partition", i32 0} :: (load 4 from @asm_out_file)
    ADJCALLSTACKDOWN 0, 14, _, implicit-def dead %sp, implicit %sp
    %4 = t2MOVi32imm @.str
    %5 = t2MOVi32imm @.str.3
    %r0 = COPY %3
    %r1 = COPY %4
    %r2 = COPY %5
    tBL 14, _, @fprintf, csr_aapcs, implicit-def dead %lr, implicit %sp, implicit %r0, implicit %r1, implicit %r2, implicit-def %sp, implicit-def %r0
    ADJCALLSTACKUP 0, 0, 14, _, implicit-def dead %sp, implicit %sp
    %8 = t2MOVi 2, 14, _, _
    t2STRi12 killed %8, %0, 0, 14, _, <0x2befad0> = !{!"unison-memory-partition", i32 1} :: (store 4 into @in_section)
  
  bb.2 (%ir-block.6, freq 16):
    liveouts:
  
    tBX_RET 14, _

...
---
unison-test-mir-version: null
unison-test-target: ARM
unison-test-goal:
- speed
unison-test-expected-cost:
- 36
unison-test-function: null
unison-test-expected-proven: true
unison-test-strictly-better: null
unison-test-expected-has-solution: false
...
