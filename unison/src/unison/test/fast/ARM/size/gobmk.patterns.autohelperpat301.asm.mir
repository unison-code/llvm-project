--- |
  ; ModuleID = 'gobmk.patterns.autohelperpat301.ll'
  target datalayout = "e-m:e-p:32:32-i64:64-v128:64:128-a:0:32-n32-S64"
  target triple = "armv6t2-pc-linux-eabi"
  
  %struct.influence_data.965 = type opaque
  
  @transformation = external global [1369 x [8 x i32]], align 4
  @initial_white_influence = external global %struct.influence_data.965, align 1
  @initial_black_influence = external global %struct.influence_data.965, align 1
  
  ; Function Attrs: nounwind
  define hidden i32 @autohelperpat301(i32 %trans, i32 %move, i32 %color, i32 %action) #0 {
    %1 = getelementptr inbounds [1369 x [8 x i32]], [1369 x [8 x i32]]* @transformation, i32 0, i32 795, i32 %trans
    %2 = load i32, i32* %1, align 4
    %3 = add nsw i32 %2, %move
    %4 = icmp eq i32 %color, 2
    %5 = select i1 %4, %struct.influence_data.965* @initial_white_influence, %struct.influence_data.965* @initial_black_influence
    %6 = tail call i32 @whose_moyo(%struct.influence_data.965* %5, i32 %3) #2
    %7 = icmp eq i32 %6, %color
    %8 = zext i1 %7 to i32
    ret i32 %8
  }
  
  declare i32 @whose_moyo(%struct.influence_data.965*, i32) #1
  
  attributes #0 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="arm1156t2f-s" "target-features"="+thumb-mode" "unsafe-fp-math"="false" "use-soft-float"="false" }
  attributes #1 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="arm1156t2f-s" "target-features"="+thumb-mode" "unsafe-fp-math"="false" "use-soft-float"="false" }
  attributes #2 = { nounwind }
  
  !llvm.module.flags = !{!0, !1}
  !llvm.ident = !{!2}
  
  !0 = !{i32 1, !"wchar_size", i32 4}
  !1 = !{i32 1, !"min_enum_size", i32 4}
  !2 = !{!"clang version 3.8.0 (http://llvm.org/git/clang.git 2d49f0a0ae8366964a93e3b7b26e29679bee7160) (http://llvm.org/git/llvm.git 60bc66b44837125843b58ed3e0fd2e6bb948d839)"}

...
---
name:            autohelperpat301
alignment:       1
exposesReturnsTwice: false
hasInlineAsm:    false
isSSA:           false
tracksRegLiveness: false
tracksSubRegLiveness: false
liveins:         
  - { reg: '%r0' }
  - { reg: '%r1' }
  - { reg: '%r2' }
calleeSavedRegisters: [ '%lr', '%d8', '%d9', '%d10', '%d11', '%d12', '%d13', 
                        '%d14', '%d15', '%q4', '%q5', '%q6', '%q7', '%r4', 
                        '%r5', '%r6', '%r7', '%r8', '%r9', '%r10', '%r11', 
                        '%s16', '%s17', '%s18', '%s19', '%s20', '%s21', 
                        '%s22', '%s23', '%s24', '%s25', '%s26', '%s27', 
                        '%s28', '%s29', '%s30', '%s31', '%d8_d10', '%d9_d11', 
                        '%d10_d12', '%d11_d13', '%d12_d14', '%d13_d15', 
                        '%q4_q5', '%q5_q6', '%q6_q7', '%q4_q5_q6_q7', '%r4_r5', 
                        '%r6_r7', '%r8_r9', '%r10_r11', '%d8_d9_d10', '%d9_d10_d11', 
                        '%d10_d11_d12', '%d11_d12_d13', '%d12_d13_d14', 
                        '%d13_d14_d15', '%d8_d10_d12', '%d9_d11_d13', '%d10_d12_d14', 
                        '%d11_d13_d15', '%d8_d10_d12_d14', '%d9_d11_d13_d15', 
                        '%d9_d10', '%d11_d12', '%d13_d14', '%d9_d10_d11_d12', 
                        '%d11_d12_d13_d14' ]
frameInfo:       
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       16
  offsetAdjustment: -8
  maxAlignment:    4
  adjustsStack:    true
  hasCalls:        true
  maxCallFrameSize: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
stack:           
  - { id: 0, type: spill-slot, offset: -4, size: 4, alignment: 4, callee-saved-register: '%lr' }
  - { id: 1, type: spill-slot, offset: -8, size: 4, alignment: 4, callee-saved-register: '%r7' }
  - { id: 2, type: spill-slot, offset: -12, size: 4, alignment: 4, callee-saved-register: '%r6' }
  - { id: 3, type: spill-slot, offset: -16, size: 4, alignment: 4, callee-saved-register: '%r4' }
body:             |
  bb.0 (%ir-block.0, freq 8):
    liveins: %r0, %r1, %r2, %r4, %r6, %r7, %lr
    liveouts: %r0
  
    frame-setup tPUSH 14, _, killed %r4, killed %r6, killed %r7, killed %lr, implicit-def %sp, implicit %sp
    frame-setup CFI_INSTRUCTION .cfi_def_cfa_offset 16
    frame-setup CFI_INSTRUCTION .cfi_offset %lr, -4
    frame-setup CFI_INSTRUCTION .cfi_offset %r7, -8
    frame-setup CFI_INSTRUCTION .cfi_offset %r6, -12
    frame-setup CFI_INSTRUCTION .cfi_offset %r4, -16
    %r7 = frame-setup tADDrSPi killed %sp, 2, 14, _
    frame-setup CFI_INSTRUCTION .cfi_def_cfa %r7, 8
    %r4 = tMOVr %r2, 14, _
    %r2 = t2MOVi16 target-flags(<unknown>) @transformation, 14, _
    %r2 = t2MOVTi16 %r2, target-flags(<unknown>) @transformation, 14, _
    %r0 = t2ADDrs killed %r2, killed %r0, 18, 14, _, _
    %r2 = t2MOVi16 25440, 14, _
    %r2 = tLDRr killed %r0, killed %r2, 14, _ :: (load 4 from %ir.1)
    %r3 = t2MOVi16 target-flags(<unknown>) @initial_white_influence, 14, _
    %r3 = t2MOVTi16 %r3, target-flags(<unknown>) @initial_white_influence, 14, _
    %r0 = t2MOVi16 target-flags(<unknown>) @initial_black_influence, 14, _
    %r0 = t2MOVTi16 %r0, target-flags(<unknown>) @initial_black_influence, 14, _
    tCMPi8 %r4, 2, 14, _, implicit-def %cpsr
    t2IT 0, 8, implicit-def %itstate
    %r0 = tMOVr killed %r3, 0, killed %cpsr, implicit killed %itstate
    %r1 = tADDhirr killed %r1, killed %r2, 14, _
    tBL 14, _, @whose_moyo, csr_aapcs, implicit-def dead %lr, implicit %sp, implicit %r0, implicit %r1, implicit-def %sp, implicit-def %r0
    %r1, dead %cpsr = tMOVi8 0, 14, _
    tCMPr killed %r0, killed %r4, 14, _, implicit-def %cpsr
    t2IT 0, 8, implicit-def %itstate
    %r1 = tMOVi8 _, 1, 0, killed %cpsr, implicit killed %itstate
    %r0 = tMOVr killed %r1, 14, _
    tPOP_RET 14, _, def %r4, def %r6, def %r7, def %pc, implicit %r0

...
