--- |
  ; ModuleID = 'gcc.expmed.ceil_log2.ll'
  target datalayout = "e-m:e-p:32:32-i64:64-v128:64:128-a:0:32-n32-S64"
  target triple = "armv6t2-pc-linux-eabi"
  
  ; Function Attrs: nounwind
  define i32 @ceil_log2(i32 %x) #0 {
    %1 = add i32 %x, -1
    %2 = tail call i32 @floor_log2_wide(i32 %1) #2
    %3 = add nsw i32 %2, 1
    ret i32 %3
  }
  
  declare i32 @floor_log2_wide(i32) #1
  
  attributes #0 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="arm1156t2f-s" "target-features"="+thumb-mode" "unsafe-fp-math"="false" "use-soft-float"="false" }
  attributes #1 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="arm1156t2f-s" "target-features"="+thumb-mode" "unsafe-fp-math"="false" "use-soft-float"="false" }
  attributes #2 = { nounwind }
  
  !llvm.module.flags = !{!0, !1}
  !llvm.ident = !{!2}
  
  !0 = !{i32 1, !"wchar_size", i32 4}
  !1 = !{i32 1, !"min_enum_size", i32 4}
  !2 = !{!"clang version 3.8.0 (http://llvm.org/git/clang.git 2d49f0a0ae8366964a93e3b7b26e29679bee7160) (http://llvm.org/git/llvm.git 60bc66b44837125843b58ed3e0fd2e6bb948d839)"}

...
---
name:            ceil_log2
alignment:       1
exposesReturnsTwice: false
hasInlineAsm:    false
isSSA:           false
tracksRegLiveness: false
tracksSubRegLiveness: false
liveins:         
  - { reg: '%r0' }
calleeSavedRegisters: [ '%lr', '%d8', '%d9', '%d10', '%d11', '%d12', '%d13', 
                        '%d14', '%d15', '%q4', '%q5', '%q6', '%q7', '%r4', 
                        '%r5', '%r6', '%r7', '%r8', '%r9', '%r10', '%r11', 
                        '%s16', '%s17', '%s18', '%s19', '%s20', '%s21', 
                        '%s22', '%s23', '%s24', '%s25', '%s26', '%s27', 
                        '%s28', '%s29', '%s30', '%s31', '%d8_d10', '%d9_d11', 
                        '%d10_d12', '%d11_d13', '%d12_d14', '%d13_d15', 
                        '%q4_q5', '%q5_q6', '%q6_q7', '%q4_q5_q6_q7', '%r4_r5', 
                        '%r6_r7', '%r8_r9', '%r10_r11', '%d8_d9_d10', '%d9_d10_d11', 
                        '%d10_d11_d12', '%d11_d12_d13', '%d12_d13_d14', 
                        '%d13_d14_d15', '%d8_d10_d12', '%d9_d11_d13', '%d10_d12_d14', 
                        '%d11_d13_d15', '%d8_d10_d12_d14', '%d9_d11_d13_d15', 
                        '%d9_d10', '%d11_d12', '%d13_d14', '%d9_d10_d11_d12', 
                        '%d11_d12_d13_d14' ]
frameInfo:       
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       8
  offsetAdjustment: 0
  maxAlignment:    4
  adjustsStack:    true
  hasCalls:        true
  maxCallFrameSize: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
stack:           
  - { id: 0, type: spill-slot, offset: -4, size: 4, alignment: 4, callee-saved-register: '%lr' }
  - { id: 1, type: spill-slot, offset: -8, size: 4, alignment: 4, callee-saved-register: '%r7' }
body:             |
  bb.0 (%ir-block.0, freq 8):
    liveins: %r0, %r7, %lr
    liveouts: %r0
  
    frame-setup tPUSH 14, _, killed %r7, killed %lr, implicit-def %sp, implicit %sp
    frame-setup CFI_INSTRUCTION .cfi_def_cfa_offset 8
    frame-setup CFI_INSTRUCTION .cfi_offset %lr, -4
    frame-setup CFI_INSTRUCTION .cfi_offset %r7, -8
    %r7 = frame-setup tMOVr killed %sp, 14, _
    frame-setup CFI_INSTRUCTION .cfi_def_cfa_register %r7
    %r0, dead %cpsr = tSUBi8 killed %r0, 1, 14, _
    tBL 14, _, @floor_log2_wide, csr_aapcs, implicit-def dead %lr, implicit %sp, implicit %r0, implicit-def %sp, implicit-def %r0
    %r0, dead %cpsr = tADDi8 killed %r0, 1, 14, _
    tPOP_RET 14, _, def %r7, def %pc, implicit %r0

...
