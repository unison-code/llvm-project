--- |
  ; ModuleID = 'dummy.ll'
...
---
name:            ceil_log2
alignment:       2
exposesReturnsTwice: false
hasInlineAsm:    false
isSSA:           true
tracksRegLiveness: true
tracksSubRegLiveness: false
registers:       
  - { id: 0, class: gpr32 }
  - { id: 1, class: gpr32 }
  - { id: 2, class: gpr32 }
  - { id: 3, class: gpr32 }
  - { id: 4, class: gpr32 }
  - { id: 5, class: gpr32 }
  - { id: 6, class: gpr32 }
  - { id: 7, class: gpr32 }
liveins:         
  - { reg: '%a0', virtual-reg: '%0' }
  - { reg: '%t9' }
  - { reg: '%v0' }
frameInfo:       
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        true
  maxCallFrameSize: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
body:             |
  bb.0 (%ir-block.0, freq 8):
    liveins: %a0, %t9, %v0
    liveouts: %v0
  
    %1 = ADDu %v0, %t9
    %0 = COPY %a0
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %2 = ADDiu %0, -1
    %3 = LW %1, target-flags(<unknown>) @floor_log2_wide, <0x3541fd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry @floor_log2_wide)
    %a0 = COPY %2
    %gp = COPY %1
    %t9 = COPY %3
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %4 = COPY %v0
    %5 = ADDiu %4, 1
    %v0 = COPY %5
    RetRA implicit %v0

...
---
unison-test-mir-version: null
unison-test-target: Mips
unison-test-goal:
- speed
unison-test-expected-cost:
- 14
unison-test-function: null
unison-test-expected-proven: true
unison-test-strictly-better: null
unison-test-expected-has-solution: false
...
