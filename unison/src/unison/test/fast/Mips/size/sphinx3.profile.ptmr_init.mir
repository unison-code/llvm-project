--- |
  ; ModuleID = 'dummy.ll'
...
---
name:            ptmr_init
alignment:       2
exposesReturnsTwice: false
hasInlineAsm:    false
isSSA:           true
tracksRegLiveness: true
tracksSubRegLiveness: false
registers:       
  - { id: 0, class: gpr32 }
liveins:         
  - { reg: '%a0', virtual-reg: '%0' }
frameInfo:       
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        false
  maxCallFrameSize: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
body:             |
  bb.0 (%ir-block.0, freq 8):
    liveins: %a0
    liveouts:
  
    %0 = COPY %a0
    SW %zero, %0, 36, <0x20163e0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.2 + 28, align 8)
    SW %zero, %0, 32, <0x20163e0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.2 + 24, align 8)
    SW %zero, %0, 28, <0x20163e0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.2 + 20, align 8)
    SW %zero, %0, 24, <0x20163e0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.2 + 16, align 8)
    SW %zero, %0, 20, <0x20163e0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.2 + 12, align 8)
    SW %zero, %0, 16, <0x20163e0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.2 + 8, align 8)
    SW %zero, %0, 12, <0x20163e0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.2 + 4, align 8)
    SW %zero, %0, 8, <0x20163e0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.2, align 8)
    RetRA

...
---
unison-test-mir-version: null
unison-test-target: Mips
unison-test-goal:
- size
unison-test-expected-cost:
- 9
unison-test-function: null
unison-test-expected-proven: true
unison-test-strictly-better: null
unison-test-expected-has-solution: false
...
