--- |
  ; ModuleID = 'gobmk.owl_vital_apat.autohelperowl_vital_apat34.ll'
  target datalayout = "E-m:m-p:32:32-i8:8:32-i16:16:32-i64:64-n32-S64"
  target triple = "mips--linux-gnu"
  
  @transformation = external global [1369 x [8 x i32]], align 4
  
  ; Function Attrs: nounwind
  define hidden i32 @autohelperowl_vital_apat34(i32 signext %trans, i32 signext %move, i32 signext %color, i32 signext %action) #0 {
    %1 = getelementptr inbounds [1369 x [8 x i32]], [1369 x [8 x i32]]* @transformation, i32 0, i32 758, i32 %trans
    %2 = load i32, i32* %1, align 4
    %3 = add nsw i32 %2, %move
    %4 = tail call i32 (i32, i32, i32, ...) @play_attack_defend2_n(i32 signext %color, i32 signext 0, i32 signext 1, i32 signext %move, i32 signext %3, i32 signext %move) #2
    ret i32 %4
  }
  
  declare i32 @play_attack_defend2_n(i32 signext, i32 signext, i32 signext, ...) #1
  
  attributes #0 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="mips32" "target-features"="+mips32r2" "unsafe-fp-math"="false" "use-soft-float"="false" }
  attributes #1 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="mips32" "target-features"="+mips32r2" "unsafe-fp-math"="false" "use-soft-float"="false" }
  attributes #2 = { nounwind }
  
  !llvm.ident = !{!0}
  
  !0 = !{!"clang version 3.8.0 (http://llvm.org/git/clang.git 2d49f0a0ae8366964a93e3b7b26e29679bee7160) (http://llvm.org/git/llvm.git 60bc66b44837125843b58ed3e0fd2e6bb948d839)"}

...
---
name:            autohelperowl_vital_apat34
alignment:       2
exposesReturnsTwice: false
hasInlineAsm:    false
isSSA:           false
tracksRegLiveness: false
tracksSubRegLiveness: false
liveins:         
  - { reg: '%a0' }
  - { reg: '%a1' }
  - { reg: '%a2' }
  - { reg: '%t9' }
  - { reg: '%v0' }
calleeSavedRegisters: [ '%fp', '%ra', '%d10', '%d11', '%d12', '%d13', '%d14', 
                        '%d15', '%f20', '%f21', '%f22', '%f23', '%f24', 
                        '%f25', '%f26', '%f27', '%f28', '%f29', '%f30', 
                        '%f31', '%s0', '%s1', '%s2', '%s3', '%s4', '%s5', 
                        '%s6', '%s7' ]
frameInfo:       
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       32
  offsetAdjustment: 0
  maxAlignment:    4
  adjustsStack:    true
  hasCalls:        true
  maxCallFrameSize: 24
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
stack:           
  - { id: 0, type: spill-slot, offset: -4, size: 4, alignment: 4, callee-saved-register: '%ra' }
body:             |
  bb.0 (%ir-block.0, freq 8):
    liveins: %a0, %a1, %a2, %t9, %ra
    liveouts:
  
    %v0 = LUi target-flags(<unknown>) $_gp_disp
    %v0 = ADDiu %v0, target-flags(<unknown>) $_gp_disp
    %sp = ADDiu %sp, -32
    CFI_INSTRUCTION .cfi_def_cfa_offset 32
    SW killed %ra, %sp, 28 :: (store 4 into %stack.0)
    CFI_INSTRUCTION .cfi_offset %ra_64, -4
    %gp = ADDu %v0, %t9
    %at = OR %a1, %zero
    %v0 = SLL killed %a0, 2
    %v1 = LW %gp, target-flags(<unknown>) @transformation :: (load 4 from got)
    %v0 = ADDu killed %v1, killed %v0
    %v0 = LW killed %v0, 24256 :: (load 4 from %ir.1)
    SW %at, %sp, 20 :: (store 4 into unknown)
    %v0 = ADDu killed %v0, %at
    SW killed %v0, %sp, 16 :: (store 4 into unknown)
    %t9 = LW %gp, target-flags(<unknown>) @play_attack_defend2_n :: (load 4 from call-entry @play_attack_defend2_n)
    %a0 = OR killed %a2, %zero
    %a1 = ADDiu %zero, 0
    %a2 = ADDiu %zero, 1
    JALRPseudo %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit killed %a3, implicit %gp, implicit-def %sp, implicit-def %v0 {
      %a3 = OR killed %at, %zero
    }
    %ra = LW %sp, 28 :: (load 4 from %stack.0)
    PseudoReturn %ra {
      %sp = ADDiu %sp, 32
    }

...
