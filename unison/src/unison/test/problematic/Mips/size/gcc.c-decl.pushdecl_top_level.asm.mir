--- |
  ; ModuleID = 'gcc.c-decl.pushdecl_top_level.ll'
  target datalayout = "E-m:m-p:32:32-i8:8:32-i16:16:32-i64:64-n32-S64"
  target triple = "mips--linux-gnu"
  
  %struct.binding_level.2606 = type { %union.tree_node.2601*, %union.tree_node.2601*, %union.tree_node.2601*, %union.tree_node.2601*, %union.tree_node.2601*, %struct.binding_level.2606*, i8, i8, i8, i8, i8, i32, %union.tree_node.2601* }
  %union.tree_node.2601 = type { %struct.tree_type.2602, [24 x i8] }
  %struct.tree_type.2602 = type { %struct.tree_common.2603, %union.tree_node.2601*, %union.tree_node.2601*, %union.tree_node.2601*, %union.tree_node.2601*, i32, i32, i32, %union.tree_node.2601*, %union.tree_node.2601*, %union.anon.2.2604, %union.tree_node.2601*, %union.tree_node.2601*, %union.tree_node.2601*, %union.tree_node.2601*, %union.tree_node.2601*, %union.tree_node.2601*, %union.tree_node.2601*, i32, %struct.lang_type.2605* }
  %struct.tree_common.2603 = type { %union.tree_node.2601*, %union.tree_node.2601*, i32 }
  %union.anon.2.2604 = type { i32 }
  %struct.lang_type.2605 = type { i32, [1 x %union.tree_node.2601*] }
  
  @current_binding_level = external hidden global %struct.binding_level.2606*, align 4
  @global_binding_level = external hidden unnamed_addr global %struct.binding_level.2606*, align 4
  
  ; Function Attrs: nounwind
  declare %union.tree_node.2601* @pushdecl(%union.tree_node.2601*) #0
  
  ; Function Attrs: nounwind
  define %union.tree_node.2601* @pushdecl_top_level(%union.tree_node.2601* %x) #0 {
    %1 = load i32, i32* bitcast (%struct.binding_level.2606** @current_binding_level to i32*), align 4
    %2 = load i32, i32* bitcast (%struct.binding_level.2606** @global_binding_level to i32*), align 4
    store i32 %2, i32* bitcast (%struct.binding_level.2606** @current_binding_level to i32*), align 4
    %3 = tail call %union.tree_node.2601* @pushdecl(%union.tree_node.2601* %x)
    store i32 %1, i32* bitcast (%struct.binding_level.2606** @current_binding_level to i32*), align 4
    ret %union.tree_node.2601* %3
  }
  
  attributes #0 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="mips32" "target-features"="+mips32r2" "unsafe-fp-math"="false" "use-soft-float"="false" }
  
  !llvm.ident = !{!0}
  
  !0 = !{!"clang version 3.8.0 (http://llvm.org/git/clang.git 2d49f0a0ae8366964a93e3b7b26e29679bee7160) (http://llvm.org/git/llvm.git 60bc66b44837125843b58ed3e0fd2e6bb948d839)"}

...
---
name:            pushdecl_top_level
alignment:       2
exposesReturnsTwice: false
hasInlineAsm:    false
isSSA:           false
tracksRegLiveness: false
tracksSubRegLiveness: false
liveins:         
  - { reg: '%a0' }
  - { reg: '%t9' }
  - { reg: '%v0' }
calleeSavedRegisters: [ '%fp', '%ra', '%d10', '%d11', '%d12', '%d13', '%d14', 
                        '%d15', '%f20', '%f21', '%f22', '%f23', '%f24', 
                        '%f25', '%f26', '%f27', '%f28', '%f29', '%f30', 
                        '%f31', '%s0', '%s1', '%s2', '%s3', '%s4', '%s5', 
                        '%s6', '%s7' ]
frameInfo:       
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       32
  offsetAdjustment: 0
  maxAlignment:    4
  adjustsStack:    true
  hasCalls:        true
  maxCallFrameSize: 16
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
stack:           
  - { id: 0, type: spill-slot, offset: -4, size: 4, alignment: 4, callee-saved-register: '%ra' }
  - { id: 1, type: spill-slot, offset: -8, size: 4, alignment: 4, callee-saved-register: '%s1' }
  - { id: 2, type: spill-slot, offset: -12, size: 4, alignment: 4, callee-saved-register: '%s0' }
body:             |
  bb.0 (%ir-block.0, freq 8):
    liveins: %a0, %t9, %ra, %s1, %s0
    liveouts:
  
    %v0 = LUi target-flags(<unknown>) $_gp_disp
    %v0 = ADDiu %v0, target-flags(<unknown>) $_gp_disp
    %sp = ADDiu %sp, -32
    CFI_INSTRUCTION .cfi_def_cfa_offset 32
    SW killed %ra, %sp, 28 :: (store 4 into %stack.0)
    SW killed %s1, %sp, 24 :: (store 4 into %stack.1)
    SW killed %s0, %sp, 20 :: (store 4 into %stack.2)
    CFI_INSTRUCTION .cfi_offset %ra_64, -4
    CFI_INSTRUCTION .cfi_offset %s1_64, -8
    CFI_INSTRUCTION .cfi_offset %s0_64, -12
    %gp = ADDu %v0, %t9
    %s0 = LW %gp, target-flags(<unknown>) @current_binding_level :: (load 4 from got)
    %s1 = LW %s0, 0 :: (load 4 from `i32* bitcast (%struct.binding_level.2606** @current_binding_level to i32*)`)
    %at = LW %gp, target-flags(<unknown>) @global_binding_level :: (load 4 from got)
    %at = LW killed %at, 0 :: (load 4 from `i32* bitcast (%struct.binding_level.2606** @global_binding_level to i32*)`)
    SW killed %at, %s0, 0 :: (store 4 into `i32* bitcast (%struct.binding_level.2606** @current_binding_level to i32*)`)
    %t9 = LW %gp, target-flags(<unknown>) @pushdecl :: (load 4 from call-entry @pushdecl)
    JALRPseudo %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %gp, implicit-def %sp, implicit-def %v0 {
      NOP
    }
    SW killed %s1, killed %s0, 0 :: (store 4 into `i32* bitcast (%struct.binding_level.2606** @current_binding_level to i32*)`)
    %s0 = LW %sp, 20 :: (load 4 from %stack.2)
    %s1 = LW %sp, 24 :: (load 4 from %stack.1)
    %ra = LW %sp, 28 :: (load 4 from %stack.0)
    PseudoReturn %ra {
      %sp = ADDiu %sp, 32
    }

...
